//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A base class for common types of data that the data detection system
    /// matches.
    ///
    /// The DataDetection framework returns results in objects that are subclasses
    /// of `DDMatch`, which are specific to the type of matching data. Each object
    /// contains the matched string.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatch?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatch;
);

unsafe impl NSObjectProtocol for DDMatch {}

impl DDMatch {
    extern_methods!(
        /// A substring that the data detection system identifies from an original
        /// string as a common type of data.
        ///
        /// Use `DDMatch` subclasses that the data detection system provides for a
        /// semantic interpretation of this string.
        #[unsafe(method(matchedString))]
        #[unsafe(method_family = none)]
        pub unsafe fn matchedString(&self) -> Retained<NSString>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatch {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that contains a web link that the data detection system matches.
    ///
    /// The DataDetection framework returns a link match in a `DDMatchLink` object, which contains a
    /// <doc
    /// ://com.apple.documentation/documentation/foundation/url> (Swift) or
    /// <doc
    /// ://com.apple.documentation/documentation/foundation/nsurl> (Objective-C).
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchlink?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchLink;
);

unsafe impl NSObjectProtocol for DDMatchLink {}

impl DDMatchLink {
    extern_methods!(
        /// An address for a web resource, such as a webpage or image.
        #[unsafe(method(URL))]
        #[unsafe(method_family = none)]
        pub unsafe fn URL(&self) -> Retained<NSURL>;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchLink {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchLink {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that contains a phone number that the data detection system
    /// matches.
    ///
    /// The DataDetection framework returns a phone number match in a
    /// `DDMatchPhoneNumber` object, which contains a phone number, and optionally a
    /// label that categorizes the phone number.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchphonenumber?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchPhoneNumber;
);

unsafe impl NSObjectProtocol for DDMatchPhoneNumber {}

impl DDMatchPhoneNumber {
    extern_methods!(
        /// A string that represents a phone number.
        #[unsafe(method(phoneNumber))]
        #[unsafe(method_family = none)]
        pub unsafe fn phoneNumber(&self) -> Retained<NSString>;

        /// A string that categorizes a phone number, such as Home or Work.
        #[unsafe(method(label))]
        #[unsafe(method_family = none)]
        pub unsafe fn label(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchPhoneNumber {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchPhoneNumber {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that contains an email address that the data detection system
    /// matches.
    ///
    /// The DataDetection framework returns an email match in a
    /// `DDMatchEmailAddress` object, which includes an email address, and
    /// optionally a label that categorizes the email address.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchemailaddress?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchEmailAddress;
);

unsafe impl NSObjectProtocol for DDMatchEmailAddress {}

impl DDMatchEmailAddress {
    extern_methods!(
        /// A string that represents an email address.
        #[unsafe(method(emailAddress))]
        #[unsafe(method_family = none)]
        pub unsafe fn emailAddress(&self) -> Retained<NSString>;

        /// A string that categorizes an email address, such as Home or Work.
        #[unsafe(method(label))]
        #[unsafe(method_family = none)]
        pub unsafe fn label(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchEmailAddress {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchEmailAddress {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that contains a postal address that the data detection system
    /// matches.
    ///
    /// The DataDetection framework returns a postal address match in a
    /// `DDMatchPostalAddress` object, which optionally contains the matching parts
    /// of a postal address: street, city, state, postal code, and country.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchpostaladdress?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchPostalAddress;
);

unsafe impl NSObjectProtocol for DDMatchPostalAddress {}

impl DDMatchPostalAddress {
    extern_methods!(
        /// The street name in a postal address.
        #[unsafe(method(street))]
        #[unsafe(method_family = none)]
        pub unsafe fn street(&self) -> Option<Retained<NSString>>;

        /// The city name in a postal address.
        #[unsafe(method(city))]
        #[unsafe(method_family = none)]
        pub unsafe fn city(&self) -> Option<Retained<NSString>>;

        /// The state name in a postal address.
        #[unsafe(method(state))]
        #[unsafe(method_family = none)]
        pub unsafe fn state(&self) -> Option<Retained<NSString>>;

        /// The postal code in a postal address.
        #[unsafe(method(postalCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn postalCode(&self) -> Option<Retained<NSString>>;

        /// The country or region name in a postal address.
        #[unsafe(method(country))]
        #[unsafe(method_family = none)]
        pub unsafe fn country(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchPostalAddress {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchPostalAddress {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that represents a calendar date or date range that the data
    /// detection system matches.
    ///
    /// The DataDetection framework returns a calendar event match in a
    /// `DDMatchCalendarEvent` object, which has only a beginning date, only an end
    /// date, or both a beginning date and an end date.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchcalendarevent?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchCalendarEvent;
);

unsafe impl NSObjectProtocol for DDMatchCalendarEvent {}

impl DDMatchCalendarEvent {
    extern_methods!(
        /// A Boolean value that indicates whether the event is an all-day event.
        #[unsafe(method(isAllDay))]
        #[unsafe(method_family = none)]
        pub unsafe fn isAllDay(&self) -> bool;

        /// A date that represents the start of the event.
        #[unsafe(method(startDate))]
        #[unsafe(method_family = none)]
        pub unsafe fn startDate(&self) -> Option<Retained<NSDate>>;

        /// The time zone for the event’s start date.
        #[unsafe(method(startTimeZone))]
        #[unsafe(method_family = none)]
        pub unsafe fn startTimeZone(&self) -> Option<Retained<NSTimeZone>>;

        /// A date that represents the end of the event.
        #[unsafe(method(endDate))]
        #[unsafe(method_family = none)]
        pub unsafe fn endDate(&self) -> Option<Retained<NSDate>>;

        /// The time zone for the event’s end date.
        #[unsafe(method(endTimeZone))]
        #[unsafe(method_family = none)]
        pub unsafe fn endTimeZone(&self) -> Option<Retained<NSTimeZone>>;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchCalendarEvent {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchCalendarEvent {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that contains parcel tracking information that the data detection
    /// system matches.
    ///
    /// The DataDetection framework returns a shipment tracking number match in a
    /// `DDMatchShipmentTrackingNumber` object, which contains a carrier name and
    /// tracking identifier.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchshipmenttrackingnumber?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchShipmentTrackingNumber;
);

unsafe impl NSObjectProtocol for DDMatchShipmentTrackingNumber {}

impl DDMatchShipmentTrackingNumber {
    extern_methods!(
        /// The name of a parcel carrier.
        #[unsafe(method(carrier))]
        #[unsafe(method_family = none)]
        pub unsafe fn carrier(&self) -> Retained<NSString>;

        /// A string that represents a carrier’s tracking identifier for a parcel.
        #[unsafe(method(trackingNumber))]
        #[unsafe(method_family = none)]
        pub unsafe fn trackingNumber(&self) -> Retained<NSString>;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchShipmentTrackingNumber {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchShipmentTrackingNumber {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that contains a flight number that the data detection system
    /// matches.
    ///
    /// The DataDetection framework returns a flight number match in a
    /// `DDMatchFlightNumber` object, which contains an airline name and flight
    /// number.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchflightnumber?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchFlightNumber;
);

unsafe impl NSObjectProtocol for DDMatchFlightNumber {}

impl DDMatchFlightNumber {
    extern_methods!(
        /// The name of an airline.
        #[unsafe(method(airline))]
        #[unsafe(method_family = none)]
        pub unsafe fn airline(&self) -> Retained<NSString>;

        /// A string that represents a flight number.
        #[unsafe(method(flightNumber))]
        #[unsafe(method_family = none)]
        pub unsafe fn flightNumber(&self) -> Retained<NSString>;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchFlightNumber {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchFlightNumber {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object that contains an amount of money that the data detection system
    /// matches.
    ///
    /// The DataDetection framework returns a match for an amount of money in a
    /// `DDMatchMoneyAmount` object, which contains an amount of money and an ISO
    /// currency code.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/datadetection/ddmatchmoneyamount?language=objc)
    #[unsafe(super(DDMatch, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct DDMatchMoneyAmount;
);

unsafe impl NSObjectProtocol for DDMatchMoneyAmount {}

impl DDMatchMoneyAmount {
    extern_methods!(
        /// A string that contains an ISO currency code, which the data detection system
        /// identifies from the matched string and user preferences.
        #[unsafe(method(currency))]
        #[unsafe(method_family = none)]
        pub unsafe fn currency(&self) -> Retained<NSString>;

        /// A number that represents an amount of money.
        #[unsafe(method(amount))]
        #[unsafe(method_family = none)]
        pub unsafe fn amount(&self) -> c_double;
    );
}

/// Methods declared on superclass `DDMatch`.
impl DDMatchMoneyAmount {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl DDMatchMoneyAmount {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
