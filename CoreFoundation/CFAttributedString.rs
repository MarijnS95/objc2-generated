//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/cfattributedstringref?language=objc)
pub type CFAttributedStringRef = *const c_void;

/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/cfmutableattributedstringref?language=objc)
pub type CFMutableAttributedStringRef = *mut c_void;

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDictionary"))]
    pub fn CFAttributedStringCreate(
        alloc: CFAllocatorRef,
        str: CFStringRef,
        attributes: CFDictionaryRef,
    ) -> CFAttributedStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringCreateWithSubstring(
        alloc: CFAllocatorRef,
        a_str: CFAttributedStringRef,
        range: CFRange,
    ) -> CFAttributedStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringCreateCopy(
        alloc: CFAllocatorRef,
        a_str: CFAttributedStringRef,
    ) -> CFAttributedStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringGetString(a_str: CFAttributedStringRef) -> CFStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringGetLength(a_str: CFAttributedStringRef) -> CFIndex;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDictionary"))]
    pub fn CFAttributedStringGetAttributes(
        a_str: CFAttributedStringRef,
        loc: CFIndex,
        effective_range: *mut CFRange,
    ) -> CFDictionaryRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringGetAttribute(
        a_str: CFAttributedStringRef,
        loc: CFIndex,
        attr_name: CFStringRef,
        effective_range: *mut CFRange,
    ) -> CFTypeRef;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDictionary"))]
    pub fn CFAttributedStringGetAttributesAndLongestEffectiveRange(
        a_str: CFAttributedStringRef,
        loc: CFIndex,
        in_range: CFRange,
        longest_effective_range: *mut CFRange,
    ) -> CFDictionaryRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringGetAttributeAndLongestEffectiveRange(
        a_str: CFAttributedStringRef,
        loc: CFIndex,
        attr_name: CFStringRef,
        in_range: CFRange,
        longest_effective_range: *mut CFRange,
    ) -> CFTypeRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringCreateMutableCopy(
        alloc: CFAllocatorRef,
        max_length: CFIndex,
        a_str: CFAttributedStringRef,
    ) -> CFMutableAttributedStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringCreateMutable(
        alloc: CFAllocatorRef,
        max_length: CFIndex,
    ) -> CFMutableAttributedStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringReplaceString(
        a_str: CFMutableAttributedStringRef,
        range: CFRange,
        replacement: CFStringRef,
    );
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringGetMutableString(
        a_str: CFMutableAttributedStringRef,
    ) -> CFMutableStringRef;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDictionary"))]
    pub fn CFAttributedStringSetAttributes(
        a_str: CFMutableAttributedStringRef,
        range: CFRange,
        replacement: CFDictionaryRef,
        clear_other_attributes: Boolean,
    );
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringSetAttribute(
        a_str: CFMutableAttributedStringRef,
        range: CFRange,
        attr_name: CFStringRef,
        value: CFTypeRef,
    );
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringRemoveAttribute(
        a_str: CFMutableAttributedStringRef,
        range: CFRange,
        attr_name: CFStringRef,
    );
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringReplaceAttributedString(
        a_str: CFMutableAttributedStringRef,
        range: CFRange,
        replacement: CFAttributedStringRef,
    );
}

extern "C-unwind" {
    pub fn CFAttributedStringBeginEditing(a_str: CFMutableAttributedStringRef);
}

extern "C-unwind" {
    pub fn CFAttributedStringEndEditing(a_str: CFMutableAttributedStringRef);
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFAttributedStringGetBidiLevelsAndResolvedDirections(
        attributed_string: CFAttributedStringRef,
        range: CFRange,
        base_direction: i8,
        bidi_levels: *mut u8,
        base_directions: *mut u8,
    ) -> bool;
}
