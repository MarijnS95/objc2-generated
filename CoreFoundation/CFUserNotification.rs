//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::cell::UnsafeCell;
use core::ffi::*;
use core::marker::{PhantomData, PhantomPinned};

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/cfusernotificationref?language=objc)
#[repr(C)]
pub struct CFUserNotificationRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

cf_type!(
    #[encoding_name = "__CFUserNotification"]
    unsafe impl CFUserNotificationRef {}
);

/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/cfusernotificationcallback?language=objc)
#[cfg(feature = "CFBase")]
pub type CFUserNotificationCallBack =
    Option<unsafe extern "C-unwind" fn(*mut CFUserNotificationRef, CFOptionFlags)>;

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFUserNotificationGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDate", feature = "CFDictionary"))]
    pub fn CFUserNotificationCreate(
        allocator: Option<&CFAllocatorRef>,
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        error: *mut i32,
        dictionary: Option<&CFDictionaryRef>,
    ) -> *mut CFUserNotificationRef;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDate"))]
    pub fn CFUserNotificationReceiveResponse(
        user_notification: Option<&CFUserNotificationRef>,
        timeout: CFTimeInterval,
        response_flags: *mut CFOptionFlags,
    ) -> i32;
}

extern "C-unwind" {
    #[cfg(feature = "CFBase")]
    pub fn CFUserNotificationGetResponseValue(
        user_notification: Option<&CFUserNotificationRef>,
        key: Option<&CFStringRef>,
        idx: CFIndex,
    ) -> *mut CFStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFDictionary")]
    pub fn CFUserNotificationGetResponseDictionary(
        user_notification: Option<&CFUserNotificationRef>,
    ) -> *mut CFDictionaryRef;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDate", feature = "CFDictionary"))]
    pub fn CFUserNotificationUpdate(
        user_notification: Option<&CFUserNotificationRef>,
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        dictionary: Option<&CFDictionaryRef>,
    ) -> i32;
}

extern "C-unwind" {
    pub fn CFUserNotificationCancel(user_notification: Option<&CFUserNotificationRef>) -> i32;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFRunLoop"))]
    pub fn CFUserNotificationCreateRunLoopSource(
        allocator: Option<&CFAllocatorRef>,
        user_notification: Option<&CFUserNotificationRef>,
        callout: CFUserNotificationCallBack,
        order: CFIndex,
    ) -> *mut CFRunLoopSourceRef;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDate", feature = "CFURL"))]
    pub fn CFUserNotificationDisplayNotice(
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        icon_url: Option<&CFURLRef>,
        sound_url: Option<&CFURLRef>,
        localization_url: Option<&CFURLRef>,
        alert_header: Option<&CFStringRef>,
        alert_message: Option<&CFStringRef>,
        default_button_title: Option<&CFStringRef>,
    ) -> i32;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFBase", feature = "CFDate", feature = "CFURL"))]
    pub fn CFUserNotificationDisplayAlert(
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        icon_url: Option<&CFURLRef>,
        sound_url: Option<&CFURLRef>,
        localization_url: Option<&CFURLRef>,
        alert_header: Option<&CFStringRef>,
        alert_message: Option<&CFStringRef>,
        default_button_title: Option<&CFStringRef>,
        alternate_button_title: Option<&CFStringRef>,
        other_button_title: Option<&CFStringRef>,
        response_flags: *mut CFOptionFlags,
    ) -> i32;
}

/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationstopalertlevel?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationStopAlertLevel: CFOptionFlags = 0;
/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationnotealertlevel?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationNoteAlertLevel: CFOptionFlags = 1;
/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationcautionalertlevel?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationCautionAlertLevel: CFOptionFlags = 2;
/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationplainalertlevel?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationPlainAlertLevel: CFOptionFlags = 3;

/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationdefaultresponse?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationDefaultResponse: CFOptionFlags = 0;
/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationalternateresponse?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationAlternateResponse: CFOptionFlags = 1;
/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationotherresponse?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationOtherResponse: CFOptionFlags = 2;
/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationcancelresponse?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationCancelResponse: CFOptionFlags = 3;

/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationnodefaultbuttonflag?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationNoDefaultButtonFlag: CFOptionFlags = 1 << 5;
/// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationuseradiobuttonsflag?language=objc)
#[cfg(feature = "CFBase")]
pub const kCFUserNotificationUseRadioButtonsFlag: CFOptionFlags = 1 << 6;

// TODO: pub fn CFUserNotificationCheckBoxChecked(i: CFIndex,) -> CFOptionFlags;

// TODO: pub fn CFUserNotificationSecureTextField(i: CFIndex,) -> CFOptionFlags;

// TODO: pub fn CFUserNotificationPopUpSelection(n: CFIndex,) -> CFOptionFlags;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationiconurlkey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationIconURLKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationsoundurlkey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationSoundURLKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationlocalizationurlkey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationLocalizationURLKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationalertheaderkey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationAlertHeaderKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationalertmessagekey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationAlertMessageKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationdefaultbuttontitlekey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationDefaultButtonTitleKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationalternatebuttontitlekey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationAlternateButtonTitleKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationotherbuttontitlekey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationOtherButtonTitleKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationprogressindicatorvaluekey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationProgressIndicatorValueKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationpopuptitleskey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationPopUpTitlesKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationtextfieldtitleskey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationTextFieldTitlesKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationcheckboxtitleskey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationCheckBoxTitlesKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationtextfieldvalueskey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationTextFieldValuesKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationpopupselectionkey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationPopUpSelectionKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationalerttopmostkey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationAlertTopMostKey: Option<&'static CFStringRef>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corefoundation/kcfusernotificationkeyboardtypeskey?language=objc)
    #[cfg(feature = "CFBase")]
    pub static kCFUserNotificationKeyboardTypesKey: Option<&'static CFStringRef>;
}
