//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CBCharacteristicProperties(pub NSUInteger);
impl CBCharacteristicProperties {
    pub const CBCharacteristicPropertyBroadcast: Self = Self(0x01);
    pub const CBCharacteristicPropertyRead: Self = Self(0x02);
    pub const CBCharacteristicPropertyWriteWithoutResponse: Self = Self(0x04);
    pub const CBCharacteristicPropertyWrite: Self = Self(0x08);
    pub const CBCharacteristicPropertyNotify: Self = Self(0x10);
    pub const CBCharacteristicPropertyIndicate: Self = Self(0x20);
    pub const CBCharacteristicPropertyAuthenticatedSignedWrites: Self = Self(0x40);
    pub const CBCharacteristicPropertyExtendedProperties: Self = Self(0x80);
    pub const CBCharacteristicPropertyNotifyEncryptionRequired: Self = Self(0x100);
    pub const CBCharacteristicPropertyIndicateEncryptionRequired: Self = Self(0x200);
}

unsafe impl Encode for CBCharacteristicProperties {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for CBCharacteristicProperties {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CBAttribute")]
    pub struct CBCharacteristic;

    #[cfg(feature = "CBAttribute")]
    unsafe impl ClassType for CBCharacteristic {
        #[inherits(NSObject)]
        type Super = CBAttribute;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CBAttribute")]
unsafe impl NSObjectProtocol for CBCharacteristic {}

extern_methods!(
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBCharacteristic {
        #[cfg(feature = "CBService")]
        #[method_id(@__retain_semantics Other service)]
        pub unsafe fn service(&self) -> Option<Id<CBService>>;

        #[method(properties)]
        pub unsafe fn properties(&self) -> CBCharacteristicProperties;

        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self) -> Option<Id<NSData>>;

        #[cfg(feature = "CBDescriptor")]
        #[method_id(@__retain_semantics Other descriptors)]
        pub unsafe fn descriptors(&self) -> Option<Id<NSArray<CBDescriptor>>>;

        #[deprecated]
        #[method(isBroadcasted)]
        pub unsafe fn isBroadcasted(&self) -> bool;

        #[method(isNotifying)]
        pub unsafe fn isNotifying(&self) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `CBAttribute`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBCharacteristic {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBCharacteristic {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CBAttributePermissions(pub NSUInteger);
impl CBAttributePermissions {
    #[doc(alias = "CBAttributePermissionsReadable")]
    pub const Readable: Self = Self(0x01);
    #[doc(alias = "CBAttributePermissionsWriteable")]
    pub const Writeable: Self = Self(0x02);
    #[doc(alias = "CBAttributePermissionsReadEncryptionRequired")]
    pub const ReadEncryptionRequired: Self = Self(0x04);
    #[doc(alias = "CBAttributePermissionsWriteEncryptionRequired")]
    pub const WriteEncryptionRequired: Self = Self(0x08);
}

unsafe impl Encode for CBAttributePermissions {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for CBAttributePermissions {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CBAttribute")]
    pub struct CBMutableCharacteristic;

    #[cfg(feature = "CBAttribute")]
    unsafe impl ClassType for CBMutableCharacteristic {
        #[inherits(CBAttribute, NSObject)]
        type Super = CBCharacteristic;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CBAttribute")]
unsafe impl NSObjectProtocol for CBMutableCharacteristic {}

extern_methods!(
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableCharacteristic {
        #[method(permissions)]
        pub unsafe fn permissions(&self) -> CBAttributePermissions;

        #[method(setPermissions:)]
        pub unsafe fn setPermissions(&self, permissions: CBAttributePermissions);

        #[cfg(all(feature = "CBCentral", feature = "CBPeer"))]
        #[method_id(@__retain_semantics Other subscribedCentrals)]
        pub unsafe fn subscribedCentrals(&self) -> Option<Id<NSArray<CBCentral>>>;

        #[method(properties)]
        pub unsafe fn properties(&self) -> CBCharacteristicProperties;

        #[method(setProperties:)]
        pub unsafe fn setProperties(&self, properties: CBCharacteristicProperties);

        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self) -> Option<Id<NSData>>;

        #[method(setValue:)]
        pub unsafe fn setValue(&self, value: Option<&NSData>);

        #[cfg(feature = "CBDescriptor")]
        #[method_id(@__retain_semantics Other descriptors)]
        pub unsafe fn descriptors(&self) -> Option<Id<NSArray<CBDescriptor>>>;

        #[cfg(feature = "CBDescriptor")]
        #[method(setDescriptors:)]
        pub unsafe fn setDescriptors(&self, descriptors: Option<&NSArray<CBDescriptor>>);

        #[cfg(feature = "CBUUID")]
        #[method_id(@__retain_semantics Init initWithType:properties:value:permissions:)]
        pub unsafe fn initWithType_properties_value_permissions(
            this: Allocated<Self>,
            uuid: &CBUUID,
            properties: CBCharacteristicProperties,
            value: Option<&NSData>,
            permissions: CBAttributePermissions,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CBAttribute`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableCharacteristic {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableCharacteristic {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
