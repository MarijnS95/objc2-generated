//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CBAttribute")]
    pub struct CBService;

    #[cfg(feature = "CBAttribute")]
    unsafe impl ClassType for CBService {
        #[inherits(NSObject)]
        type Super = CBAttribute;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CBAttribute")]
unsafe impl NSObjectProtocol for CBService {}

extern_methods!(
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBService {
        #[cfg(all(feature = "CBPeer", feature = "CBPeripheral"))]
        #[method_id(@__retain_semantics Other peripheral)]
        pub unsafe fn peripheral(&self) -> Option<Id<CBPeripheral>>;

        #[method(isPrimary)]
        pub unsafe fn isPrimary(&self) -> bool;

        #[method_id(@__retain_semantics Other includedServices)]
        pub unsafe fn includedServices(&self) -> Option<Id<NSArray<CBService>>>;

        #[cfg(feature = "CBCharacteristic")]
        #[method_id(@__retain_semantics Other characteristics)]
        pub unsafe fn characteristics(&self) -> Option<Id<NSArray<CBCharacteristic>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CBAttribute`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBService {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBService {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CBAttribute")]
    pub struct CBMutableService;

    #[cfg(feature = "CBAttribute")]
    unsafe impl ClassType for CBMutableService {
        #[inherits(CBAttribute, NSObject)]
        type Super = CBService;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CBAttribute")]
unsafe impl NSObjectProtocol for CBMutableService {}

extern_methods!(
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableService {
        #[method_id(@__retain_semantics Other includedServices)]
        pub unsafe fn includedServices(&self) -> Option<Id<NSArray<CBService>>>;

        #[method(setIncludedServices:)]
        pub unsafe fn setIncludedServices(&self, included_services: Option<&NSArray<CBService>>);

        #[cfg(feature = "CBCharacteristic")]
        #[method_id(@__retain_semantics Other characteristics)]
        pub unsafe fn characteristics(&self) -> Option<Id<NSArray<CBCharacteristic>>>;

        #[cfg(feature = "CBCharacteristic")]
        #[method(setCharacteristics:)]
        pub unsafe fn setCharacteristics(
            &self,
            characteristics: Option<&NSArray<CBCharacteristic>>,
        );

        #[cfg(feature = "CBUUID")]
        #[method_id(@__retain_semantics Init initWithType:primary:)]
        pub unsafe fn initWithType_primary(
            this: Allocated<Self>,
            uuid: &CBUUID,
            is_primary: bool,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CBAttribute`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableService {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableService {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
