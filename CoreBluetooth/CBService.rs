//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Represents a peripheral's service or a service's included service.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/corebluetooth/cbservice?language=objc)
    #[unsafe(super(CBAttribute, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CBAttribute")]
    pub struct CBService;
);

#[cfg(feature = "CBAttribute")]
unsafe impl NSObjectProtocol for CBService {}

extern_methods!(
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBService {
        #[cfg(all(feature = "CBPeer", feature = "CBPeripheral"))]
        /// A back-pointer to the peripheral this service belongs to.
        #[method_id(peripheral)]
        #[unsafe(method_family = none)]
        pub unsafe fn peripheral(&self) -> Option<Retained<CBPeripheral>>;

        /// The type of the service (primary or secondary).
        #[method(isPrimary)]
        pub unsafe fn isPrimary(&self) -> bool;

        /// A list of included CBServices that have so far been discovered in this service.
        #[method_id(includedServices)]
        #[unsafe(method_family = none)]
        pub unsafe fn includedServices(&self) -> Option<Retained<NSArray<CBService>>>;

        #[cfg(feature = "CBCharacteristic")]
        /// A list of CBCharacteristics that have so far been discovered in this service.
        #[method_id(characteristics)]
        #[unsafe(method_family = none)]
        pub unsafe fn characteristics(&self) -> Option<Retained<NSArray<CBCharacteristic>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CBAttribute`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBService {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBService {
        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Used to create a local service or included service, which can be added to the local database via
    /// <code>
    /// CBPeripheralManager
    /// </code>
    /// .
    /// Once a service is published, it is cached and can no longer be changed. This class adds write access to all properties in the
    ///
    /// ```text
    ///  CBService
    /// ```
    ///
    /// class.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/corebluetooth/cbmutableservice?language=objc)
    #[unsafe(super(CBService, CBAttribute, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CBAttribute")]
    pub struct CBMutableService;
);

#[cfg(feature = "CBAttribute")]
unsafe impl NSObjectProtocol for CBMutableService {}

extern_methods!(
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableService {
        #[method_id(includedServices)]
        #[unsafe(method_family = none)]
        pub unsafe fn includedServices(&self) -> Option<Retained<NSArray<CBService>>>;

        /// Setter for [`includedServices`][Self::includedServices].
        #[method(setIncludedServices:)]
        pub unsafe fn setIncludedServices(&self, included_services: Option<&NSArray<CBService>>);

        #[cfg(feature = "CBCharacteristic")]
        #[method_id(characteristics)]
        #[unsafe(method_family = none)]
        pub unsafe fn characteristics(&self) -> Option<Retained<NSArray<CBCharacteristic>>>;

        #[cfg(feature = "CBCharacteristic")]
        /// Setter for [`characteristics`][Self::characteristics].
        #[method(setCharacteristics:)]
        pub unsafe fn setCharacteristics(
            &self,
            characteristics: Option<&NSArray<CBCharacteristic>>,
        );

        #[cfg(feature = "CBUUID")]
        /// Parameter `UUID`: The Bluetooth UUID of the service.
        ///
        /// Parameter `isPrimary`: The type of the service (primary or secondary).
        ///
        ///
        /// Returns a service, initialized with a service type and UUID.
        #[method_id(initWithType:primary:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithType_primary(
            this: Allocated<Self>,
            uuid: &CBUUID,
            is_primary: bool,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CBAttribute`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableService {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CBAttribute")]
    unsafe impl CBMutableService {
        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
