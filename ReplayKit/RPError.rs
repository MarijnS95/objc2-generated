//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/replaykit/rprecordingerrordomain?language=objc)
    pub static RPRecordingErrorDomain: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/replaykit/scstreamerrordomain?language=objc)
    pub static SCStreamErrorDomain: &'static NSString;
}

/// [Apple's documentation](https://developer.apple.com/documentation/replaykit/rprecordingerrorcode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct RPRecordingErrorCode(pub NSInteger);
impl RPRecordingErrorCode {
    #[doc(alias = "RPRecordingErrorUnknown")]
    pub const Unknown: Self = Self(-5800);
    #[doc(alias = "RPRecordingErrorUserDeclined")]
    pub const UserDeclined: Self = Self(-5801);
    #[doc(alias = "RPRecordingErrorDisabled")]
    pub const Disabled: Self = Self(-5802);
    #[doc(alias = "RPRecordingErrorFailedToStart")]
    pub const FailedToStart: Self = Self(-5803);
    #[doc(alias = "RPRecordingErrorFailed")]
    pub const Failed: Self = Self(-5804);
    #[doc(alias = "RPRecordingErrorInsufficientStorage")]
    pub const InsufficientStorage: Self = Self(-5805);
    #[doc(alias = "RPRecordingErrorInterrupted")]
    pub const Interrupted: Self = Self(-5806);
    #[doc(alias = "RPRecordingErrorContentResize")]
    pub const ContentResize: Self = Self(-5807);
    #[doc(alias = "RPRecordingErrorBroadcastInvalidSession")]
    pub const BroadcastInvalidSession: Self = Self(-5808);
    #[doc(alias = "RPRecordingErrorSystemDormancy")]
    pub const SystemDormancy: Self = Self(-5809);
    #[doc(alias = "RPRecordingErrorEntitlements")]
    pub const Entitlements: Self = Self(-5810);
    #[doc(alias = "RPRecordingErrorActivePhoneCall")]
    pub const ActivePhoneCall: Self = Self(-5811);
    #[doc(alias = "RPRecordingErrorFailedToSave")]
    pub const FailedToSave: Self = Self(-5812);
    #[doc(alias = "RPRecordingErrorCarPlay")]
    pub const CarPlay: Self = Self(-5813);
    #[doc(alias = "RPRecordingErrorFailedApplicationConnectionInvalid")]
    pub const FailedApplicationConnectionInvalid: Self = Self(-5814);
    #[doc(alias = "RPRecordingErrorFailedApplicationConnectionInterrupted")]
    pub const FailedApplicationConnectionInterrupted: Self = Self(-5815);
    #[doc(alias = "RPRecordingErrorFailedNoMatchingApplicationContext")]
    pub const FailedNoMatchingApplicationContext: Self = Self(-5816);
    #[doc(alias = "RPRecordingErrorFailedMediaServicesFailure")]
    pub const FailedMediaServicesFailure: Self = Self(-5817);
    #[doc(alias = "RPRecordingErrorVideoMixingFailure")]
    pub const VideoMixingFailure: Self = Self(-5818);
    #[doc(alias = "RPRecordingErrorBroadcastSetupFailed")]
    pub const BroadcastSetupFailed: Self = Self(-5819);
    #[doc(alias = "RPRecordingErrorFailedToObtainURL")]
    pub const FailedToObtainURL: Self = Self(-5820);
    #[doc(alias = "RPRecordingErrorFailedIncorrectTimeStamps")]
    pub const FailedIncorrectTimeStamps: Self = Self(-5821);
    #[doc(alias = "RPRecordingErrorFailedToProcessFirstSample")]
    pub const FailedToProcessFirstSample: Self = Self(-5822);
    #[doc(alias = "RPRecordingErrorFailedAssetWriterFailedToSave")]
    pub const FailedAssetWriterFailedToSave: Self = Self(-5823);
    #[doc(alias = "RPRecordingErrorFailedNoAssetWriter")]
    pub const FailedNoAssetWriter: Self = Self(-5824);
    #[doc(alias = "RPRecordingErrorFailedAssetWriterInWrongState")]
    pub const FailedAssetWriterInWrongState: Self = Self(-5825);
    #[doc(alias = "RPRecordingErrorFailedAssetWriterExportFailed")]
    pub const FailedAssetWriterExportFailed: Self = Self(-5826);
    #[doc(alias = "RPRecordingErrorFailedToRemoveFile")]
    pub const FailedToRemoveFile: Self = Self(-5827);
    #[doc(alias = "RPRecordingErrorFailedAssetWriterExportCanceled")]
    pub const FailedAssetWriterExportCanceled: Self = Self(-5828);
    #[doc(alias = "RPRecordingErrorAttemptToStopNonRecording")]
    pub const AttemptToStopNonRecording: Self = Self(-5829);
    #[doc(alias = "RPRecordingErrorAttemptToStartInRecordingState")]
    pub const AttemptToStartInRecordingState: Self = Self(-5830);
    #[doc(alias = "RPRecordingErrorPhotoFailure")]
    pub const PhotoFailure: Self = Self(-5831);
    #[doc(alias = "RPRecordingErrorRecordingInvalidSession")]
    pub const RecordingInvalidSession: Self = Self(-5832);
    #[doc(alias = "RPRecordingErrorFailedToStartCaptureStack")]
    pub const FailedToStartCaptureStack: Self = Self(-5833);
    #[doc(alias = "RPRecordingErrorInvalidParameter")]
    pub const InvalidParameter: Self = Self(-5834);
    #[doc(alias = "RPRecordingErrorFilePermissions")]
    pub const FilePermissions: Self = Self(-5835);
    #[doc(alias = "RPRecordingErrorExportClipToURLInProgress")]
    pub const ExportClipToURLInProgress: Self = Self(-5836);
    #[doc(alias = "RPRecordingErrorCodeSuccessful")]
    pub const CodeSuccessful: Self = Self(0);
}

unsafe impl Encode for RPRecordingErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for RPRecordingErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
