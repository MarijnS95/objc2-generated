//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgwindowlevelkey?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGWindowLevelKey(pub i32);
impl CGWindowLevelKey {
    pub const kCGBaseWindowLevelKey: Self = Self(0);
    pub const kCGMinimumWindowLevelKey: Self = Self(1);
    pub const kCGDesktopWindowLevelKey: Self = Self(2);
    pub const kCGBackstopMenuLevelKey: Self = Self(3);
    pub const kCGNormalWindowLevelKey: Self = Self(4);
    pub const kCGFloatingWindowLevelKey: Self = Self(5);
    pub const kCGTornOffMenuWindowLevelKey: Self = Self(6);
    pub const kCGDockWindowLevelKey: Self = Self(7);
    pub const kCGMainMenuWindowLevelKey: Self = Self(8);
    pub const kCGStatusWindowLevelKey: Self = Self(9);
    pub const kCGModalPanelWindowLevelKey: Self = Self(10);
    pub const kCGPopUpMenuWindowLevelKey: Self = Self(11);
    pub const kCGDraggingWindowLevelKey: Self = Self(12);
    pub const kCGScreenSaverWindowLevelKey: Self = Self(13);
    pub const kCGMaximumWindowLevelKey: Self = Self(14);
    pub const kCGOverlayWindowLevelKey: Self = Self(15);
    pub const kCGHelpWindowLevelKey: Self = Self(16);
    pub const kCGUtilityWindowLevelKey: Self = Self(17);
    pub const kCGDesktopIconWindowLevelKey: Self = Self(18);
    pub const kCGCursorWindowLevelKey: Self = Self(19);
    pub const kCGAssistiveTechHighWindowLevelKey: Self = Self(20);
    pub const kCGNumberOfWindowLevelKeys: Self = Self(21);
}

unsafe impl Encode for CGWindowLevelKey {
    const ENCODING: Encoding = i32::ENCODING;
}

unsafe impl RefEncode for CGWindowLevelKey {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgwindowlevel?language=objc)
pub type CGWindowLevel = i32;

extern "C-unwind" {
    pub fn CGWindowLevelForKey(key: CGWindowLevelKey) -> CGWindowLevel;
}
