//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgfunctionref?language=objc)
pub type CGFunctionRef = *mut c_void;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgfunctionevaluatecallback?language=objc)
#[cfg(feature = "objc2-core-foundation")]
pub type CGFunctionEvaluateCallback =
    Option<unsafe extern "C-unwind" fn(*mut c_void, NonNull<CGFloat>, NonNull<CGFloat>)>;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgfunctionreleaseinfocallback?language=objc)
pub type CGFunctionReleaseInfoCallback = Option<unsafe extern "C-unwind" fn(*mut c_void)>;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgfunctioncallbacks?language=objc)
#[cfg(feature = "objc2-core-foundation")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct CGFunctionCallbacks {
    pub version: c_uint,
    pub evaluate: CGFunctionEvaluateCallback,
    pub releaseInfo: CGFunctionReleaseInfoCallback,
}

#[cfg(all(feature = "objc2", feature = "objc2-core-foundation"))]
unsafe impl Encode for CGFunctionCallbacks {
    const ENCODING: Encoding = Encoding::Struct(
        "CGFunctionCallbacks",
        &[
            <c_uint>::ENCODING,
            <CGFunctionEvaluateCallback>::ENCODING,
            <CGFunctionReleaseInfoCallback>::ENCODING,
        ],
    );
}

#[cfg(all(feature = "objc2", feature = "objc2-core-foundation"))]
unsafe impl RefEncode for CGFunctionCallbacks {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CGFunctionGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CGFunctionCreate(
        info: *mut c_void,
        domain_dimension: usize,
        domain: *const CGFloat,
        range_dimension: usize,
        range: *const CGFloat,
        callbacks: *const CGFunctionCallbacks,
    ) -> CGFunctionRef;
}

extern "C-unwind" {
    pub fn CGFunctionRetain(function: CGFunctionRef) -> CGFunctionRef;
}

extern "C-unwind" {
    pub fn CGFunctionRelease(function: CGFunctionRef);
}
