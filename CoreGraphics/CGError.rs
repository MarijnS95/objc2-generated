//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgerror?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGError(pub i32);
impl CGError {
    pub const kCGErrorSuccess: Self = Self(0);
    pub const kCGErrorFailure: Self = Self(1000);
    pub const kCGErrorIllegalArgument: Self = Self(1001);
    pub const kCGErrorInvalidConnection: Self = Self(1002);
    pub const kCGErrorInvalidContext: Self = Self(1003);
    pub const kCGErrorCannotComplete: Self = Self(1004);
    pub const kCGErrorNotImplemented: Self = Self(1006);
    pub const kCGErrorRangeCheck: Self = Self(1007);
    pub const kCGErrorTypeCheck: Self = Self(1008);
    pub const kCGErrorInvalidOperation: Self = Self(1010);
    pub const kCGErrorNoneAvailable: Self = Self(1011);
}

unsafe impl Encode for CGError {
    const ENCODING: Encoding = i32::ENCODING;
}

unsafe impl RefEncode for CGError {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgerrorcallback?language=objc)
pub type CGErrorCallback = Option<unsafe extern "C-unwind" fn()>;

extern "C-unwind" {
    pub fn CGErrorSetCallback(callback: CGErrorCallback);
}
