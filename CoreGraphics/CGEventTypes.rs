//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventref?language=objc)
pub type CGEventRef = *mut c_void;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgmousebutton?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGMouseButton(pub u32);
impl CGMouseButton {
    pub const kCGMouseButtonLeft: Self = Self(0);
    pub const kCGMouseButtonRight: Self = Self(1);
    pub const kCGMouseButtonCenter: Self = Self(2);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGMouseButton {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGMouseButton {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgscrolleventunit?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGScrollEventUnit(pub u32);
impl CGScrollEventUnit {
    pub const kCGScrollEventUnitPixel: Self = Self(0);
    pub const kCGScrollEventUnitLine: Self = Self(1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGScrollEventUnit {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGScrollEventUnit {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgmomentumscrollphase?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGMomentumScrollPhase(pub u32);
impl CGMomentumScrollPhase {
    pub const kCGMomentumScrollPhaseNone: Self = Self(0);
    pub const kCGMomentumScrollPhaseBegin: Self = Self(1);
    pub const kCGMomentumScrollPhaseContinue: Self = Self(2);
    pub const kCGMomentumScrollPhaseEnd: Self = Self(3);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGMomentumScrollPhase {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGMomentumScrollPhase {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgscrollphase?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGScrollPhase(pub u32);
impl CGScrollPhase {
    pub const kCGScrollPhaseBegan: Self = Self(1);
    pub const kCGScrollPhaseChanged: Self = Self(2);
    pub const kCGScrollPhaseEnded: Self = Self(4);
    pub const kCGScrollPhaseCancelled: Self = Self(8);
    pub const kCGScrollPhaseMayBegin: Self = Self(128);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGScrollPhase {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGScrollPhase {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cggesturephase?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGGesturePhase(pub u32);
impl CGGesturePhase {
    pub const kCGGesturePhaseNone: Self = Self(0);
    pub const kCGGesturePhaseBegan: Self = Self(1);
    pub const kCGGesturePhaseChanged: Self = Self(2);
    pub const kCGGesturePhaseEnded: Self = Self(4);
    pub const kCGGesturePhaseCancelled: Self = Self(8);
    pub const kCGGesturePhaseMayBegin: Self = Self(128);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGGesturePhase {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGGesturePhase {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventflags?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventFlags(pub u64);
bitflags::bitflags! {
    impl CGEventFlags: u64 {
        const kCGEventFlagMaskAlphaShift = 65536;
        const kCGEventFlagMaskShift = 131072;
        const kCGEventFlagMaskControl = 262144;
        const kCGEventFlagMaskAlternate = 524288;
        const kCGEventFlagMaskCommand = 1048576;
        const kCGEventFlagMaskHelp = 4194304;
        const kCGEventFlagMaskSecondaryFn = 8388608;
        const kCGEventFlagMaskNumericPad = 2097152;
        const kCGEventFlagMaskNonCoalesced = 256;
    }
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventFlags {
    const ENCODING: Encoding = u64::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventFlags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventType(pub u32);
impl CGEventType {
    pub const kCGEventNull: Self = Self(0);
    pub const kCGEventLeftMouseDown: Self = Self(1);
    pub const kCGEventLeftMouseUp: Self = Self(2);
    pub const kCGEventRightMouseDown: Self = Self(3);
    pub const kCGEventRightMouseUp: Self = Self(4);
    pub const kCGEventMouseMoved: Self = Self(5);
    pub const kCGEventLeftMouseDragged: Self = Self(6);
    pub const kCGEventRightMouseDragged: Self = Self(7);
    pub const kCGEventKeyDown: Self = Self(10);
    pub const kCGEventKeyUp: Self = Self(11);
    pub const kCGEventFlagsChanged: Self = Self(12);
    pub const kCGEventScrollWheel: Self = Self(22);
    pub const kCGEventTabletPointer: Self = Self(23);
    pub const kCGEventTabletProximity: Self = Self(24);
    pub const kCGEventOtherMouseDown: Self = Self(25);
    pub const kCGEventOtherMouseUp: Self = Self(26);
    pub const kCGEventOtherMouseDragged: Self = Self(27);
    pub const kCGEventTapDisabledByTimeout: Self = Self(0xFFFFFFFE);
    pub const kCGEventTapDisabledByUserInput: Self = Self(0xFFFFFFFF);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventType {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtimestamp?language=objc)
pub type CGEventTimestamp = u64;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventfield?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventField(pub u32);
impl CGEventField {
    pub const kCGMouseEventNumber: Self = Self(0);
    pub const kCGMouseEventClickState: Self = Self(1);
    pub const kCGMouseEventPressure: Self = Self(2);
    pub const kCGMouseEventButtonNumber: Self = Self(3);
    pub const kCGMouseEventDeltaX: Self = Self(4);
    pub const kCGMouseEventDeltaY: Self = Self(5);
    pub const kCGMouseEventInstantMouser: Self = Self(6);
    pub const kCGMouseEventSubtype: Self = Self(7);
    pub const kCGKeyboardEventAutorepeat: Self = Self(8);
    pub const kCGKeyboardEventKeycode: Self = Self(9);
    pub const kCGKeyboardEventKeyboardType: Self = Self(10);
    pub const kCGScrollWheelEventDeltaAxis1: Self = Self(11);
    pub const kCGScrollWheelEventDeltaAxis2: Self = Self(12);
    pub const kCGScrollWheelEventDeltaAxis3: Self = Self(13);
    pub const kCGScrollWheelEventFixedPtDeltaAxis1: Self = Self(93);
    pub const kCGScrollWheelEventFixedPtDeltaAxis2: Self = Self(94);
    pub const kCGScrollWheelEventFixedPtDeltaAxis3: Self = Self(95);
    pub const kCGScrollWheelEventPointDeltaAxis1: Self = Self(96);
    pub const kCGScrollWheelEventPointDeltaAxis2: Self = Self(97);
    pub const kCGScrollWheelEventPointDeltaAxis3: Self = Self(98);
    pub const kCGScrollWheelEventScrollPhase: Self = Self(99);
    pub const kCGScrollWheelEventScrollCount: Self = Self(100);
    pub const kCGScrollWheelEventMomentumPhase: Self = Self(123);
    pub const kCGScrollWheelEventInstantMouser: Self = Self(14);
    pub const kCGTabletEventPointX: Self = Self(15);
    pub const kCGTabletEventPointY: Self = Self(16);
    pub const kCGTabletEventPointZ: Self = Self(17);
    pub const kCGTabletEventPointButtons: Self = Self(18);
    pub const kCGTabletEventPointPressure: Self = Self(19);
    pub const kCGTabletEventTiltX: Self = Self(20);
    pub const kCGTabletEventTiltY: Self = Self(21);
    pub const kCGTabletEventRotation: Self = Self(22);
    pub const kCGTabletEventTangentialPressure: Self = Self(23);
    pub const kCGTabletEventDeviceID: Self = Self(24);
    pub const kCGTabletEventVendor1: Self = Self(25);
    pub const kCGTabletEventVendor2: Self = Self(26);
    pub const kCGTabletEventVendor3: Self = Self(27);
    pub const kCGTabletProximityEventVendorID: Self = Self(28);
    pub const kCGTabletProximityEventTabletID: Self = Self(29);
    pub const kCGTabletProximityEventPointerID: Self = Self(30);
    pub const kCGTabletProximityEventDeviceID: Self = Self(31);
    pub const kCGTabletProximityEventSystemTabletID: Self = Self(32);
    pub const kCGTabletProximityEventVendorPointerType: Self = Self(33);
    pub const kCGTabletProximityEventVendorPointerSerialNumber: Self = Self(34);
    pub const kCGTabletProximityEventVendorUniqueID: Self = Self(35);
    pub const kCGTabletProximityEventCapabilityMask: Self = Self(36);
    pub const kCGTabletProximityEventPointerType: Self = Self(37);
    pub const kCGTabletProximityEventEnterProximity: Self = Self(38);
    pub const kCGEventTargetProcessSerialNumber: Self = Self(39);
    pub const kCGEventTargetUnixProcessID: Self = Self(40);
    pub const kCGEventSourceUnixProcessID: Self = Self(41);
    pub const kCGEventSourceUserData: Self = Self(42);
    pub const kCGEventSourceUserID: Self = Self(43);
    pub const kCGEventSourceGroupID: Self = Self(44);
    pub const kCGEventSourceStateID: Self = Self(45);
    pub const kCGScrollWheelEventIsContinuous: Self = Self(88);
    pub const kCGMouseEventWindowUnderMousePointer: Self = Self(91);
    pub const kCGMouseEventWindowUnderMousePointerThatCanHandleThisEvent: Self = Self(92);
    pub const kCGEventUnacceleratedPointerMovementX: Self = Self(170);
    pub const kCGEventUnacceleratedPointerMovementY: Self = Self(171);
    pub const kCGScrollWheelEventMomentumOptionPhase: Self = Self(173);
    pub const kCGScrollWheelEventAcceleratedDeltaAxis1: Self = Self(176);
    pub const kCGScrollWheelEventAcceleratedDeltaAxis2: Self = Self(175);
    pub const kCGScrollWheelEventRawDeltaAxis1: Self = Self(178);
    pub const kCGScrollWheelEventRawDeltaAxis2: Self = Self(177);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventField {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventField {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventmousesubtype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventMouseSubtype(pub u32);
impl CGEventMouseSubtype {
    pub const kCGEventMouseSubtypeDefault: Self = Self(0);
    pub const kCGEventMouseSubtypeTabletPoint: Self = Self(1);
    pub const kCGEventMouseSubtypeTabletProximity: Self = Self(2);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventMouseSubtype {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventMouseSubtype {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtaplocation?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventTapLocation(pub u32);
impl CGEventTapLocation {
    pub const kCGHIDEventTap: Self = Self(0);
    pub const kCGSessionEventTap: Self = Self(1);
    pub const kCGAnnotatedSessionEventTap: Self = Self(2);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventTapLocation {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventTapLocation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtapplacement?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventTapPlacement(pub u32);
impl CGEventTapPlacement {
    pub const kCGHeadInsertEventTap: Self = Self(0);
    pub const kCGTailAppendEventTap: Self = Self(1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventTapPlacement {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventTapPlacement {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtapoptions?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventTapOptions(pub u32);
impl CGEventTapOptions {
    pub const kCGEventTapOptionDefault: Self = Self(0x00000000);
    pub const kCGEventTapOptionListenOnly: Self = Self(0x00000001);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventTapOptions {
    const ENCODING: Encoding = u32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventTapOptions {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventmask?language=objc)
pub type CGEventMask = u64;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtapproxy?language=objc)
pub type CGEventTapProxy = *mut c_void;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtapcallback?language=objc)
pub type CGEventTapCallBack = Option<
    unsafe extern "C-unwind" fn(
        CGEventTapProxy,
        CGEventType,
        CGEventRef,
        *mut c_void,
    ) -> CGEventRef,
>;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/__cgeventtapinformation?language=objc)
#[cfg(feature = "libc")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct __CGEventTapInformation {
    pub eventTapID: u32,
    pub tapPoint: CGEventTapLocation,
    pub options: CGEventTapOptions,
    pub eventsOfInterest: CGEventMask,
    pub tappingProcess: libc::pid_t,
    pub processBeingTapped: libc::pid_t,
    pub enabled: bool,
    pub minUsecLatency: c_float,
    pub avgUsecLatency: c_float,
    pub maxUsecLatency: c_float,
}

#[cfg(all(feature = "libc", feature = "objc2"))]
unsafe impl Encode for __CGEventTapInformation {
    const ENCODING: Encoding = Encoding::Struct(
        "__CGEventTapInformation",
        &[
            <u32>::ENCODING,
            <CGEventTapLocation>::ENCODING,
            <CGEventTapOptions>::ENCODING,
            <CGEventMask>::ENCODING,
            <libc::pid_t>::ENCODING,
            <libc::pid_t>::ENCODING,
            Encoding::Bool,
            <c_float>::ENCODING,
            <c_float>::ENCODING,
            <c_float>::ENCODING,
        ],
    );
}

#[cfg(all(feature = "libc", feature = "objc2"))]
unsafe impl RefEncode for __CGEventTapInformation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventtapinformation?language=objc)
#[cfg(feature = "libc")]
pub type CGEventTapInformation = __CGEventTapInformation;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventsourceref?language=objc)
pub type CGEventSourceRef = *mut c_void;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventsourcestateid?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGEventSourceStateID(pub i32);
impl CGEventSourceStateID {
    pub const kCGEventSourceStatePrivate: Self = Self(-1);
    pub const kCGEventSourceStateCombinedSessionState: Self = Self(0);
    pub const kCGEventSourceStateHIDSystemState: Self = Self(1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGEventSourceStateID {
    const ENCODING: Encoding = i32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGEventSourceStateID {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgeventsourcekeyboardtype?language=objc)
pub type CGEventSourceKeyboardType = u32;
