//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::cell::UnsafeCell;
use core::ffi::*;
use core::marker::{PhantomData, PhantomPinned};
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
use objc2_core_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgcolorspaceref?language=objc)
#[repr(C)]
pub struct CGColorSpaceRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

cf_type!(
    #[encoding_name = "CGColorSpace"]
    unsafe impl CGColorSpaceRef {}
);

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgcolorrenderingintent?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGColorRenderingIntent(pub i32);
impl CGColorRenderingIntent {
    #[doc(alias = "kCGRenderingIntentDefault")]
    pub const RenderingIntentDefault: Self = Self(0);
    #[doc(alias = "kCGRenderingIntentAbsoluteColorimetric")]
    pub const RenderingIntentAbsoluteColorimetric: Self = Self(1);
    #[doc(alias = "kCGRenderingIntentRelativeColorimetric")]
    pub const RenderingIntentRelativeColorimetric: Self = Self(2);
    #[doc(alias = "kCGRenderingIntentPerceptual")]
    pub const RenderingIntentPerceptual: Self = Self(3);
    #[doc(alias = "kCGRenderingIntentSaturation")]
    pub const RenderingIntentSaturation: Self = Self(4);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGColorRenderingIntent {
    const ENCODING: Encoding = i32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGColorRenderingIntent {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/cgcolorspacemodel?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CGColorSpaceModel(pub i32);
impl CGColorSpaceModel {
    #[doc(alias = "kCGColorSpaceModelUnknown")]
    pub const Unknown: Self = Self(-1);
    #[doc(alias = "kCGColorSpaceModelMonochrome")]
    pub const Monochrome: Self = Self(0);
    #[doc(alias = "kCGColorSpaceModelRGB")]
    pub const RGB: Self = Self(1);
    #[doc(alias = "kCGColorSpaceModelCMYK")]
    pub const CMYK: Self = Self(2);
    #[doc(alias = "kCGColorSpaceModelLab")]
    pub const Lab: Self = Self(3);
    #[doc(alias = "kCGColorSpaceModelDeviceN")]
    pub const DeviceN: Self = Self(4);
    #[doc(alias = "kCGColorSpaceModelIndexed")]
    pub const Indexed: Self = Self(5);
    #[doc(alias = "kCGColorSpaceModelPattern")]
    pub const Pattern: Self = Self(6);
    #[doc(alias = "kCGColorSpaceModelXYZ")]
    pub const XYZ: Self = Self(7);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CGColorSpaceModel {
    const ENCODING: Encoding = i32::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CGColorSpaceModel {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacegenericgray?language=objc)
    pub static kCGColorSpaceGenericGray: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacegenericrgb?language=objc)
    pub static kCGColorSpaceGenericRGB: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacegenericcmyk?language=objc)
    pub static kCGColorSpaceGenericCMYK: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacedisplayp3?language=objc)
    pub static kCGColorSpaceDisplayP3: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacegenericrgblinear?language=objc)
    pub static kCGColorSpaceGenericRGBLinear: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceadobergb1998?language=objc)
    pub static kCGColorSpaceAdobeRGB1998: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacesrgb?language=objc)
    pub static kCGColorSpaceSRGB: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacegenericgraygamma2_2?language=objc)
    pub static kCGColorSpaceGenericGrayGamma2_2: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacegenericxyz?language=objc)
    pub static kCGColorSpaceGenericXYZ: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacegenericlab?language=objc)
    pub static kCGColorSpaceGenericLab: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceacescglinear?language=objc)
    pub static kCGColorSpaceACESCGLinear: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_709?language=objc)
    pub static kCGColorSpaceITUR_709: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_709_pq?language=objc)
    pub static kCGColorSpaceITUR_709_PQ: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_709_hlg?language=objc)
    pub static kCGColorSpaceITUR_709_HLG: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_2020?language=objc)
    pub static kCGColorSpaceITUR_2020: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_2020_srgbgamma?language=objc)
    pub static kCGColorSpaceITUR_2020_sRGBGamma: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacerommrgb?language=objc)
    pub static kCGColorSpaceROMMRGB: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacedcip3?language=objc)
    pub static kCGColorSpaceDCIP3: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacelinearitur_2020?language=objc)
    pub static kCGColorSpaceLinearITUR_2020: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendeditur_2020?language=objc)
    pub static kCGColorSpaceExtendedITUR_2020: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendedlinearitur_2020?language=objc)
    pub static kCGColorSpaceExtendedLinearITUR_2020: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacelineardisplayp3?language=objc)
    pub static kCGColorSpaceLinearDisplayP3: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendeddisplayp3?language=objc)
    pub static kCGColorSpaceExtendedDisplayP3: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendedlineardisplayp3?language=objc)
    pub static kCGColorSpaceExtendedLinearDisplayP3: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_2100_pq?language=objc)
    pub static kCGColorSpaceITUR_2100_PQ: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_2100_hlg?language=objc)
    pub static kCGColorSpaceITUR_2100_HLG: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacedisplayp3_pq?language=objc)
    pub static kCGColorSpaceDisplayP3_PQ: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacedisplayp3_hlg?language=objc)
    pub static kCGColorSpaceDisplayP3_HLG: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_2020_pq?language=objc)
    pub static kCGColorSpaceITUR_2020_PQ: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_2020_hlg?language=objc)
    pub static kCGColorSpaceITUR_2020_HLG: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacedisplayp3_pq_eotf?language=objc)
    pub static kCGColorSpaceDisplayP3_PQ_EOTF: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceitur_2020_pq_eotf?language=objc)
    pub static kCGColorSpaceITUR_2020_PQ_EOTF: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendedsrgb?language=objc)
    pub static kCGColorSpaceExtendedSRGB: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacelinearsrgb?language=objc)
    pub static kCGColorSpaceLinearSRGB: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendedlinearsrgb?language=objc)
    pub static kCGColorSpaceExtendedLinearSRGB: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendedgray?language=objc)
    pub static kCGColorSpaceExtendedGray: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacelineargray?language=objc)
    pub static kCGColorSpaceLinearGray: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendedlineargray?language=objc)
    pub static kCGColorSpaceExtendedLinearGray: &'static CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspacecoremedia709?language=objc)
    pub static kCGColorSpaceCoreMedia709: &'static CFStringRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateDeviceGray() -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateDeviceRGB() -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateDeviceCMYK() -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateWithICCData(data: CFTypeRef) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    #[cfg(feature = "CGDataProvider")]
    pub fn CGColorSpaceCreateICCBased(
        n_components: usize,
        range: *const CGFloat,
        profile: Option<&CGDataProviderRef>,
        alternate: Option<&CGColorSpaceRef>,
    ) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateIndexed(
        base_space: Option<&CGColorSpaceRef>,
        last_index: usize,
        color_table: *const c_uchar,
    ) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreatePattern(base_space: Option<&CGColorSpaceRef>) -> *mut CGColorSpaceRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/colorsyncprofileref?language=objc)
#[repr(C)]
pub struct ColorSyncProfileRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

cf_type!(
    #[encoding_name = "ColorSyncProfile"]
    unsafe impl ColorSyncProfileRef {}
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coregraphics/kcgcolorspaceextendedrange?language=objc)
    pub static kCGColorSpaceExtendedRange: &'static CFStringRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateWithColorSyncProfile(
        _: Option<&ColorSyncProfileRef>,
        options: Option<&CFDictionaryRef>,
    ) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateWithName(name: Option<&CFStringRef>) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceRetain(space: Option<&CGColorSpaceRef>) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceGetName(space: Option<&CGColorSpaceRef>) -> *mut CFStringRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCopyName(space: Option<&CGColorSpaceRef>) -> *mut CFStringRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    pub fn CGColorSpaceGetNumberOfComponents(space: Option<&CGColorSpaceRef>) -> usize;
}

extern "C-unwind" {
    pub fn CGColorSpaceGetModel(space: Option<&CGColorSpaceRef>) -> CGColorSpaceModel;
}

extern "C-unwind" {
    pub fn CGColorSpaceGetBaseColorSpace(space: Option<&CGColorSpaceRef>) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCopyBaseColorSpace(space: &CGColorSpaceRef) -> NonNull<CGColorSpaceRef>;
}

extern "C-unwind" {
    pub fn CGColorSpaceGetColorTableCount(space: Option<&CGColorSpaceRef>) -> usize;
}

extern "C-unwind" {
    pub fn CGColorSpaceGetColorTable(space: Option<&CGColorSpaceRef>, table: *mut u8);
}

extern "C-unwind" {
    pub fn CGColorSpaceCopyICCData(space: Option<&CGColorSpaceRef>) -> *mut CFDataRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceIsWideGamutRGB(_: &CGColorSpaceRef) -> bool;
}

extern "C-unwind" {
    pub fn CGColorSpaceIsHDR(_: &CGColorSpaceRef) -> bool;
}

extern "C-unwind" {
    pub fn CGColorSpaceUsesITUR_2100TF(_: &CGColorSpaceRef) -> bool;
}

extern "C-unwind" {
    pub fn CGColorSpaceIsPQBased(s: &CGColorSpaceRef) -> bool;
}

extern "C-unwind" {
    pub fn CGColorSpaceIsHLGBased(s: &CGColorSpaceRef) -> bool;
}

extern "C-unwind" {
    pub fn CGColorSpaceSupportsOutput(space: &CGColorSpaceRef) -> bool;
}

extern "C-unwind" {
    pub fn CGColorSpaceCopyPropertyList(space: &CGColorSpaceRef) -> CFPropertyListRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateWithPropertyList(plist: CFPropertyListRef) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceUsesExtendedRange(space: &CGColorSpaceRef) -> bool;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateLinearized(space: &CGColorSpaceRef) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateExtended(space: &CGColorSpaceRef) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateExtendedLinearized(space: &CGColorSpaceRef) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    pub fn CGColorSpaceCreateCopyWithStandardRange(s: &CGColorSpaceRef)
        -> NonNull<CGColorSpaceRef>;
}

extern "C-unwind" {
    #[deprecated = "No longer supported"]
    pub fn CGColorSpaceCreateWithICCProfile(data: Option<&CFDataRef>) -> *mut CGColorSpaceRef;
}

extern "C-unwind" {
    #[deprecated = "No longer supported"]
    pub fn CGColorSpaceCopyICCProfile(space: Option<&CGColorSpaceRef>) -> *mut CFDataRef;
}

extern "C-unwind" {
    #[deprecated = "No longer supported"]
    pub fn CGColorSpaceCreateWithPlatformColorSpace(r#ref: *const c_void) -> *mut CGColorSpaceRef;
}
