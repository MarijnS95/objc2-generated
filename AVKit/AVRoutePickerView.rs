//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
use objc2_app_kit::*;
use objc2_foundation::*;

use crate::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVRoutePickerViewButtonState(pub NSInteger);
impl AVRoutePickerViewButtonState {
    #[doc(alias = "AVRoutePickerViewButtonStateNormal")]
    pub const Normal: Self = Self(0);
    #[doc(alias = "AVRoutePickerViewButtonStateNormalHighlighted")]
    pub const NormalHighlighted: Self = Self(1);
    #[doc(alias = "AVRoutePickerViewButtonStateActive")]
    pub const Active: Self = Self(2);
    #[doc(alias = "AVRoutePickerViewButtonStateActiveHighlighted")]
    pub const ActiveHighlighted: Self = Self(3);
}

unsafe impl Encode for AVRoutePickerViewButtonState {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVRoutePickerViewButtonState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVRoutePickerViewButtonStyle(pub NSInteger);
impl AVRoutePickerViewButtonStyle {
    #[doc(alias = "AVRoutePickerViewButtonStyleSystem")]
    pub const System: Self = Self(0);
    #[doc(alias = "AVRoutePickerViewButtonStylePlain")]
    pub const Plain: Self = Self(1);
    #[doc(alias = "AVRoutePickerViewButtonStyleCustom")]
    pub const Custom: Self = Self(2);
}

unsafe impl Encode for AVRoutePickerViewButtonStyle {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVRoutePickerViewButtonStyle {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    pub struct AVRoutePickerView;

    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl ClassType for AVRoutePickerView {
        #[inherits(NSResponder, NSObject)]
        type Super = NSView;
        type Mutability = MainThreadOnly;
    }
);

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSAccessibility for AVRoutePickerView {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSAccessibilityElementProtocol for AVRoutePickerView {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSAnimatablePropertyContainer for AVRoutePickerView {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSAppearanceCustomization for AVRoutePickerView {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSCoding for AVRoutePickerView {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSDraggingDestination for AVRoutePickerView {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSObjectProtocol for AVRoutePickerView {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSUserInterfaceItemIdentification for AVRoutePickerView {}

extern_methods!(
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl AVRoutePickerView {
        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(&self) -> Option<Id<ProtocolObject<dyn AVRoutePickerViewDelegate>>>;

        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn AVRoutePickerViewDelegate>>,
        );

        #[method_id(@__retain_semantics Other routePickerButtonColorForState:)]
        pub unsafe fn routePickerButtonColorForState(
            &self,
            state: AVRoutePickerViewButtonState,
        ) -> Id<NSColor>;

        #[method(setRoutePickerButtonColor:forState:)]
        pub unsafe fn setRoutePickerButtonColor_forState(
            &self,
            color: Option<&NSColor>,
            state: AVRoutePickerViewButtonState,
        );

        #[method(isRoutePickerButtonBordered)]
        pub unsafe fn isRoutePickerButtonBordered(&self) -> bool;

        #[method(setRoutePickerButtonBordered:)]
        pub unsafe fn setRoutePickerButtonBordered(&self, route_picker_button_bordered: bool);

        #[method_id(@__retain_semantics Other activeTintColor)]
        pub unsafe fn activeTintColor(&self) -> Option<Id<NSColor>>;

        #[method(setActiveTintColor:)]
        pub unsafe fn setActiveTintColor(&self, active_tint_color: Option<&NSColor>);

        #[method(routePickerButtonStyle)]
        pub unsafe fn routePickerButtonStyle(&self) -> AVRoutePickerViewButtonStyle;

        #[method(setRoutePickerButtonStyle:)]
        pub unsafe fn setRoutePickerButtonStyle(
            &self,
            route_picker_button_style: AVRoutePickerViewButtonStyle,
        );

        #[method(prioritizesVideoDevices)]
        pub unsafe fn prioritizesVideoDevices(&self) -> bool;

        #[method(setPrioritizesVideoDevices:)]
        pub unsafe fn setPrioritizesVideoDevices(&self, prioritizes_video_devices: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSView`
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl AVRoutePickerView {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame_rect: NSRect) -> Id<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(this: Allocated<Self>, coder: &NSCoder) -> Option<Id<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSResponder`
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl AVRoutePickerView {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl AVRoutePickerView {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Id<Self>;
    }
);

extern_protocol!(
    pub unsafe trait AVRoutePickerViewDelegate: NSObjectProtocol {
        #[cfg(feature = "objc2-app-kit")]
        #[cfg(target_os = "macos")]
        #[optional]
        #[method(routePickerViewWillBeginPresentingRoutes:)]
        unsafe fn routePickerViewWillBeginPresentingRoutes(
            &self,
            route_picker_view: &AVRoutePickerView,
        );

        #[cfg(feature = "objc2-app-kit")]
        #[cfg(target_os = "macos")]
        #[optional]
        #[method(routePickerViewDidEndPresentingRoutes:)]
        unsafe fn routePickerViewDidEndPresentingRoutes(
            &self,
            route_picker_view: &AVRoutePickerView,
        );
    }

    unsafe impl ProtocolType for dyn AVRoutePickerViewDelegate {}
);
