//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "PDEPluginInterface")]
#[path = "PDEPluginInterface.rs"]
mod __PDEPluginInterface;
#[cfg(feature = "PMCore")]
#[path = "PMCore.rs"]
mod __PMCore;
#[cfg(feature = "PMDefinitions")]
#[path = "PMDefinitions.rs"]
mod __PMDefinitions;
#[cfg(feature = "PMErrors")]
#[path = "PMErrors.rs"]
mod __PMErrors;
#[cfg(feature = "PMPrintAETypes")]
#[path = "PMPrintAETypes.rs"]
mod __PMPrintAETypes;
#[cfg(feature = "PMPrintSettingsKeys")]
#[path = "PMPrintSettingsKeys.rs"]
mod __PMPrintSettingsKeys;
#[cfg(feature = "PMPrintingDialogExtensions")]
#[path = "PMPrintingDialogExtensions.rs"]
mod __PMPrintingDialogExtensions;

#[cfg(all(feature = "PDEPluginInterface", feature = "objc2"))]
pub use self::__PDEPluginInterface::PDEPanel;
#[cfg(all(feature = "PDEPluginInterface", feature = "objc2"))]
pub use self::__PDEPluginInterface::PDEPlugIn;
#[cfg(all(feature = "PDEPluginInterface", feature = "objc2"))]
pub use self::__PDEPluginInterface::PDEPlugInCallbackProtocol;
#[cfg(all(feature = "PMCore", feature = "objc2-core-graphics"))]
pub use self::__PMCore::PMCGImageCreateWithEPSDataProvider;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCopyAvailablePPDs;
#[cfg(feature = "PMCore")]
pub use self::__PMCore::PMCopyLocalizedPPD;
#[cfg(feature = "PMCore")]
pub use self::__PMCore::PMCopyPPDData;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCopyPageFormat;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCopyPrintSettings;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCreateGenericPrinter;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCreatePageFormat;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCreatePageFormatWithPMPaper;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCreatePrintSettings;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMCreateSession;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetAdjustedPageRect;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetAdjustedPaperRect;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetCollate;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetCopies;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetDuplex;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetFirstPage;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetLastPage;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetOrientation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetPageFormatExtendedData;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetPageFormatPaper;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetPageRange;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetScale;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetUnadjustedPageRect;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMGetUnadjustedPaperRect;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPageFormatCreateDataRepresentation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPageFormatCreateWithDataRepresentation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPageFormatGetPrinterID;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperCreateCustom;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperCreateLocalizedName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperGetHeight;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperGetID;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperGetMargins;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperGetPPDPaperName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperGetPrinterID;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperGetWidth;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPaperIsCustom;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPresetCopyName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPresetCreatePrintSettings;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPresetGetAttributes;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsCopyAsDictionary;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsCopyKeys;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsCreateDataRepresentation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsCreateWithDataRepresentation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsGetJobName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsGetValue;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsSetJobName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsSetValue;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsToOptions;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrintSettingsToOptionsWithPrinterAndPageFormat;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterCopyDescriptionURL;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterCopyDeviceURI;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterCopyHostName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterCopyPresets;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterCopyState;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterCreateFromPrinterID;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetCommInfo;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetDriverCreator;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetID;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetIndexedPrinterResolution;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetLanguageInfo;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetLocation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetMakeAndModelName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetMimeTypes;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetName;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetOutputResolution;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetPaperList;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetPrinterResolutionCount;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterGetState;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterIsDefault;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterIsFavorite;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterIsPostScriptCapable;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterIsPostScriptPrinter;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterIsRemote;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterPrintWithFile;
#[cfg(all(
    feature = "PMCore",
    feature = "PMDefinitions",
    feature = "objc2-core-graphics"
))]
pub use self::__PMCore::PMPrinterPrintWithProvider;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterSendCommand;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterSetDefault;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterSetOutputResolution;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMPrinterWritePostScriptToURL;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMRelease;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMRetain;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMServerCreatePrinterList;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMServerLaunchPrinterBrowser;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionBeginCGDocumentNoDialog;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionBeginPageNoDialog;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionCopyDestinationFormat;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionCopyDestinationLocation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionCopyOutputFormatList;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionCreatePageFormatList;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionCreatePrinterList;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionDefaultPageFormat;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionDefaultPrintSettings;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionEndDocumentNoDialog;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionEndPageNoDialog;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionError;
#[cfg(all(
    feature = "PMCore",
    feature = "PMDefinitions",
    feature = "objc2-core-graphics"
))]
pub use self::__PMCore::PMSessionGetCGGraphicsContext;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionGetCurrentPrinter;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionGetDataFromSession;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionGetDestinationType;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionSetCurrentPMPrinter;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionSetDataInSession;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionSetDestination;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionSetError;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionValidatePageFormat;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSessionValidatePrintSettings;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetCollate;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetCopies;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetDuplex;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetFirstPage;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetLastPage;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetOrientation;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetPageFormatExtendedData;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetPageRange;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMSetScale;
#[cfg(feature = "PMCore")]
pub use self::__PMCore::PMWorkflowCopyItems;
#[cfg(feature = "PMCore")]
pub use self::__PMCore::PMWorkflowSubmitPDFWithOptions;
#[cfg(all(feature = "PMCore", feature = "PMDefinitions"))]
pub use self::__PMCore::PMWorkflowSubmitPDFWithSettings;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kAllPPDDomains;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kCUPSPPDDomain;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kLocalPPDDomain;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kNetworkPPDDomain;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMBorderDoubleHairline;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMBorderDoubleThickline;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMBorderSingleHairline;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMBorderSingleThickline;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMCMYKColorSpaceModel;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMCancel;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDestinationFax;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDestinationFile;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDestinationInvalid;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDestinationPreview;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDestinationPrinter;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDestinationProcessPDF;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDevNColorSpaceModel;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDuplexNoTumble;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDuplexNone;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMDuplexTumble;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMGeneralError;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMGrayColorSpaceModel;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMHideInlineItems;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMInvalidPageFormat;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMInvalidParameter;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMInvalidPreset;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMInvalidPrintSession;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMInvalidPrintSettings;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMInvalidPrinter;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLandscape;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutBottomTopLeftRight;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutBottomTopRightLeft;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutLeftRightBottomTop;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutLeftRightTopBottom;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutRightLeftBottomTop;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutRightLeftTopBottom;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutTopBottomLeftRight;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMLayoutTopBottomRightLeft;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMNoDefaultPrinter;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMNoError;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMNoSuchEntry;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMNotImplemented;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMObjectInUse;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMOutOfScope;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPaperTypeCoated;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPaperTypeGlossy;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPaperTypePlain;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPaperTypePremium;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPaperTypeTShirt;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPaperTypeTransparency;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPaperTypeUnknown;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPortrait;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPrintAllPages;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPrinterIdle;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPrinterProcessing;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMPrinterStopped;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMQualityBest;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMQualityDraft;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMQualityHighest;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMQualityInkSaver;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMQualityLowest;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMQualityNormal;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMQualityPhoto;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMRGBColorSpaceModel;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMReverseLandscape;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMReversePortrait;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMScalingCenterOnImgArea;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMScalingCenterOnPaper;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMScalingPinBottomLeft;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMScalingPinBottomRight;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMScalingPinTopLeft;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMScalingPinTopRight;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowDefaultInlineItems;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowInlineCopies;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowInlineOrientation;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowInlinePageRange;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowInlinePageRangeWithSelection;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowInlinePaperSize;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowInlineScale;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMShowPageAttributesPDE;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMSimplexTumble;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMUnknownColorSpaceModel;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMUnlocked;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kPMValueOutOfRange;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kSystemPPDDomain;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::kUserPPDDomain;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::OpaquePMPageFormat;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::OpaquePMPaper;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::OpaquePMPreset;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::OpaquePMPrintSession;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::OpaquePMPrintSettings;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::OpaquePMPrinter;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::OpaquePMServer;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMBorderType;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMColorSpaceModel;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMDataFormat;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMDestinationType;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMDuplexMode;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMLanguageInfo;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMLayoutDirection;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMObject;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMOrientation;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPPDDomain;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPageFormat;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPaper;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPaperMargins;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPaperType;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPreset;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPrintDialogOptionFlags;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPrintSession;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPrintSettings;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPrinter;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMPrinterState;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMQualityMode;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMRect;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMResolution;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMScalingAlignment;
#[cfg(feature = "PMDefinitions")]
pub use self::__PMDefinitions::PMServer;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMAllocationFailure;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMCVMSymbolNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMCloseFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMCreateMessageFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMDeleteSubTicketFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMDocumentNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMDontSwitchPDEError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMEditRequestFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMFeatureNotInstalled;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMFileOrDirOperationFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMFontNameTooLong;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMFontNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMGeneralCGError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMIOAttrNotAvailable;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMIOMSymbolNotFound;
#[cfg(all(feature = "PMDefinitions", feature = "PMErrors"))]
pub use self::__PMErrors::kPMInternalError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidAllocator;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidCVMContext;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidCalibrationTarget;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidConnection;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidFileType;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidIOMContext;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidIndex;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidItem;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidJobID;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidJobTemplate;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidKey;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidLookupSpec;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidObject;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidPBMRef;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidPDEContext;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidPMContext;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidPaper;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidPrinterAddress;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidPrinterInfo;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidReply;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidState;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidSubTicket;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidTicket;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidType;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMInvalidValue;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMItemIsLocked;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobBusy;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobCanceled;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobGetTicketBadFormatError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobGetTicketReadError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobManagerAborted;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobStreamEndError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobStreamOpenFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMJobStreamReadFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMKeyNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMKeyNotUnique;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMKeyOrValueNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMLastErrorCodeToMakeMaintenanceOfThisListEasier;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMMessagingError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMNoDefaultItem;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMNoDefaultSettings;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMNoPrinterJobID;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMNoSelectedPrinters;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMOpenFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMPMSymbolNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMPermissionError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMPluginNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMPluginRegisterationFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMPrBrowserNoUI;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMQueueAlreadyExists;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMQueueJobFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMQueueNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMReadFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMReadGotZeroData;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMServerAlreadyRunning;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMServerAttributeRestricted;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMServerCommunicationFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMServerNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMServerSuspended;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMStatusFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMStringConversionFailure;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMSubTicketNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMSyncRequestFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMTemplateIsLocked;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMTicketIsLocked;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMTicketTypeNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMUnableToFindProcess;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMUnexpectedImagingError;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMUnknownDataType;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMUnknownMessage;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMUnsupportedConnection;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMUpdateTicketFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMUserOrGroupNotFound;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMValidateTicketFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMWriteFailed;
#[cfg(feature = "PMErrors")]
pub use self::__PMErrors::kPMXMLParseError;
#[cfg(feature = "PMPrintSettingsKeys")]
pub use self::__PMPrintSettingsKeys::kPMCoverPageAfter;
#[cfg(feature = "PMPrintSettingsKeys")]
pub use self::__PMPrintSettingsKeys::kPMCoverPageBefore;
#[cfg(feature = "PMPrintSettingsKeys")]
pub use self::__PMPrintSettingsKeys::kPMCoverPageNone;
#[cfg(feature = "PMPrintSettingsKeys")]
pub use self::__PMPrintSettingsKeys::PMPageToPaperMappingType;
