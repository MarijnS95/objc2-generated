//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/localauthentication/larightstore?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct LARightStore;
);

unsafe impl NSObjectProtocol for LARightStore {}

extern_methods!(
    unsafe impl LARightStore {
        #[method_id(@__retain_semantics Other sharedStore)]
        pub unsafe fn sharedStore() -> Retained<LARightStore>;

        #[cfg(all(feature = "LAPersistedRight", feature = "LARight", feature = "block2"))]
        #[method(rightForIdentifier:completion:)]
        pub unsafe fn rightForIdentifier_completion(
            &self,
            identifier: &NSString,
            handler: &block2::Block<dyn Fn(*mut LAPersistedRight, *mut NSError)>,
        );

        #[cfg(all(feature = "LAPersistedRight", feature = "LARight", feature = "block2"))]
        #[method(saveRight:identifier:completion:)]
        pub unsafe fn saveRight_identifier_completion(
            &self,
            right: &LARight,
            identifier: &NSString,
            handler: &block2::Block<dyn Fn(*mut LAPersistedRight, *mut NSError)>,
        );

        #[cfg(all(feature = "LAPersistedRight", feature = "LARight", feature = "block2"))]
        #[method(saveRight:identifier:secret:completion:)]
        pub unsafe fn saveRight_identifier_secret_completion(
            &self,
            right: &LARight,
            identifier: &NSString,
            secret: &NSData,
            handler: &block2::Block<dyn Fn(*mut LAPersistedRight, *mut NSError)>,
        );

        #[cfg(all(feature = "LAPersistedRight", feature = "LARight", feature = "block2"))]
        #[method(removeRight:completion:)]
        pub unsafe fn removeRight_completion(
            &self,
            right: &LAPersistedRight,
            handler: &block2::Block<dyn Fn(*mut NSError)>,
        );

        #[cfg(feature = "block2")]
        #[method(removeRightForIdentifier:completion:)]
        pub unsafe fn removeRightForIdentifier_completion(
            &self,
            identifier: &NSString,
            handler: &block2::Block<dyn Fn(*mut NSError)>,
        );

        #[cfg(feature = "block2")]
        #[method(removeAllRightsWithCompletion:)]
        pub unsafe fn removeAllRightsWithCompletion(
            &self,
            handler: &block2::Block<dyn Fn(*mut NSError)>,
        );

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);
