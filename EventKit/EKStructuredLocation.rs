//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-map-kit")]
use objc2_map_kit::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/eventkit/ekstructuredlocation?language=objc)
    #[unsafe(super(EKObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "EKObject")]
    pub struct EKStructuredLocation;
);

#[cfg(feature = "EKObject")]
extern_conformance!(
    unsafe impl NSCopying for EKStructuredLocation {}
);

#[cfg(feature = "EKObject")]
unsafe impl CopyingHelper for EKStructuredLocation {
    type Result = Self;
}

#[cfg(feature = "EKObject")]
extern_conformance!(
    unsafe impl NSObjectProtocol for EKStructuredLocation {}
);

#[cfg(feature = "EKObject")]
impl EKStructuredLocation {
    extern_methods!(
        #[unsafe(method(locationWithTitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn locationWithTitle(title: &NSString) -> Retained<Self>;

        #[cfg(feature = "objc2-map-kit")]
        #[unsafe(method(locationWithMapItem:))]
        #[unsafe(method_family = none)]
        pub unsafe fn locationWithMapItem(map_item: &MKMapItem) -> Retained<Self>;

        #[unsafe(method(title))]
        #[unsafe(method_family = none)]
        pub unsafe fn title(&self) -> Option<Retained<NSString>>;

        /// Setter for [`title`][Self::title].
        #[unsafe(method(setTitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTitle(&self, title: Option<&NSString>);

        #[cfg(feature = "objc2-core-location")]
        #[unsafe(method(geoLocation))]
        #[unsafe(method_family = none)]
        pub unsafe fn geoLocation(&self) -> Option<Retained<CLLocation>>;

        #[cfg(feature = "objc2-core-location")]
        /// Setter for [`geoLocation`][Self::geoLocation].
        #[unsafe(method(setGeoLocation:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGeoLocation(&self, geo_location: Option<&CLLocation>);

        #[unsafe(method(radius))]
        #[unsafe(method_family = none)]
        pub unsafe fn radius(&self) -> c_double;

        /// Setter for [`radius`][Self::radius].
        #[unsafe(method(setRadius:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRadius(&self, radius: c_double);
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "EKObject")]
impl EKStructuredLocation {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
