// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

//! # Bindings to the `EventKit` framework
#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]

#[link(name = "EventKit", kind = "framework")]
extern "C" {}

#[path = "EKAlarm.rs"]
mod __EKAlarm;
#[path = "EKCalendar.rs"]
mod __EKCalendar;
#[path = "EKCalendarItem.rs"]
mod __EKCalendarItem;
#[path = "EKError.rs"]
mod __EKError;
#[path = "EKEvent.rs"]
mod __EKEvent;
#[path = "EKEventStore.rs"]
mod __EKEventStore;
#[path = "EKObject.rs"]
mod __EKObject;
#[path = "EKParticipant.rs"]
mod __EKParticipant;
#[path = "EKRecurrenceDayOfWeek.rs"]
mod __EKRecurrenceDayOfWeek;
#[path = "EKRecurrenceEnd.rs"]
mod __EKRecurrenceEnd;
#[path = "EKRecurrenceRule.rs"]
mod __EKRecurrenceRule;
#[path = "EKReminder.rs"]
mod __EKReminder;
#[path = "EKSource.rs"]
mod __EKSource;
#[path = "EKStructuredLocation.rs"]
mod __EKStructuredLocation;
#[path = "EKTypes.rs"]
mod __EKTypes;
#[path = "EKVirtualConferenceDescriptor.rs"]
mod __EKVirtualConferenceDescriptor;
#[path = "EKVirtualConferenceProvider.rs"]
mod __EKVirtualConferenceProvider;
#[path = "EventKitDefines.rs"]
mod __EventKitDefines;

#[cfg(feature = "EventKit_EKAlarm")]
pub use self::__EKAlarm::EKAlarm;
#[cfg(feature = "EventKit_EKCalendar")]
pub use self::__EKCalendar::EKCalendar;
#[cfg(feature = "EventKit_EKCalendarItem")]
pub use self::__EKCalendarItem::EKCalendarItem;
pub use self::__EKError::EKErrorCode;
pub use self::__EKError::EKErrorDomain;
#[cfg(feature = "EventKit_EKEvent")]
pub use self::__EKEvent::EKEvent;
pub use self::__EKEvent::EKEventAvailability;
pub use self::__EKEvent::EKEventStatus;
pub use self::__EKEventStore::EKEventSearchCallback;
#[cfg(feature = "EventKit_EKEventStore")]
pub use self::__EKEventStore::EKEventStore;
pub use self::__EKEventStore::EKEventStoreChangedNotification;
pub use self::__EKEventStore::EKEventStoreRequestAccessCompletionHandler;
pub use self::__EKEventStore::EKSpan;
#[cfg(feature = "EventKit_EKObject")]
pub use self::__EKObject::EKObject;
#[cfg(feature = "EventKit_EKParticipant")]
pub use self::__EKParticipant::EKParticipant;
#[cfg(feature = "EventKit_EKRecurrenceDayOfWeek")]
pub use self::__EKRecurrenceDayOfWeek::EKRecurrenceDayOfWeek;
#[cfg(feature = "EventKit_EKRecurrenceEnd")]
pub use self::__EKRecurrenceEnd::EKRecurrenceEnd;
#[cfg(feature = "EventKit_EKRecurrenceRule")]
pub use self::__EKRecurrenceRule::EKRecurrenceRule;
#[cfg(feature = "EventKit_EKReminder")]
pub use self::__EKReminder::EKReminder;
#[cfg(feature = "EventKit_EKSource")]
pub use self::__EKSource::EKSource;
#[cfg(feature = "EventKit_EKStructuredLocation")]
pub use self::__EKStructuredLocation::EKStructuredLocation;
pub use self::__EKTypes::EKAlarmProximity;
pub use self::__EKTypes::EKAlarmType;
pub use self::__EKTypes::EKAuthorizationStatus;
pub use self::__EKTypes::EKCalendarEventAvailabilityMask;
pub use self::__EKTypes::EKCalendarType;
pub use self::__EKTypes::EKEntityMask;
pub use self::__EKTypes::EKEntityType;
pub use self::__EKTypes::EKParticipantRole;
pub use self::__EKTypes::EKParticipantScheduleStatus;
pub use self::__EKTypes::EKParticipantStatus;
pub use self::__EKTypes::EKParticipantType;
pub use self::__EKTypes::EKRecurrenceFrequency;
pub use self::__EKTypes::EKReminderPriority;
pub use self::__EKTypes::EKSourceType;
pub use self::__EKTypes::EKWeekday;
#[cfg(feature = "EventKit_EKVirtualConferenceDescriptor")]
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceDescriptor;
#[cfg(feature = "EventKit_EKVirtualConferenceRoomTypeDescriptor")]
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceRoomTypeDescriptor;
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceRoomTypeIdentifier;
#[cfg(feature = "EventKit_EKVirtualConferenceURLDescriptor")]
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceURLDescriptor;
#[cfg(feature = "EventKit_EKVirtualConferenceProvider")]
pub use self::__EKVirtualConferenceProvider::EKVirtualConferenceProvider;
