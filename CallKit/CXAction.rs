//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/callkit/cxaction?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CXAction;
);

unsafe impl NSCoding for CXAction {}

unsafe impl NSCopying for CXAction {}

unsafe impl CopyingHelper for CXAction {
    type Result = Self;
}

unsafe impl NSObjectProtocol for CXAction {}

unsafe impl NSSecureCoding for CXAction {}

extern_methods!(
    unsafe impl CXAction {
        /// Unique ID
        #[method(UUID)]
        #[unsafe(method_family = none)]
        pub unsafe fn UUID(&self) -> Retained<NSUUID>;

        /// Whether all actions are either fulfilled or failed
        #[method(isComplete)]
        #[unsafe(method_family = none)]
        pub unsafe fn isComplete(&self) -> bool;

        #[method(timeoutDate)]
        #[unsafe(method_family = none)]
        pub unsafe fn timeoutDate(&self) -> Retained<NSDate>;

        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(initWithCoder:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        /// Report successful execution of the receiver.
        #[method(fulfill)]
        #[unsafe(method_family = none)]
        pub unsafe fn fulfill(&self);

        /// Report failed execution of the receiver.
        #[method(fail)]
        #[unsafe(method_family = none)]
        pub unsafe fn fail(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CXAction {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
