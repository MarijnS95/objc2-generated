//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CXCallUpdate;

    unsafe impl ClassType for CXCallUpdate {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCopying for CXCallUpdate {}

unsafe impl NSObjectProtocol for CXCallUpdate {}

extern_methods!(
    unsafe impl CXCallUpdate {
        #[cfg(feature = "CXHandle")]
        #[method_id(@__retain_semantics Other remoteHandle)]
        pub unsafe fn remoteHandle(&self) -> Option<Id<CXHandle>>;

        #[cfg(feature = "CXHandle")]
        #[method(setRemoteHandle:)]
        pub unsafe fn setRemoteHandle(&self, remote_handle: Option<&CXHandle>);

        #[method_id(@__retain_semantics Other localizedCallerName)]
        pub unsafe fn localizedCallerName(&self) -> Option<Id<NSString>>;

        #[method(setLocalizedCallerName:)]
        pub unsafe fn setLocalizedCallerName(&self, localized_caller_name: Option<&NSString>);

        #[method(supportsHolding)]
        pub unsafe fn supportsHolding(&self) -> bool;

        #[method(setSupportsHolding:)]
        pub unsafe fn setSupportsHolding(&self, supports_holding: bool);

        #[method(supportsGrouping)]
        pub unsafe fn supportsGrouping(&self) -> bool;

        #[method(setSupportsGrouping:)]
        pub unsafe fn setSupportsGrouping(&self, supports_grouping: bool);

        #[method(supportsUngrouping)]
        pub unsafe fn supportsUngrouping(&self) -> bool;

        #[method(setSupportsUngrouping:)]
        pub unsafe fn setSupportsUngrouping(&self, supports_ungrouping: bool);

        #[method(supportsDTMF)]
        pub unsafe fn supportsDTMF(&self) -> bool;

        #[method(setSupportsDTMF:)]
        pub unsafe fn setSupportsDTMF(&self, supports_dtmf: bool);

        #[method(hasVideo)]
        pub unsafe fn hasVideo(&self) -> bool;

        #[method(setHasVideo:)]
        pub unsafe fn setHasVideo(&self, has_video: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CXCallUpdate {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
