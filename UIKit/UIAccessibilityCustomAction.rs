//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiaccessibilitycustomactionhandler?language=objc)
#[cfg(feature = "block2")]
pub type UIAccessibilityCustomActionHandler =
    *mut block2::Block<dyn Fn(NonNull<UIAccessibilityCustomAction>) -> Bool>;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIAccessibilityCustomAction;
);

unsafe impl NSObjectProtocol for UIAccessibilityCustomAction {}

extern_methods!(
    unsafe impl UIAccessibilityCustomAction {
        #[unsafe(method_family(init))]
        #[method_id(initWithName:target:selector:)]
        pub unsafe fn initWithName_target_selector(
            this: Allocated<Self>,
            name: &NSString,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[unsafe(method_family(init))]
        #[method_id(initWithAttributedName:target:selector:)]
        pub unsafe fn initWithAttributedName_target_selector(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[cfg(feature = "UIImage")]
        #[unsafe(method_family(init))]
        #[method_id(initWithName:image:target:selector:)]
        pub unsafe fn initWithName_image_target_selector(
            this: Allocated<Self>,
            name: &NSString,
            image: Option<&UIImage>,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[cfg(feature = "UIImage")]
        #[unsafe(method_family(init))]
        #[method_id(initWithAttributedName:image:target:selector:)]
        pub unsafe fn initWithAttributedName_image_target_selector(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            image: Option<&UIImage>,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[cfg(feature = "block2")]
        #[unsafe(method_family(init))]
        #[method_id(initWithName:actionHandler:)]
        pub unsafe fn initWithName_actionHandler(
            this: Allocated<Self>,
            name: &NSString,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[cfg(feature = "block2")]
        #[unsafe(method_family(init))]
        #[method_id(initWithAttributedName:actionHandler:)]
        pub unsafe fn initWithAttributedName_actionHandler(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "UIImage", feature = "block2"))]
        #[unsafe(method_family(init))]
        #[method_id(initWithName:image:actionHandler:)]
        pub unsafe fn initWithName_image_actionHandler(
            this: Allocated<Self>,
            name: &NSString,
            image: Option<&UIImage>,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "UIImage", feature = "block2"))]
        #[unsafe(method_family(init))]
        #[method_id(initWithAttributedName:image:actionHandler:)]
        pub unsafe fn initWithAttributedName_image_actionHandler(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            image: Option<&UIImage>,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[unsafe(method_family(none))]
        #[method_id(name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        /// Setter for [`name`][Self::name].
        #[method(setName:)]
        pub unsafe fn setName(&self, name: &NSString);

        #[cfg(feature = "UIImage")]
        #[unsafe(method_family(none))]
        #[method_id(image)]
        pub unsafe fn image(&self) -> Option<Retained<UIImage>>;

        #[cfg(feature = "UIImage")]
        /// Setter for [`image`][Self::image].
        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: Option<&UIImage>);

        #[unsafe(method_family(none))]
        #[method_id(attributedName)]
        pub unsafe fn attributedName(&self) -> Retained<NSAttributedString>;

        /// Setter for [`attributedName`][Self::attributedName].
        #[method(setAttributedName:)]
        pub unsafe fn setAttributedName(&self, attributed_name: &NSAttributedString);

        #[unsafe(method_family(none))]
        #[method_id(target)]
        pub unsafe fn target(&self) -> Option<Retained<AnyObject>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`target`][Self::target].
        #[method(setTarget:)]
        pub unsafe fn setTarget(&self, target: Option<&AnyObject>);

        #[method(selector)]
        pub unsafe fn selector(&self) -> Sel;

        /// Setter for [`selector`][Self::selector].
        #[method(setSelector:)]
        pub unsafe fn setSelector(&self, selector: Sel);

        #[cfg(feature = "block2")]
        #[method(actionHandler)]
        pub unsafe fn actionHandler(&self) -> UIAccessibilityCustomActionHandler;

        #[cfg(feature = "block2")]
        /// Setter for [`actionHandler`][Self::actionHandler].
        #[method(setActionHandler:)]
        pub unsafe fn setActionHandler(&self, action_handler: UIAccessibilityCustomActionHandler);

        #[unsafe(method_family(none))]
        #[method_id(category)]
        pub unsafe fn category(&self) -> Option<Retained<NSString>>;

        /// Setter for [`category`][Self::category].
        #[method(setCategory:)]
        pub unsafe fn setCategory(&self, category: Option<&NSString>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIAccessibilityCustomAction {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiaccessibilitycustomactioncategoryedit?language=objc)
    pub static UIAccessibilityCustomActionCategoryEdit: &'static NSString;
}
