//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIWindowSceneActivationConfiguration;
);

unsafe impl NSObjectProtocol for UIWindowSceneActivationConfiguration {}

extern_methods!(
    unsafe impl UIWindowSceneActivationConfiguration {
        /// The user activity that will be used to request a scene
        #[unsafe(method_family(none))]
        #[method_id(userActivity)]
        pub unsafe fn userActivity(&self) -> Retained<NSUserActivity>;

        #[cfg(all(
            feature = "UISceneOptions",
            feature = "UIWindowSceneActivationRequestOptions"
        ))]
        /// Options for customizing the scene request. If omitted default options are used.
        #[unsafe(method_family(none))]
        #[method_id(options)]
        pub unsafe fn options(
            &self,
            mtm: MainThreadMarker,
        ) -> Option<Retained<UIWindowSceneActivationRequestOptions>>;

        #[cfg(all(
            feature = "UISceneOptions",
            feature = "UIWindowSceneActivationRequestOptions"
        ))]
        /// Setter for [`options`][Self::options].
        #[method(setOptions:)]
        pub unsafe fn setOptions(&self, options: Option<&UIWindowSceneActivationRequestOptions>);

        #[cfg(feature = "UITargetedPreview")]
        /// An optional preview used to define the visual "source" of the newly activated scene for use in system animations.
        #[unsafe(method_family(none))]
        #[method_id(preview)]
        pub unsafe fn preview(&self, mtm: MainThreadMarker) -> Option<Retained<UITargetedPreview>>;

        #[cfg(feature = "UITargetedPreview")]
        /// Setter for [`preview`][Self::preview].
        #[method(setPreview:)]
        pub unsafe fn setPreview(&self, preview: Option<&UITargetedPreview>);

        #[unsafe(method_family(init))]
        #[method_id(initWithUserActivity:)]
        pub unsafe fn initWithUserActivity(
            this: Allocated<Self>,
            user_activity: &NSUserActivity,
        ) -> Retained<Self>;

        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
