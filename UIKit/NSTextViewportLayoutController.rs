//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate?language=objc)
    pub unsafe trait NSTextViewportLayoutControllerDelegate: NSObjectProtocol {
        #[cfg(feature = "objc2-core-foundation")]
        #[method(viewportBoundsForTextViewportLayoutController:)]
        unsafe fn viewportBoundsForTextViewportLayoutController(
            &self,
            text_viewport_layout_controller: &NSTextViewportLayoutController,
        ) -> CGRect;

        #[cfg(feature = "NSTextLayoutFragment")]
        #[method(textViewportLayoutController:configureRenderingSurfaceForTextLayoutFragment:)]
        unsafe fn textViewportLayoutController_configureRenderingSurfaceForTextLayoutFragment(
            &self,
            text_viewport_layout_controller: &NSTextViewportLayoutController,
            text_layout_fragment: &NSTextLayoutFragment,
        );

        #[optional]
        #[method(textViewportLayoutControllerWillLayout:)]
        unsafe fn textViewportLayoutControllerWillLayout(
            &self,
            text_viewport_layout_controller: &NSTextViewportLayoutController,
        );

        #[optional]
        #[method(textViewportLayoutControllerDidLayout:)]
        unsafe fn textViewportLayoutControllerDidLayout(
            &self,
            text_viewport_layout_controller: &NSTextViewportLayoutController,
        );
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSTextViewportLayoutController;
);

unsafe impl NSObjectProtocol for NSTextViewportLayoutController {}

extern_methods!(
    unsafe impl NSTextViewportLayoutController {
        #[cfg(feature = "NSTextLayoutManager")]
        #[method_id(initWithTextLayoutManager:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextLayoutManager(
            this: Allocated<Self>,
            text_layout_manager: &NSTextLayoutManager,
        ) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(delegate)]
        #[unsafe(method_family = none)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn NSTextViewportLayoutControllerDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`delegate`][Self::delegate].
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn NSTextViewportLayoutControllerDelegate>>,
        );

        #[cfg(feature = "NSTextLayoutManager")]
        #[method_id(textLayoutManager)]
        #[unsafe(method_family = none)]
        pub unsafe fn textLayoutManager(&self) -> Option<Retained<NSTextLayoutManager>>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(viewportBounds)]
        pub unsafe fn viewportBounds(&self) -> CGRect;

        #[cfg(feature = "NSTextRange")]
        #[method_id(viewportRange)]
        #[unsafe(method_family = none)]
        pub unsafe fn viewportRange(&self) -> Option<Retained<NSTextRange>>;

        #[method(layoutViewport)]
        pub unsafe fn layoutViewport(&self);

        #[cfg(all(feature = "NSTextRange", feature = "objc2-core-foundation"))]
        #[method(relocateViewportToTextLocation:)]
        pub unsafe fn relocateViewportToTextLocation(
            &self,
            text_location: &ProtocolObject<dyn NSTextLocation>,
        ) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(adjustViewportByVerticalOffset:)]
        pub unsafe fn adjustViewportByVerticalOffset(&self, vertical_offset: CGFloat);
    }
);
