//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessoryposition?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct UIPointerAccessoryPosition {
    pub offset: CGFloat,
    pub angle: CGFloat,
}

unsafe impl Encode for UIPointerAccessoryPosition {
    const ENCODING: Encoding = Encoding::Struct("?", &[<CGFloat>::ENCODING, <CGFloat>::ENCODING]);
}

unsafe impl RefEncode for UIPointerAccessoryPosition {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

unsafe impl Send for UIPointerAccessoryPosition {}

unsafe impl Sync for UIPointerAccessoryPosition {}

// TODO: pub fn UIPointerAccessoryPositionMake(offset: CGFloat,angle: CGFloat,) -> UIPointerAccessoryPosition;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositiontop?language=objc)
    pub static UIPointerAccessoryPositionTop: UIPointerAccessoryPosition;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositiontopright?language=objc)
    pub static UIPointerAccessoryPositionTopRight: UIPointerAccessoryPosition;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositionright?language=objc)
    pub static UIPointerAccessoryPositionRight: UIPointerAccessoryPosition;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositionbottomright?language=objc)
    pub static UIPointerAccessoryPositionBottomRight: UIPointerAccessoryPosition;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositionbottom?language=objc)
    pub static UIPointerAccessoryPositionBottom: UIPointerAccessoryPosition;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositionbottomleft?language=objc)
    pub static UIPointerAccessoryPositionBottomLeft: UIPointerAccessoryPosition;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositionleft?language=objc)
    pub static UIPointerAccessoryPositionLeft: UIPointerAccessoryPosition;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessorypositiontopleft?language=objc)
    pub static UIPointerAccessoryPositionTopLeft: UIPointerAccessoryPosition;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uipointeraccessory?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIPointerAccessory;
);

unsafe impl NSCopying for UIPointerAccessory {}

unsafe impl CopyingHelper for UIPointerAccessory {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UIPointerAccessory {}

extern_methods!(
    unsafe impl UIPointerAccessory {
        #[cfg(feature = "UIPointerStyle")]
        #[method_id(@__retain_semantics Other shape)]
        pub unsafe fn shape(&self) -> Retained<UIPointerShape>;

        #[method(position)]
        pub unsafe fn position(&self) -> UIPointerAccessoryPosition;

        #[method(orientationMatchesAngle)]
        pub unsafe fn orientationMatchesAngle(&self) -> bool;

        #[method(setOrientationMatchesAngle:)]
        pub unsafe fn setOrientationMatchesAngle(&self, orientation_matches_angle: bool);

        #[cfg(feature = "UIPointerStyle")]
        #[method_id(@__retain_semantics Other accessoryWithShape:position:)]
        pub unsafe fn accessoryWithShape_position(
            shape: &UIPointerShape,
            position: UIPointerAccessoryPosition,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other arrowAccessoryWithPosition:)]
        pub unsafe fn arrowAccessoryWithPosition(
            position: UIPointerAccessoryPosition,
            mtm: MainThreadMarker,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
