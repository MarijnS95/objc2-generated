//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uibarbuttonitemstateappearance?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIBarButtonItemStateAppearance;
);

unsafe impl NSObjectProtocol for UIBarButtonItemStateAppearance {}

extern_methods!(
    unsafe impl UIBarButtonItemStateAppearance {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;

        /// Text attributes to be used for rendering title text. If the font or color are unspecified, appropriate defaults are supplied.
        #[method_id(@__retain_semantics Other titleTextAttributes)]
        pub unsafe fn titleTextAttributes(
            &self,
        ) -> Retained<NSDictionary<NSAttributedStringKey, AnyObject>>;

        /// Setter for [`titleTextAttributes`][Self::titleTextAttributes].
        #[method(setTitleTextAttributes:)]
        pub unsafe fn setTitleTextAttributes(
            &self,
            title_text_attributes: &NSDictionary<NSAttributedStringKey, AnyObject>,
        );

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        /// An offset to apply to the button's title position
        #[method(titlePositionAdjustment)]
        pub unsafe fn titlePositionAdjustment(&self) -> UIOffset;

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        /// Setter for [`titlePositionAdjustment`][Self::titlePositionAdjustment].
        #[method(setTitlePositionAdjustment:)]
        pub unsafe fn setTitlePositionAdjustment(&self, title_position_adjustment: UIOffset);

        #[cfg(feature = "UIImage")]
        /// A background image to display around the button
        #[method_id(@__retain_semantics Other backgroundImage)]
        pub unsafe fn backgroundImage(&self) -> Option<Retained<UIImage>>;

        #[cfg(feature = "UIImage")]
        /// Setter for [`backgroundImage`][Self::backgroundImage].
        #[method(setBackgroundImage:)]
        pub unsafe fn setBackgroundImage(&self, background_image: Option<&UIImage>);

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        /// An offset to apply to the backgroundImage.
        #[method(backgroundImagePositionAdjustment)]
        pub unsafe fn backgroundImagePositionAdjustment(&self) -> UIOffset;

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        /// Setter for [`backgroundImagePositionAdjustment`][Self::backgroundImagePositionAdjustment].
        #[method(setBackgroundImagePositionAdjustment:)]
        pub unsafe fn setBackgroundImagePositionAdjustment(
            &self,
            background_image_position_adjustment: UIOffset,
        );
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIBarButtonItemAppearance;
);

unsafe impl NSCoding for UIBarButtonItemAppearance {}

unsafe impl NSCopying for UIBarButtonItemAppearance {}

unsafe impl CopyingHelper for UIBarButtonItemAppearance {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UIBarButtonItemAppearance {}

unsafe impl NSSecureCoding for UIBarButtonItemAppearance {}

extern_methods!(
    unsafe impl UIBarButtonItemAppearance {
        /// Construct an appearance for the UIBarButtonItemStylePlain style.
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "UIBarButtonItem")]
        /// Construct an appearance with default values for the given style.
        #[method_id(@__retain_semantics Init initWithStyle:)]
        pub unsafe fn initWithStyle(
            this: Allocated<Self>,
            style: UIBarButtonItemStyle,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(this: Allocated<Self>, coder: &NSCoder) -> Retained<Self>;

        #[method_id(@__retain_semantics Copy copy)]
        pub unsafe fn copy(&self) -> Retained<Self>;

        #[cfg(feature = "UIBarButtonItem")]
        /// Reset this appearance to that of a given style.
        #[method(configureWithDefaultForStyle:)]
        pub unsafe fn configureWithDefaultForStyle(&self, style: UIBarButtonItemStyle);

        /// The appearance when the bar button item is in the normal control state.
        #[method_id(@__retain_semantics Other normal)]
        pub unsafe fn normal(&self) -> Retained<UIBarButtonItemStateAppearance>;

        /// The appearance when the bar button item is in the highlighted control state. If unspecified, then synthesized from the normal state.
        #[method_id(@__retain_semantics Other highlighted)]
        pub unsafe fn highlighted(&self) -> Retained<UIBarButtonItemStateAppearance>;

        /// The appearance when the bar button item is in the disabled control state. If unspecified, then synthesized from the normal state.
        #[method_id(@__retain_semantics Other disabled)]
        pub unsafe fn disabled(&self) -> Retained<UIBarButtonItemStateAppearance>;

        /// The appearance when the bar button item is in the focused control state. If unspecified, then synthesized from the highlighted state.
        #[method_id(@__retain_semantics Other focused)]
        pub unsafe fn focused(&self) -> Retained<UIBarButtonItemStateAppearance>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIBarButtonItemAppearance {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
