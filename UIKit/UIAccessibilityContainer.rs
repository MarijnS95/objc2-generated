//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_category!(
    /// Category "UIAccessibilityContainer" on [`NSObject`].
    #[doc(alias = "UIAccessibilityContainer")]
    pub unsafe trait NSObjectUIAccessibilityContainer {
        #[method(accessibilityElementCount)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityElementCount(&self, mtm: MainThreadMarker) -> NSInteger;

        #[method(accessibilityElementAtIndex:)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityElementAtIndex(
            &self,
            index: NSInteger,
            mtm: MainThreadMarker,
        ) -> Option<Retained<AnyObject>>;

        #[method(indexOfAccessibilityElement:)]
        #[unsafe(method_family = none)]
        unsafe fn indexOfAccessibilityElement(
            &self,
            element: &AnyObject,
            mtm: MainThreadMarker,
        ) -> NSInteger;

        #[method(accessibilityElements)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityElements(&self, mtm: MainThreadMarker) -> Option<Retained<NSArray>>;

        /// Setter for [`accessibilityElements`][Self::accessibilityElements].
        #[method(setAccessibilityElements:)]
        #[unsafe(method_family = none)]
        unsafe fn setAccessibilityElements(
            &self,
            accessibility_elements: Option<&NSArray>,
            mtm: MainThreadMarker,
        );

        #[cfg(feature = "UIAccessibilityConstants")]
        #[method(accessibilityContainerType)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityContainerType(
            &self,
            mtm: MainThreadMarker,
        ) -> UIAccessibilityContainerType;

        #[cfg(feature = "UIAccessibilityConstants")]
        /// Setter for [`accessibilityContainerType`][Self::accessibilityContainerType].
        #[method(setAccessibilityContainerType:)]
        #[unsafe(method_family = none)]
        unsafe fn setAccessibilityContainerType(
            &self,
            accessibility_container_type: UIAccessibilityContainerType,
            mtm: MainThreadMarker,
        );

        #[method(automationElements)]
        #[unsafe(method_family = none)]
        unsafe fn automationElements(&self, mtm: MainThreadMarker) -> Option<Retained<NSArray>>;

        /// Setter for [`automationElements`][Self::automationElements].
        #[method(setAutomationElements:)]
        #[unsafe(method_family = none)]
        unsafe fn setAutomationElements(
            &self,
            automation_elements: Option<&NSArray>,
            mtm: MainThreadMarker,
        );
    }

    unsafe impl NSObjectUIAccessibilityContainer for NSObject {}
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatablecell?language=objc)
    pub unsafe trait UIAccessibilityContainerDataTableCell:
        NSObjectProtocol + MainThreadOnly
    {
        #[method(accessibilityRowRange)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityRowRange(&self) -> NSRange;

        #[method(accessibilityColumnRange)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityColumnRange(&self) -> NSRange;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable?language=objc)
    pub unsafe trait UIAccessibilityContainerDataTable:
        NSObjectProtocol + MainThreadOnly
    {
        #[method(accessibilityDataTableCellElementForRow:column:)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityDataTableCellElementForRow_column(
            &self,
            row: NSUInteger,
            column: NSUInteger,
        ) -> Option<Retained<ProtocolObject<dyn UIAccessibilityContainerDataTableCell>>>;

        #[method(accessibilityRowCount)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityRowCount(&self) -> NSUInteger;

        #[method(accessibilityColumnCount)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityColumnCount(&self) -> NSUInteger;

        #[optional]
        #[method(accessibilityHeaderElementsForRow:)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityHeaderElementsForRow(
            &self,
            row: NSUInteger,
        ) -> Option<Retained<NSArray<ProtocolObject<dyn UIAccessibilityContainerDataTableCell>>>>;

        #[optional]
        #[method(accessibilityHeaderElementsForColumn:)]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityHeaderElementsForColumn(
            &self,
            column: NSUInteger,
        ) -> Option<Retained<NSArray<ProtocolObject<dyn UIAccessibilityContainerDataTableCell>>>>;
    }
);
