//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwritingtoolscoordinatortextupdatereason?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UIWritingToolsCoordinatorTextUpdateReason(pub NSInteger);
impl UIWritingToolsCoordinatorTextUpdateReason {
    #[doc(alias = "UIWritingToolsCoordinatorTextUpdateReasonTyping")]
    pub const Typing: Self = Self(0);
    #[doc(alias = "UIWritingToolsCoordinatorTextUpdateReasonUndoRedo")]
    pub const UndoRedo: Self = Self(1);
}

unsafe impl Encode for UIWritingToolsCoordinatorTextUpdateReason {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UIWritingToolsCoordinatorTextUpdateReason {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwritingtoolscoordinatorstate?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UIWritingToolsCoordinatorState(pub NSInteger);
impl UIWritingToolsCoordinatorState {
    #[doc(alias = "UIWritingToolsCoordinatorStateInactive")]
    pub const Inactive: Self = Self(0);
    #[doc(alias = "UIWritingToolsCoordinatorStateNoninteractive")]
    pub const Noninteractive: Self = Self(1);
    #[doc(alias = "UIWritingToolsCoordinatorStateInteractiveResting")]
    pub const InteractiveResting: Self = Self(2);
    #[doc(alias = "UIWritingToolsCoordinatorStateInteractiveStreaming")]
    pub const InteractiveStreaming: Self = Self(3);
}

unsafe impl Encode for UIWritingToolsCoordinatorState {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UIWritingToolsCoordinatorState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwritingtoolscoordinator?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIWritingToolsCoordinator;
);

unsafe impl NSObjectProtocol for UIWritingToolsCoordinator {}

#[cfg(feature = "UIInteraction")]
unsafe impl UIInteraction for UIWritingToolsCoordinator {}

extern_methods!(
    unsafe impl UIWritingToolsCoordinator {
        #[method(isWritingToolsAvailable)]
        pub unsafe fn isWritingToolsAvailable(mtm: MainThreadMarker) -> bool;

        #[method_id(@__retain_semantics Init initWithDelegate:)]
        pub unsafe fn initWithDelegate(
            this: Allocated<Self>,
            delegate: Option<&ProtocolObject<dyn UIWritingToolsCoordinatorDelegate>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn UIWritingToolsCoordinatorDelegate>>>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Other effectContainerView)]
        pub unsafe fn effectContainerView(&self) -> Option<Retained<UIView>>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        /// This is a [weak property][objc2::topics::weak_property].
        #[method(setEffectContainerView:)]
        pub unsafe fn setEffectContainerView(&self, effect_container_view: Option<&UIView>);

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Other decorationContainerView)]
        pub unsafe fn decorationContainerView(&self) -> Option<Retained<UIView>>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        /// This is a [weak property][objc2::topics::weak_property].
        #[method(setDecorationContainerView:)]
        pub unsafe fn setDecorationContainerView(&self, decoration_container_view: Option<&UIView>);

        #[method(state)]
        pub unsafe fn state(&self) -> UIWritingToolsCoordinatorState;

        #[method(stopWritingTools)]
        pub unsafe fn stopWritingTools(&self);

        #[cfg(feature = "UITextInputTraits")]
        #[method(preferredBehavior)]
        pub unsafe fn preferredBehavior(&self) -> UIWritingToolsBehavior;

        #[cfg(feature = "UITextInputTraits")]
        #[method(setPreferredBehavior:)]
        pub unsafe fn setPreferredBehavior(&self, preferred_behavior: UIWritingToolsBehavior);

        #[cfg(feature = "UITextInputTraits")]
        #[method(behavior)]
        pub unsafe fn behavior(&self) -> UIWritingToolsBehavior;

        #[cfg(feature = "UITextInputTraits")]
        #[method(preferredResultOptions)]
        pub unsafe fn preferredResultOptions(&self) -> UIWritingToolsResultOptions;

        #[cfg(feature = "UITextInputTraits")]
        #[method(setPreferredResultOptions:)]
        pub unsafe fn setPreferredResultOptions(
            &self,
            preferred_result_options: UIWritingToolsResultOptions,
        );

        #[cfg(feature = "UITextInputTraits")]
        #[method(resultOptions)]
        pub unsafe fn resultOptions(&self) -> UIWritingToolsResultOptions;

        #[method(updateRange:withText:reason:forContextWithIdentifier:)]
        pub unsafe fn updateRange_withText_reason_forContextWithIdentifier(
            &self,
            range: NSRange,
            replacement_text: &NSAttributedString,
            reason: UIWritingToolsCoordinatorTextUpdateReason,
            context_id: &NSUUID,
        );

        #[method(updateForReflowedTextInContextWithIdentifier:)]
        pub unsafe fn updateForReflowedTextInContextWithIdentifier(&self, context_id: &NSUUID);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIWritingToolsCoordinator {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwritingtoolscoordinatortextreplacementreason?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UIWritingToolsCoordinatorTextReplacementReason(pub NSInteger);
impl UIWritingToolsCoordinatorTextReplacementReason {
    #[doc(alias = "UIWritingToolsCoordinatorTextReplacementReasonInteractive")]
    pub const Interactive: Self = Self(0);
    #[doc(alias = "UIWritingToolsCoordinatorTextReplacementReasonNoninteractive")]
    pub const Noninteractive: Self = Self(1);
}

unsafe impl Encode for UIWritingToolsCoordinatorTextReplacementReason {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UIWritingToolsCoordinatorTextReplacementReason {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwritingtoolscoordinatorcontextscope?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UIWritingToolsCoordinatorContextScope(pub NSInteger);
impl UIWritingToolsCoordinatorContextScope {
    #[doc(alias = "UIWritingToolsCoordinatorContextScopeUserSelection")]
    pub const UserSelection: Self = Self(0);
    #[doc(alias = "UIWritingToolsCoordinatorContextScopeFullDocument")]
    pub const FullDocument: Self = Self(1);
    #[doc(alias = "UIWritingToolsCoordinatorContextScopeVisibleArea")]
    pub const VisibleArea: Self = Self(2);
}

unsafe impl Encode for UIWritingToolsCoordinatorContextScope {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UIWritingToolsCoordinatorContextScope {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwritingtoolscoordinatortextanimation?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UIWritingToolsCoordinatorTextAnimation(pub NSInteger);
impl UIWritingToolsCoordinatorTextAnimation {
    #[doc(alias = "UIWritingToolsCoordinatorTextAnimationAnticipate")]
    pub const Anticipate: Self = Self(0);
    #[doc(alias = "UIWritingToolsCoordinatorTextAnimationRemove")]
    pub const Remove: Self = Self(1);
    #[doc(alias = "UIWritingToolsCoordinatorTextAnimationInsert")]
    pub const Insert: Self = Self(2);
}

unsafe impl Encode for UIWritingToolsCoordinatorTextAnimation {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UIWritingToolsCoordinatorTextAnimation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

#[inline]
pub unsafe extern "C-unwind" fn UIWritingToolsCoordinatorTextAnimationDebugDescription(
    animation_type: UIWritingToolsCoordinatorTextAnimation,
) -> Retained<NSString> {
    extern "C-unwind" {
        fn UIWritingToolsCoordinatorTextAnimationDebugDescription(
            animation_type: UIWritingToolsCoordinatorTextAnimation,
        ) -> NonNull<NSString>;
    }
    let ret = unsafe { UIWritingToolsCoordinatorTextAnimationDebugDescription(animation_type) };
    unsafe { Retained::retain_autoreleased(ret.as_ptr()) }
        .expect("function was marked as returning non-null, but actually returned NULL")
}

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwritingtoolscoordinatordelegate?language=objc)
    pub unsafe trait UIWritingToolsCoordinatorDelegate: NSObjectProtocol {
        #[cfg(all(feature = "UIWritingToolsCoordinatorContext", feature = "block2"))]
        #[method(writingToolsCoordinator:requestsContextsForScope:completion:)]
        unsafe fn writingToolsCoordinator_requestsContextsForScope_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            scope: UIWritingToolsCoordinatorContextScope,
            completion: &block2::Block<dyn Fn(NonNull<NSArray<UIWritingToolsCoordinatorContext>>)>,
        );

        #[cfg(all(
            feature = "UIWritingToolsCoordinatorAnimationParameters",
            feature = "UIWritingToolsCoordinatorContext",
            feature = "block2"
        ))]
        #[method(writingToolsCoordinator:replaceRange:inContext:proposedText:reason:animationParameters:completion:)]
        unsafe fn writingToolsCoordinator_replaceRange_inContext_proposedText_reason_animationParameters_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            replacement_text: &NSAttributedString,
            reason: UIWritingToolsCoordinatorTextReplacementReason,
            animation_parameters: Option<&UIWritingToolsCoordinatorAnimationParameters>,
            completion: &block2::Block<dyn Fn(*mut NSAttributedString)>,
        );

        #[cfg(all(feature = "UIWritingToolsCoordinatorContext", feature = "block2"))]
        #[method(writingToolsCoordinator:selectRanges:inContext:completion:)]
        unsafe fn writingToolsCoordinator_selectRanges_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            ranges: &NSArray<NSValue>,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn()>,
        );

        #[cfg(all(feature = "block2", feature = "objc2-core-foundation"))]
        #[method(writingToolsCoordinator:requestsRangeInContextWithIdentifierForPoint:completion:)]
        unsafe fn writingToolsCoordinator_requestsRangeInContextWithIdentifierForPoint_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            point: CGPoint,
            completion: &block2::Block<dyn Fn(NSRange, NonNull<NSUUID>)>,
        );

        #[cfg(all(
            feature = "UIBezierPath",
            feature = "UIWritingToolsCoordinatorContext",
            feature = "block2"
        ))]
        #[method(writingToolsCoordinator:requestsBoundingBezierPathsForRange:inContext:completion:)]
        unsafe fn writingToolsCoordinator_requestsBoundingBezierPathsForRange_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn(NonNull<NSArray<UIBezierPath>>)>,
        );

        #[cfg(all(
            feature = "UIBezierPath",
            feature = "UIWritingToolsCoordinatorContext",
            feature = "block2"
        ))]
        #[method(writingToolsCoordinator:requestsUnderlinePathsForRange:inContext:completion:)]
        unsafe fn writingToolsCoordinator_requestsUnderlinePathsForRange_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn(NonNull<NSArray<UIBezierPath>>)>,
        );

        #[cfg(all(feature = "UIWritingToolsCoordinatorContext", feature = "block2"))]
        #[method(writingToolsCoordinator:prepareForTextAnimation:forRange:inContext:completion:)]
        unsafe fn writingToolsCoordinator_prepareForTextAnimation_forRange_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            text_animation: UIWritingToolsCoordinatorTextAnimation,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn()>,
        );

        #[cfg(all(
            feature = "UITargetedPreview",
            feature = "UIWritingToolsCoordinatorContext",
            feature = "block2"
        ))]
        #[method(writingToolsCoordinator:requestsPreviewForTextAnimation:ofRange:inContext:completion:)]
        unsafe fn writingToolsCoordinator_requestsPreviewForTextAnimation_ofRange_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            text_animation: UIWritingToolsCoordinatorTextAnimation,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn(*mut UITargetedPreview)>,
        );

        #[cfg(all(feature = "UIWritingToolsCoordinatorContext", feature = "block2"))]
        #[method(writingToolsCoordinator:finishTextAnimation:forRange:inContext:completion:)]
        unsafe fn writingToolsCoordinator_finishTextAnimation_forRange_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            text_animation: UIWritingToolsCoordinatorTextAnimation,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn()>,
        );

        #[cfg(all(feature = "UIWritingToolsCoordinatorContext", feature = "block2"))]
        #[optional]
        #[method(writingToolsCoordinator:requestsSingleContainerSubrangesOfRange:inContext:completion:)]
        unsafe fn writingToolsCoordinator_requestsSingleContainerSubrangesOfRange_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn(NonNull<NSArray<NSValue>>)>,
        );

        #[cfg(all(
            feature = "UIResponder",
            feature = "UIView",
            feature = "UIWritingToolsCoordinatorContext",
            feature = "block2"
        ))]
        #[optional]
        #[method(writingToolsCoordinator:requestsDecorationContainerViewForRange:inContext:completion:)]
        unsafe fn writingToolsCoordinator_requestsDecorationContainerViewForRange_inContext_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            range: NSRange,
            context: &UIWritingToolsCoordinatorContext,
            completion: &block2::Block<dyn Fn(NonNull<UIView>)>,
        );

        #[cfg(feature = "block2")]
        #[optional]
        #[method(writingToolsCoordinator:willChangeToState:completion:)]
        unsafe fn writingToolsCoordinator_willChangeToState_completion(
            &self,
            writing_tools_coordinator: &UIWritingToolsCoordinator,
            new_state: UIWritingToolsCoordinatorState,
            completion: &block2::Block<dyn Fn()>,
        );
    }

    unsafe impl ProtocolType for dyn UIWritingToolsCoordinatorDelegate {}
);
