//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-cloud-kit")]
use objc2_cloud_kit::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-user-notifications")]
use objc2_user_notifications::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uisceneconnectionoptions?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UISceneConnectionOptions;
);

unsafe impl NSObjectProtocol for UISceneConnectionOptions {}

extern_methods!(
    unsafe impl UISceneConnectionOptions {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;

        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "UIOpenURLContext")]
        #[method(URLContexts)]
        #[unsafe(method_family = none)]
        pub unsafe fn URLContexts(&self) -> Retained<NSSet<UIOpenURLContext>>;

        #[method(sourceApplication)]
        #[unsafe(method_family = none)]
        pub unsafe fn sourceApplication(&self) -> Option<Retained<NSString>>;

        #[method(handoffUserActivityType)]
        #[unsafe(method_family = none)]
        pub unsafe fn handoffUserActivityType(&self) -> Option<Retained<NSString>>;

        #[method(userActivities)]
        #[unsafe(method_family = none)]
        pub unsafe fn userActivities(&self) -> Retained<NSSet<NSUserActivity>>;

        #[cfg(feature = "objc2-user-notifications")]
        #[method(notificationResponse)]
        #[unsafe(method_family = none)]
        pub unsafe fn notificationResponse(&self) -> Option<Retained<UNNotificationResponse>>;

        #[cfg(feature = "UIApplicationShortcutItem")]
        #[method(shortcutItem)]
        #[unsafe(method_family = none)]
        pub unsafe fn shortcutItem(&self) -> Option<Retained<UIApplicationShortcutItem>>;

        #[cfg(feature = "objc2-cloud-kit")]
        #[method(cloudKitShareMetadata)]
        #[unsafe(method_family = none)]
        pub unsafe fn cloudKitShareMetadata(&self) -> Option<Retained<CKShareMetadata>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uisceneopenurloptions?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UISceneOpenURLOptions;
);

unsafe impl NSObjectProtocol for UISceneOpenURLOptions {}

extern_methods!(
    unsafe impl UISceneOpenURLOptions {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;

        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(sourceApplication)]
        #[unsafe(method_family = none)]
        pub unsafe fn sourceApplication(&self) -> Option<Retained<NSString>>;

        #[method(annotation)]
        #[unsafe(method_family = none)]
        pub unsafe fn annotation(&self) -> Option<Retained<AnyObject>>;

        #[method(openInPlace)]
        #[unsafe(method_family = none)]
        pub unsafe fn openInPlace(&self) -> bool;

        #[cfg(feature = "UIEventAttribution")]
        #[method(eventAttribution)]
        #[unsafe(method_family = none)]
        pub unsafe fn eventAttribution(&self) -> Option<Retained<UIEventAttribution>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uisceneopenexternalurloptions?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UISceneOpenExternalURLOptions;
);

unsafe impl NSObjectProtocol for UISceneOpenExternalURLOptions {}

extern_methods!(
    unsafe impl UISceneOpenExternalURLOptions {
        #[method(universalLinksOnly)]
        #[unsafe(method_family = none)]
        pub unsafe fn universalLinksOnly(&self) -> bool;

        /// Setter for [`universalLinksOnly`][Self::universalLinksOnly].
        #[method(setUniversalLinksOnly:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setUniversalLinksOnly(&self, universal_links_only: bool);

        #[cfg(feature = "UIEventAttribution")]
        #[method(eventAttribution)]
        #[unsafe(method_family = none)]
        pub unsafe fn eventAttribution(&self) -> Option<Retained<UIEventAttribution>>;

        #[cfg(feature = "UIEventAttribution")]
        /// Setter for [`eventAttribution`][Self::eventAttribution].
        #[method(setEventAttribution:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setEventAttribution(&self, event_attribution: Option<&UIEventAttribution>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UISceneOpenExternalURLOptions {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiscenecollectionjoinbehavior?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UISceneCollectionJoinBehavior(pub NSInteger);
impl UISceneCollectionJoinBehavior {
    #[doc(alias = "UISceneCollectionJoinBehaviorAutomatic")]
    pub const Automatic: Self = Self(0);
    #[doc(alias = "UISceneCollectionJoinBehaviorPreferred")]
    pub const Preferred: Self = Self(1);
    #[doc(alias = "UISceneCollectionJoinBehaviorDisallowed")]
    pub const Disallowed: Self = Self(2);
    #[doc(alias = "UISceneCollectionJoinBehaviorPreferredWithoutActivating")]
    pub const PreferredWithoutActivating: Self = Self(3);
}

unsafe impl Encode for UISceneCollectionJoinBehavior {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UISceneCollectionJoinBehavior {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uisceneactivationrequestoptions?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UISceneActivationRequestOptions;
);

unsafe impl NSObjectProtocol for UISceneActivationRequestOptions {}

extern_methods!(
    unsafe impl UISceneActivationRequestOptions {
        #[cfg(all(feature = "UIResponder", feature = "UIScene"))]
        #[method(requestingScene)]
        #[unsafe(method_family = none)]
        pub unsafe fn requestingScene(&self) -> Option<Retained<UIScene>>;

        #[cfg(all(feature = "UIResponder", feature = "UIScene"))]
        /// Setter for [`requestingScene`][Self::requestingScene].
        #[method(setRequestingScene:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setRequestingScene(&self, requesting_scene: Option<&UIScene>);

        #[method(collectionJoinBehavior)]
        #[unsafe(method_family = none)]
        pub unsafe fn collectionJoinBehavior(&self) -> UISceneCollectionJoinBehavior;

        /// Setter for [`collectionJoinBehavior`][Self::collectionJoinBehavior].
        #[method(setCollectionJoinBehavior:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setCollectionJoinBehavior(
            &self,
            collection_join_behavior: UISceneCollectionJoinBehavior,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UISceneActivationRequestOptions {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiscenedestructionrequestoptions?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UISceneDestructionRequestOptions;
);

unsafe impl NSObjectProtocol for UISceneDestructionRequestOptions {}

extern_methods!(
    unsafe impl UISceneDestructionRequestOptions {}
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UISceneDestructionRequestOptions {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
