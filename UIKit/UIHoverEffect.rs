//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    /// A hover effect that can be applied to a `UIView` via a `UIHoverStyle`.
    /// You don't conform to this protocol directly. Instead, you use a built-in
    /// `UIHoverEffect` like `UIHoverAutomaticEffect`.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/uikit/uihovereffect?language=objc)
    pub unsafe trait UIHoverEffect: NSObjectProtocol + NSCopying + MainThreadOnly {}
);

extern_class!(
    /// An effect that applies a highlight to the view on hover.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/uikit/uihoverhighlighteffect?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIHoverHighlightEffect;
);

unsafe impl NSCopying for UIHoverHighlightEffect {}

unsafe impl CopyingHelper for UIHoverHighlightEffect {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UIHoverHighlightEffect {}

unsafe impl UIHoverEffect for UIHoverHighlightEffect {}

extern_methods!(
    unsafe impl UIHoverHighlightEffect {
        #[method_id(@__method_family Other effect)]
        pub unsafe fn effect(mtm: MainThreadMarker) -> Retained<Self>;

        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_class!(
    /// An effect that can visually lift the view on hover where appropriate.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/uikit/uihoverlifteffect?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIHoverLiftEffect;
);

unsafe impl NSCopying for UIHoverLiftEffect {}

unsafe impl CopyingHelper for UIHoverLiftEffect {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UIHoverLiftEffect {}

unsafe impl UIHoverEffect for UIHoverLiftEffect {}

extern_methods!(
    unsafe impl UIHoverLiftEffect {
        #[method_id(@__method_family Other effect)]
        pub unsafe fn effect(mtm: MainThreadMarker) -> Retained<Self>;

        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_class!(
    /// A system-default hover effect that automatically selects the appropriate
    /// effect based on the view to which it is applied.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/uikit/uihoverautomaticeffect?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIHoverAutomaticEffect;
);

unsafe impl NSCopying for UIHoverAutomaticEffect {}

unsafe impl CopyingHelper for UIHoverAutomaticEffect {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UIHoverAutomaticEffect {}

unsafe impl UIHoverEffect for UIHoverAutomaticEffect {}

extern_methods!(
    unsafe impl UIHoverAutomaticEffect {
        #[method_id(@__method_family Other effect)]
        pub unsafe fn effect(mtm: MainThreadMarker) -> Retained<Self>;

        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
