//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uilexiconentry?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UILexiconEntry;
);

unsafe impl NSCopying for UILexiconEntry {}

unsafe impl CopyingHelper for UILexiconEntry {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UILexiconEntry {}

extern_methods!(
    unsafe impl UILexiconEntry {
        #[unsafe(method_family(none))]
        #[method_id(documentText)]
        pub unsafe fn documentText(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(userInput)]
        pub unsafe fn userInput(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UILexiconEntry {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uilexicon?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UILexicon;
);

unsafe impl NSCopying for UILexicon {}

unsafe impl CopyingHelper for UILexicon {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UILexicon {}

extern_methods!(
    unsafe impl UILexicon {
        #[unsafe(method_family(none))]
        #[method_id(entries)]
        pub unsafe fn entries(&self) -> Retained<NSArray<UILexiconEntry>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UILexicon {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
