//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-quartz-core")]
#[cfg(not(target_os = "watchos"))]
use objc2_quartz_core::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionviewlayoutautomaticdimension?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static UICollectionViewLayoutAutomaticDimension: CGFloat;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionelementkindsectionheader?language=objc)
    pub static UICollectionElementKindSectionHeader: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionelementkindsectionfooter?language=objc)
    pub static UICollectionElementKindSectionFooter: &'static NSString;
}

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionviewscrolldirection?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UICollectionViewScrollDirection(pub NSInteger);
impl UICollectionViewScrollDirection {
    #[doc(alias = "UICollectionViewScrollDirectionVertical")]
    pub const Vertical: Self = Self(0);
    #[doc(alias = "UICollectionViewScrollDirectionHorizontal")]
    pub const Horizontal: Self = Self(1);
}

unsafe impl Encode for UICollectionViewScrollDirection {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UICollectionViewScrollDirection {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionelementcategory?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UICollectionElementCategory(pub NSUInteger);
impl UICollectionElementCategory {
    #[doc(alias = "UICollectionElementCategoryCell")]
    pub const Cell: Self = Self(0);
    #[doc(alias = "UICollectionElementCategorySupplementaryView")]
    pub const SupplementaryView: Self = Self(1);
    #[doc(alias = "UICollectionElementCategoryDecorationView")]
    pub const DecorationView: Self = Self(2);
}

unsafe impl Encode for UICollectionElementCategory {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for UICollectionElementCategory {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UICollectionViewLayoutAttributes;
);

unsafe impl NSCopying for UICollectionViewLayoutAttributes {}

unsafe impl CopyingHelper for UICollectionViewLayoutAttributes {
    type Result = Self;
}

unsafe impl NSObjectProtocol for UICollectionViewLayoutAttributes {}

#[cfg(feature = "UIDynamicBehavior")]
unsafe impl UIDynamicItem for UICollectionViewLayoutAttributes {}

extern_methods!(
    unsafe impl UICollectionViewLayoutAttributes {
        #[cfg(feature = "objc2-core-foundation")]
        #[method(frame)]
        #[unsafe(method_family = none)]
        pub unsafe fn frame(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`frame`][Self::frame].
        #[method(setFrame:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setFrame(&self, frame: CGRect);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(center)]
        #[unsafe(method_family = none)]
        pub unsafe fn center(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`center`][Self::center].
        #[method(setCenter:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenter(&self, center: CGPoint);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(size)]
        #[unsafe(method_family = none)]
        pub unsafe fn size(&self) -> CGSize;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`size`][Self::size].
        #[method(setSize:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setSize(&self, size: CGSize);

        #[cfg(feature = "objc2-quartz-core")]
        #[cfg(not(target_os = "watchos"))]
        #[method(transform3D)]
        #[unsafe(method_family = none)]
        pub unsafe fn transform3D(&self) -> CATransform3D;

        #[cfg(feature = "objc2-quartz-core")]
        #[cfg(not(target_os = "watchos"))]
        /// Setter for [`transform3D`][Self::transform3D].
        #[method(setTransform3D:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setTransform3D(&self, transform3_d: CATransform3D);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(bounds)]
        #[unsafe(method_family = none)]
        pub unsafe fn bounds(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`bounds`][Self::bounds].
        #[method(setBounds:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setBounds(&self, bounds: CGRect);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(transform)]
        #[unsafe(method_family = none)]
        pub unsafe fn transform(&self) -> CGAffineTransform;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`transform`][Self::transform].
        #[method(setTransform:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setTransform(&self, transform: CGAffineTransform);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(alpha)]
        #[unsafe(method_family = none)]
        pub unsafe fn alpha(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`alpha`][Self::alpha].
        #[method(setAlpha:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setAlpha(&self, alpha: CGFloat);

        #[method(zIndex)]
        #[unsafe(method_family = none)]
        pub unsafe fn zIndex(&self) -> NSInteger;

        /// Setter for [`zIndex`][Self::zIndex].
        #[method(setZIndex:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setZIndex(&self, z_index: NSInteger);

        #[method(isHidden)]
        #[unsafe(method_family = none)]
        pub unsafe fn isHidden(&self) -> bool;

        /// Setter for [`isHidden`][Self::isHidden].
        #[method(setHidden:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setHidden(&self, hidden: bool);

        #[method(indexPath)]
        #[unsafe(method_family = none)]
        pub unsafe fn indexPath(&self) -> Retained<NSIndexPath>;

        /// Setter for [`indexPath`][Self::indexPath].
        #[method(setIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setIndexPath(&self, index_path: &NSIndexPath);

        #[method(representedElementCategory)]
        #[unsafe(method_family = none)]
        pub unsafe fn representedElementCategory(&self) -> UICollectionElementCategory;

        #[method(representedElementKind)]
        #[unsafe(method_family = none)]
        pub unsafe fn representedElementKind(&self) -> Option<Retained<NSString>>;

        #[method(layoutAttributesForCellWithIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForCellWithIndexPath(
            index_path: &NSIndexPath,
            mtm: MainThreadMarker,
        ) -> Retained<Self>;

        #[method(layoutAttributesForSupplementaryViewOfKind:withIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForSupplementaryViewOfKind_withIndexPath(
            element_kind: &NSString,
            index_path: &NSIndexPath,
            mtm: MainThreadMarker,
        ) -> Retained<Self>;

        #[method(layoutAttributesForDecorationViewOfKind:withIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForDecorationViewOfKind_withIndexPath(
            decoration_view_kind: &NSString,
            index_path: &NSIndexPath,
            mtm: MainThreadMarker,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UICollectionViewLayoutAttributes {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UICollectionViewLayoutInvalidationContext;
);

unsafe impl NSObjectProtocol for UICollectionViewLayoutInvalidationContext {}

extern_methods!(
    unsafe impl UICollectionViewLayoutInvalidationContext {
        #[method(invalidateEverything)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidateEverything(&self) -> bool;

        #[method(invalidateDataSourceCounts)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidateDataSourceCounts(&self) -> bool;

        #[method(invalidateItemsAtIndexPaths:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidateItemsAtIndexPaths(&self, index_paths: &NSArray<NSIndexPath>);

        #[method(invalidateSupplementaryElementsOfKind:atIndexPaths:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidateSupplementaryElementsOfKind_atIndexPaths(
            &self,
            element_kind: &NSString,
            index_paths: &NSArray<NSIndexPath>,
        );

        #[method(invalidateDecorationElementsOfKind:atIndexPaths:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidateDecorationElementsOfKind_atIndexPaths(
            &self,
            element_kind: &NSString,
            index_paths: &NSArray<NSIndexPath>,
        );

        #[method(invalidatedItemIndexPaths)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidatedItemIndexPaths(&self) -> Option<Retained<NSArray<NSIndexPath>>>;

        #[method(invalidatedSupplementaryIndexPaths)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidatedSupplementaryIndexPaths(
            &self,
        ) -> Option<Retained<NSDictionary<NSString, NSArray<NSIndexPath>>>>;

        #[method(invalidatedDecorationIndexPaths)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidatedDecorationIndexPaths(
            &self,
        ) -> Option<Retained<NSDictionary<NSString, NSArray<NSIndexPath>>>>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(contentOffsetAdjustment)]
        #[unsafe(method_family = none)]
        pub unsafe fn contentOffsetAdjustment(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`contentOffsetAdjustment`][Self::contentOffsetAdjustment].
        #[method(setContentOffsetAdjustment:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setContentOffsetAdjustment(&self, content_offset_adjustment: CGPoint);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(contentSizeAdjustment)]
        #[unsafe(method_family = none)]
        pub unsafe fn contentSizeAdjustment(&self) -> CGSize;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`contentSizeAdjustment`][Self::contentSizeAdjustment].
        #[method(setContentSizeAdjustment:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setContentSizeAdjustment(&self, content_size_adjustment: CGSize);

        #[method(previousIndexPathsForInteractivelyMovingItems)]
        #[unsafe(method_family = none)]
        pub unsafe fn previousIndexPathsForInteractivelyMovingItems(
            &self,
        ) -> Option<Retained<NSArray<NSIndexPath>>>;

        #[method(targetIndexPathsForInteractivelyMovingItems)]
        #[unsafe(method_family = none)]
        pub unsafe fn targetIndexPathsForInteractivelyMovingItems(
            &self,
        ) -> Option<Retained<NSArray<NSIndexPath>>>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(interactiveMovementTarget)]
        #[unsafe(method_family = none)]
        pub unsafe fn interactiveMovementTarget(&self) -> CGPoint;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UICollectionViewLayoutInvalidationContext {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uicollectionviewlayout?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UICollectionViewLayout;
);

unsafe impl NSCoding for UICollectionViewLayout {}

unsafe impl NSObjectProtocol for UICollectionViewLayout {}

extern_methods!(
    unsafe impl UICollectionViewLayout {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(initWithCoder:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "UICollectionView",
            feature = "UIResponder",
            feature = "UIScrollView",
            feature = "UIView"
        ))]
        #[method(collectionView)]
        #[unsafe(method_family = none)]
        pub unsafe fn collectionView(&self) -> Option<Retained<UICollectionView>>;

        #[method(invalidateLayout)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidateLayout(&self);

        #[method(invalidateLayoutWithContext:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidateLayoutWithContext(
            &self,
            context: &UICollectionViewLayoutInvalidationContext,
        );

        #[method(registerClass:forDecorationViewOfKind:)]
        #[unsafe(method_family = none)]
        pub unsafe fn registerClass_forDecorationViewOfKind(
            &self,
            view_class: Option<&AnyClass>,
            element_kind: &NSString,
        );

        #[cfg(feature = "UINib")]
        #[deprecated = "Loading Interface Builder products will not be supported in a future version of visionOS."]
        #[method(registerNib:forDecorationViewOfKind:)]
        #[unsafe(method_family = none)]
        pub unsafe fn registerNib_forDecorationViewOfKind(
            &self,
            nib: Option<&UINib>,
            element_kind: &NSString,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UICollectionViewLayout {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_methods!(
    /// UISubclassingHooks
    unsafe impl UICollectionViewLayout {
        #[method(layoutAttributesClass)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesClass(mtm: MainThreadMarker) -> &'static AnyClass;

        #[method(invalidationContextClass)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidationContextClass(mtm: MainThreadMarker) -> &'static AnyClass;

        #[method(prepareLayout)]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareLayout(&self);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(layoutAttributesForElementsInRect:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForElementsInRect(
            &self,
            rect: CGRect,
        ) -> Option<Retained<NSArray<UICollectionViewLayoutAttributes>>>;

        #[method(layoutAttributesForItemAtIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForItemAtIndexPath(
            &self,
            index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(layoutAttributesForSupplementaryViewOfKind:atIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForSupplementaryViewOfKind_atIndexPath(
            &self,
            element_kind: &NSString,
            index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(layoutAttributesForDecorationViewOfKind:atIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForDecorationViewOfKind_atIndexPath(
            &self,
            element_kind: &NSString,
            index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(shouldInvalidateLayoutForBoundsChange:)]
        #[unsafe(method_family = none)]
        pub unsafe fn shouldInvalidateLayoutForBoundsChange(&self, new_bounds: CGRect) -> bool;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(invalidationContextForBoundsChange:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidationContextForBoundsChange(
            &self,
            new_bounds: CGRect,
        ) -> Retained<UICollectionViewLayoutInvalidationContext>;

        #[method(shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:)]
        #[unsafe(method_family = none)]
        pub unsafe fn shouldInvalidateLayoutForPreferredLayoutAttributes_withOriginalAttributes(
            &self,
            preferred_attributes: &UICollectionViewLayoutAttributes,
            original_attributes: &UICollectionViewLayoutAttributes,
        ) -> bool;

        #[method(invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidationContextForPreferredLayoutAttributes_withOriginalAttributes(
            &self,
            preferred_attributes: &UICollectionViewLayoutAttributes,
            original_attributes: &UICollectionViewLayoutAttributes,
        ) -> Retained<UICollectionViewLayoutInvalidationContext>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(targetContentOffsetForProposedContentOffset:withScrollingVelocity:)]
        #[unsafe(method_family = none)]
        pub unsafe fn targetContentOffsetForProposedContentOffset_withScrollingVelocity(
            &self,
            proposed_content_offset: CGPoint,
            velocity: CGPoint,
        ) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(targetContentOffsetForProposedContentOffset:)]
        #[unsafe(method_family = none)]
        pub unsafe fn targetContentOffsetForProposedContentOffset(
            &self,
            proposed_content_offset: CGPoint,
        ) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(collectionViewContentSize)]
        #[unsafe(method_family = none)]
        pub unsafe fn collectionViewContentSize(&self) -> CGSize;

        #[cfg(feature = "UIInterface")]
        #[method(developmentLayoutDirection)]
        #[unsafe(method_family = none)]
        pub unsafe fn developmentLayoutDirection(&self) -> UIUserInterfaceLayoutDirection;

        #[method(flipsHorizontallyInOppositeLayoutDirection)]
        #[unsafe(method_family = none)]
        pub unsafe fn flipsHorizontallyInOppositeLayoutDirection(&self) -> bool;
    }
);

extern_methods!(
    /// UIUpdateSupportHooks
    unsafe impl UICollectionViewLayout {
        #[cfg(feature = "UICollectionViewUpdateItem")]
        #[method(prepareForCollectionViewUpdates:)]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareForCollectionViewUpdates(
            &self,
            update_items: &NSArray<UICollectionViewUpdateItem>,
        );

        #[method(finalizeCollectionViewUpdates)]
        #[unsafe(method_family = none)]
        pub unsafe fn finalizeCollectionViewUpdates(&self);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(prepareForAnimatedBoundsChange:)]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareForAnimatedBoundsChange(&self, old_bounds: CGRect);

        #[method(finalizeAnimatedBoundsChange)]
        #[unsafe(method_family = none)]
        pub unsafe fn finalizeAnimatedBoundsChange(&self);

        #[method(prepareForTransitionToLayout:)]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareForTransitionToLayout(&self, new_layout: &UICollectionViewLayout);

        #[method(prepareForTransitionFromLayout:)]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareForTransitionFromLayout(&self, old_layout: &UICollectionViewLayout);

        #[method(finalizeLayoutTransition)]
        #[unsafe(method_family = none)]
        pub unsafe fn finalizeLayoutTransition(&self);

        #[method(initialLayoutAttributesForAppearingItemAtIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn initialLayoutAttributesForAppearingItemAtIndexPath(
            &self,
            item_index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(finalLayoutAttributesForDisappearingItemAtIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn finalLayoutAttributesForDisappearingItemAtIndexPath(
            &self,
            item_index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn initialLayoutAttributesForAppearingSupplementaryElementOfKind_atIndexPath(
            &self,
            element_kind: &NSString,
            element_index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn finalLayoutAttributesForDisappearingSupplementaryElementOfKind_atIndexPath(
            &self,
            element_kind: &NSString,
            element_index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn initialLayoutAttributesForAppearingDecorationElementOfKind_atIndexPath(
            &self,
            element_kind: &NSString,
            decoration_index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:)]
        #[unsafe(method_family = none)]
        pub unsafe fn finalLayoutAttributesForDisappearingDecorationElementOfKind_atIndexPath(
            &self,
            element_kind: &NSString,
            decoration_index_path: &NSIndexPath,
        ) -> Option<Retained<UICollectionViewLayoutAttributes>>;

        #[method(indexPathsToDeleteForSupplementaryViewOfKind:)]
        #[unsafe(method_family = none)]
        pub unsafe fn indexPathsToDeleteForSupplementaryViewOfKind(
            &self,
            element_kind: &NSString,
        ) -> Retained<NSArray<NSIndexPath>>;

        #[method(indexPathsToDeleteForDecorationViewOfKind:)]
        #[unsafe(method_family = none)]
        pub unsafe fn indexPathsToDeleteForDecorationViewOfKind(
            &self,
            element_kind: &NSString,
        ) -> Retained<NSArray<NSIndexPath>>;

        #[method(indexPathsToInsertForSupplementaryViewOfKind:)]
        #[unsafe(method_family = none)]
        pub unsafe fn indexPathsToInsertForSupplementaryViewOfKind(
            &self,
            element_kind: &NSString,
        ) -> Retained<NSArray<NSIndexPath>>;

        #[method(indexPathsToInsertForDecorationViewOfKind:)]
        #[unsafe(method_family = none)]
        pub unsafe fn indexPathsToInsertForDecorationViewOfKind(
            &self,
            element_kind: &NSString,
        ) -> Retained<NSArray<NSIndexPath>>;
    }
);

extern_methods!(
    /// UIReorderingSupportHooks
    unsafe impl UICollectionViewLayout {
        #[cfg(feature = "objc2-core-foundation")]
        #[method(targetIndexPathForInteractivelyMovingItem:withPosition:)]
        #[unsafe(method_family = none)]
        pub unsafe fn targetIndexPathForInteractivelyMovingItem_withPosition(
            &self,
            previous_index_path: &NSIndexPath,
            position: CGPoint,
        ) -> Retained<NSIndexPath>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(layoutAttributesForInteractivelyMovingItemAtIndexPath:withTargetPosition:)]
        #[unsafe(method_family = none)]
        pub unsafe fn layoutAttributesForInteractivelyMovingItemAtIndexPath_withTargetPosition(
            &self,
            index_path: &NSIndexPath,
            position: CGPoint,
        ) -> Retained<UICollectionViewLayoutAttributes>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(invalidationContextForInteractivelyMovingItems:withTargetPosition:previousIndexPaths:previousPosition:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidationContextForInteractivelyMovingItems_withTargetPosition_previousIndexPaths_previousPosition(
            &self,
            target_index_paths: &NSArray<NSIndexPath>,
            target_position: CGPoint,
            previous_index_paths: &NSArray<NSIndexPath>,
            previous_position: CGPoint,
        ) -> Retained<UICollectionViewLayoutInvalidationContext>;

        #[method(invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:previousIndexPaths:movementCancelled:)]
        #[unsafe(method_family = none)]
        pub unsafe fn invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths_previousIndexPaths_movementCancelled(
            &self,
            index_paths: &NSArray<NSIndexPath>,
            previous_index_paths: &NSArray<NSIndexPath>,
            movement_cancelled: bool,
        ) -> Retained<UICollectionViewLayoutInvalidationContext>;
    }
);
