//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UILocalizedIndexedCollation;
);

unsafe impl NSObjectProtocol for UILocalizedIndexedCollation {}

extern_methods!(
    unsafe impl UILocalizedIndexedCollation {
        #[method_id(currentCollation)]
        #[unsafe(method_family = none)]
        pub unsafe fn currentCollation(mtm: MainThreadMarker) -> Retained<Self>;

        #[method_id(sectionTitles)]
        #[unsafe(method_family = none)]
        pub unsafe fn sectionTitles(&self) -> Retained<NSArray<NSString>>;

        #[method_id(sectionIndexTitles)]
        #[unsafe(method_family = none)]
        pub unsafe fn sectionIndexTitles(&self) -> Retained<NSArray<NSString>>;

        #[method(sectionForSectionIndexTitleAtIndex:)]
        pub unsafe fn sectionForSectionIndexTitleAtIndex(
            &self,
            index_title_index: NSInteger,
        ) -> NSInteger;

        #[method(sectionForObject:collationStringSelector:)]
        pub unsafe fn sectionForObject_collationStringSelector(
            &self,
            object: &AnyObject,
            selector: Sel,
        ) -> NSInteger;

        #[method_id(sortedArrayFromArray:collationStringSelector:)]
        #[unsafe(method_family = none)]
        pub unsafe fn sortedArrayFromArray_collationStringSelector(
            &self,
            array: &NSArray,
            selector: Sel,
        ) -> Retained<NSArray>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UILocalizedIndexedCollation {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
