//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiprintinteractioncompletionhandler?language=objc)
#[cfg(feature = "block2")]
pub type UIPrintInteractionCompletionHandler =
    *mut block2::Block<dyn Fn(NonNull<UIPrintInteractionController>, Bool, *mut NSError)>;

/// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiprintercutterbehavior?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UIPrinterCutterBehavior(pub NSInteger);
impl UIPrinterCutterBehavior {
    #[doc(alias = "UIPrinterCutterBehaviorNoCut")]
    pub const NoCut: Self = Self(0);
    #[doc(alias = "UIPrinterCutterBehaviorPrinterDefault")]
    pub const PrinterDefault: Self = Self(1);
    #[doc(alias = "UIPrinterCutterBehaviorCutAfterEachPage")]
    pub const CutAfterEachPage: Self = Self(2);
    #[doc(alias = "UIPrinterCutterBehaviorCutAfterEachCopy")]
    pub const CutAfterEachCopy: Self = Self(3);
    #[doc(alias = "UIPrinterCutterBehaviorCutAfterEachJob")]
    pub const CutAfterEachJob: Self = Self(4);
}

unsafe impl Encode for UIPrinterCutterBehavior {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UIPrinterCutterBehavior {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIPrintInteractionController;
);

unsafe impl NSObjectProtocol for UIPrintInteractionController {}

extern_methods!(
    unsafe impl UIPrintInteractionController {
        #[method(isPrintingAvailable)]
        #[unsafe(method_family = none)]
        pub unsafe fn isPrintingAvailable(mtm: MainThreadMarker) -> bool;

        #[method(printableUTIs)]
        #[unsafe(method_family = none)]
        pub unsafe fn printableUTIs(mtm: MainThreadMarker) -> Retained<NSSet<NSString>>;

        #[method(canPrintURL:)]
        #[unsafe(method_family = none)]
        pub unsafe fn canPrintURL(url: &NSURL, mtm: MainThreadMarker) -> bool;

        #[method(canPrintData:)]
        #[unsafe(method_family = none)]
        pub unsafe fn canPrintData(data: &NSData, mtm: MainThreadMarker) -> bool;

        #[method(sharedPrintController)]
        #[unsafe(method_family = none)]
        pub unsafe fn sharedPrintController(
            mtm: MainThreadMarker,
        ) -> Retained<UIPrintInteractionController>;

        #[cfg(feature = "UIPrintInfo")]
        #[method(printInfo)]
        #[unsafe(method_family = none)]
        pub unsafe fn printInfo(&self) -> Option<Retained<UIPrintInfo>>;

        #[cfg(feature = "UIPrintInfo")]
        /// Setter for [`printInfo`][Self::printInfo].
        #[method(setPrintInfo:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setPrintInfo(&self, print_info: Option<&UIPrintInfo>);

        #[method(delegate)]
        #[unsafe(method_family = none)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn UIPrintInteractionControllerDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`delegate`][Self::delegate].
        #[method(setDelegate:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn UIPrintInteractionControllerDelegate>>,
        );

        #[deprecated = "Pages can be removed from the print preview, so page range is always shown."]
        #[method(showsPageRange)]
        #[unsafe(method_family = none)]
        pub unsafe fn showsPageRange(&self) -> bool;

        /// Setter for [`showsPageRange`][Self::showsPageRange].
        #[deprecated = "Pages can be removed from the print preview, so page range is always shown."]
        #[method(setShowsPageRange:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setShowsPageRange(&self, shows_page_range: bool);

        #[method(showsNumberOfCopies)]
        #[unsafe(method_family = none)]
        pub unsafe fn showsNumberOfCopies(&self) -> bool;

        /// Setter for [`showsNumberOfCopies`][Self::showsNumberOfCopies].
        #[method(setShowsNumberOfCopies:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setShowsNumberOfCopies(&self, shows_number_of_copies: bool);

        #[method(showsPaperSelectionForLoadedPapers)]
        #[unsafe(method_family = none)]
        pub unsafe fn showsPaperSelectionForLoadedPapers(&self) -> bool;

        /// Setter for [`showsPaperSelectionForLoadedPapers`][Self::showsPaperSelectionForLoadedPapers].
        #[method(setShowsPaperSelectionForLoadedPapers:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setShowsPaperSelectionForLoadedPapers(
            &self,
            shows_paper_selection_for_loaded_papers: bool,
        );

        #[method(showsPaperOrientation)]
        #[unsafe(method_family = none)]
        pub unsafe fn showsPaperOrientation(&self) -> bool;

        /// Setter for [`showsPaperOrientation`][Self::showsPaperOrientation].
        #[method(setShowsPaperOrientation:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setShowsPaperOrientation(&self, shows_paper_orientation: bool);

        #[cfg(feature = "UIPrintPaper")]
        #[method(printPaper)]
        #[unsafe(method_family = none)]
        pub unsafe fn printPaper(&self) -> Option<Retained<UIPrintPaper>>;

        #[cfg(feature = "UIPrintPageRenderer")]
        #[method(printPageRenderer)]
        #[unsafe(method_family = none)]
        pub unsafe fn printPageRenderer(&self) -> Option<Retained<UIPrintPageRenderer>>;

        #[cfg(feature = "UIPrintPageRenderer")]
        /// Setter for [`printPageRenderer`][Self::printPageRenderer].
        #[method(setPrintPageRenderer:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setPrintPageRenderer(
            &self,
            print_page_renderer: Option<&UIPrintPageRenderer>,
        );

        #[cfg(feature = "UIPrintFormatter")]
        #[method(printFormatter)]
        #[unsafe(method_family = none)]
        pub unsafe fn printFormatter(&self) -> Option<Retained<UIPrintFormatter>>;

        #[cfg(feature = "UIPrintFormatter")]
        /// Setter for [`printFormatter`][Self::printFormatter].
        #[method(setPrintFormatter:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setPrintFormatter(&self, print_formatter: Option<&UIPrintFormatter>);

        #[method(printingItem)]
        #[unsafe(method_family = none)]
        pub unsafe fn printingItem(&self) -> Option<Retained<AnyObject>>;

        /// Setter for [`printingItem`][Self::printingItem].
        #[method(setPrintingItem:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setPrintingItem(&self, printing_item: Option<&AnyObject>);

        #[method(printingItems)]
        #[unsafe(method_family = none)]
        pub unsafe fn printingItems(&self) -> Option<Retained<NSArray>>;

        /// Setter for [`printingItems`][Self::printingItems].
        #[method(setPrintingItems:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setPrintingItems(&self, printing_items: Option<&NSArray>);

        #[cfg(feature = "block2")]
        #[method(presentAnimated:completionHandler:)]
        #[unsafe(method_family = none)]
        pub unsafe fn presentAnimated_completionHandler(
            &self,
            animated: bool,
            completion: UIPrintInteractionCompletionHandler,
        ) -> bool;

        #[cfg(all(
            feature = "UIResponder",
            feature = "UIView",
            feature = "block2",
            feature = "objc2-core-foundation"
        ))]
        #[method(presentFromRect:inView:animated:completionHandler:)]
        #[unsafe(method_family = none)]
        pub unsafe fn presentFromRect_inView_animated_completionHandler(
            &self,
            rect: CGRect,
            view: &UIView,
            animated: bool,
            completion: UIPrintInteractionCompletionHandler,
        ) -> bool;

        #[cfg(all(feature = "UIBarButtonItem", feature = "UIBarItem", feature = "block2"))]
        #[method(presentFromBarButtonItem:animated:completionHandler:)]
        #[unsafe(method_family = none)]
        pub unsafe fn presentFromBarButtonItem_animated_completionHandler(
            &self,
            item: &UIBarButtonItem,
            animated: bool,
            completion: UIPrintInteractionCompletionHandler,
        ) -> bool;

        #[cfg(all(feature = "UIPrinter", feature = "block2"))]
        /// Use to print without showing the standard print panel. Use with a
        /// UIPrinter found using the UIPrinterPickerController.
        /// The value for the duplex property on printInfo will be ignored.
        #[method(printToPrinter:completionHandler:)]
        #[unsafe(method_family = none)]
        pub unsafe fn printToPrinter_completionHandler(
            &self,
            printer: &UIPrinter,
            completion: UIPrintInteractionCompletionHandler,
        ) -> bool;

        #[method(dismissAnimated:)]
        #[unsafe(method_family = none)]
        pub unsafe fn dismissAnimated(&self, animated: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIPrintInteractionController {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate?language=objc)
    pub unsafe trait UIPrintInteractionControllerDelegate:
        NSObjectProtocol + MainThreadOnly
    {
        #[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
        #[optional]
        #[method(printInteractionControllerParentViewController:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionControllerParentViewController(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
        ) -> Option<Retained<UIViewController>>;

        #[cfg(feature = "UIPrintPaper")]
        #[optional]
        #[method(printInteractionController:choosePaper:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionController_choosePaper(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
            paper_list: &NSArray<UIPrintPaper>,
        ) -> Retained<UIPrintPaper>;

        #[optional]
        #[method(printInteractionControllerWillPresentPrinterOptions:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionControllerWillPresentPrinterOptions(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
        );

        #[optional]
        #[method(printInteractionControllerDidPresentPrinterOptions:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionControllerDidPresentPrinterOptions(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
        );

        #[optional]
        #[method(printInteractionControllerWillDismissPrinterOptions:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionControllerWillDismissPrinterOptions(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
        );

        #[optional]
        #[method(printInteractionControllerDidDismissPrinterOptions:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionControllerDidDismissPrinterOptions(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
        );

        #[optional]
        #[method(printInteractionControllerWillStartJob:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionControllerWillStartJob(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
        );

        #[optional]
        #[method(printInteractionControllerDidFinishJob:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionControllerDidFinishJob(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
        );

        #[cfg(all(feature = "UIPrintPaper", feature = "objc2-core-foundation"))]
        #[optional]
        #[method(printInteractionController:cutLengthForPaper:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionController_cutLengthForPaper(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
            paper: &UIPrintPaper,
        ) -> CGFloat;

        #[optional]
        #[method(printInteractionController:chooseCutterBehavior:)]
        #[unsafe(method_family = none)]
        unsafe fn printInteractionController_chooseCutterBehavior(
            &self,
            print_interaction_controller: &UIPrintInteractionController,
            available_behaviors: &NSArray,
        ) -> UIPrinterCutterBehavior;
    }
);
