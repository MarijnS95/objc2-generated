//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiaccessibilityelement?language=objc)
    #[unsafe(super(UIResponder, NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "UIResponder")]
    pub struct UIAccessibilityElement;
);

#[cfg(feature = "UIResponder")]
unsafe impl NSObjectProtocol for UIAccessibilityElement {}

#[cfg(all(feature = "UIAccessibilityIdentification", feature = "UIResponder"))]
unsafe impl UIAccessibilityIdentification for UIAccessibilityElement {}

#[cfg(feature = "UIResponder")]
unsafe impl UIResponderStandardEditActions for UIAccessibilityElement {}

extern_methods!(
    #[cfg(feature = "UIResponder")]
    unsafe impl UIAccessibilityElement {
        #[unsafe(method_family(init))]
        #[method_id(initWithAccessibilityContainer:)]
        pub unsafe fn initWithAccessibilityContainer(
            this: Allocated<Self>,
            container: &AnyObject,
        ) -> Retained<Self>;

        #[unsafe(method_family(none))]
        #[method_id(accessibilityContainer)]
        pub unsafe fn accessibilityContainer(&self) -> Option<Retained<AnyObject>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`accessibilityContainer`][Self::accessibilityContainer].
        #[method(setAccessibilityContainer:)]
        pub unsafe fn setAccessibilityContainer(&self, accessibility_container: Option<&AnyObject>);

        #[method(isAccessibilityElement)]
        pub unsafe fn isAccessibilityElement(&self) -> bool;

        /// Setter for [`isAccessibilityElement`][Self::isAccessibilityElement].
        #[method(setIsAccessibilityElement:)]
        pub unsafe fn setIsAccessibilityElement(&self, is_accessibility_element: bool);

        #[unsafe(method_family(none))]
        #[method_id(accessibilityLabel)]
        pub unsafe fn accessibilityLabel(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilityLabel`][Self::accessibilityLabel].
        #[method(setAccessibilityLabel:)]
        pub unsafe fn setAccessibilityLabel(&self, accessibility_label: Option<&NSString>);

        #[unsafe(method_family(none))]
        #[method_id(accessibilityHint)]
        pub unsafe fn accessibilityHint(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilityHint`][Self::accessibilityHint].
        #[method(setAccessibilityHint:)]
        pub unsafe fn setAccessibilityHint(&self, accessibility_hint: Option<&NSString>);

        #[unsafe(method_family(none))]
        #[method_id(accessibilityValue)]
        pub unsafe fn accessibilityValue(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilityValue`][Self::accessibilityValue].
        #[method(setAccessibilityValue:)]
        pub unsafe fn setAccessibilityValue(&self, accessibility_value: Option<&NSString>);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(accessibilityFrame)]
        pub unsafe fn accessibilityFrame(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`accessibilityFrame`][Self::accessibilityFrame].
        #[method(setAccessibilityFrame:)]
        pub unsafe fn setAccessibilityFrame(&self, accessibility_frame: CGRect);

        #[cfg(feature = "UIAccessibilityConstants")]
        #[method(accessibilityTraits)]
        pub unsafe fn accessibilityTraits(&self) -> UIAccessibilityTraits;

        #[cfg(feature = "UIAccessibilityConstants")]
        /// Setter for [`accessibilityTraits`][Self::accessibilityTraits].
        #[method(setAccessibilityTraits:)]
        pub unsafe fn setAccessibilityTraits(&self, accessibility_traits: UIAccessibilityTraits);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(accessibilityFrameInContainerSpace)]
        pub unsafe fn accessibilityFrameInContainerSpace(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`accessibilityFrameInContainerSpace`][Self::accessibilityFrameInContainerSpace].
        #[method(setAccessibilityFrameInContainerSpace:)]
        pub unsafe fn setAccessibilityFrameInContainerSpace(
            &self,
            accessibility_frame_in_container_space: CGRect,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "UIResponder")]
    unsafe impl UIAccessibilityElement {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
