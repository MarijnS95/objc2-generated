//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uibaritem?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIBarItem;
);

unsafe impl NSCoding for UIBarItem {}

unsafe impl NSObjectProtocol for UIBarItem {}

#[cfg(feature = "UIAppearance")]
unsafe impl UIAppearance for UIBarItem {}

extern_methods!(
    unsafe impl UIBarItem {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(init))]
        #[method_id(initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        /// Setter for [`isEnabled`][Self::isEnabled].
        #[method(setEnabled:)]
        pub unsafe fn setEnabled(&self, enabled: bool);

        #[unsafe(method_family(none))]
        #[method_id(title)]
        pub unsafe fn title(&self) -> Option<Retained<NSString>>;

        /// Setter for [`title`][Self::title].
        #[method(setTitle:)]
        pub unsafe fn setTitle(&self, title: Option<&NSString>);

        #[cfg(feature = "UIImage")]
        #[unsafe(method_family(none))]
        #[method_id(image)]
        pub unsafe fn image(&self) -> Option<Retained<UIImage>>;

        #[cfg(feature = "UIImage")]
        /// Setter for [`image`][Self::image].
        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: Option<&UIImage>);

        #[cfg(feature = "UIImage")]
        #[unsafe(method_family(none))]
        #[method_id(landscapeImagePhone)]
        pub unsafe fn landscapeImagePhone(&self) -> Option<Retained<UIImage>>;

        #[cfg(feature = "UIImage")]
        /// Setter for [`landscapeImagePhone`][Self::landscapeImagePhone].
        #[method(setLandscapeImagePhone:)]
        pub unsafe fn setLandscapeImagePhone(&self, landscape_image_phone: Option<&UIImage>);

        #[cfg(feature = "UIImage")]
        #[unsafe(method_family(none))]
        #[method_id(largeContentSizeImage)]
        pub unsafe fn largeContentSizeImage(&self) -> Option<Retained<UIImage>>;

        #[cfg(feature = "UIImage")]
        /// Setter for [`largeContentSizeImage`][Self::largeContentSizeImage].
        #[method(setLargeContentSizeImage:)]
        pub unsafe fn setLargeContentSizeImage(&self, large_content_size_image: Option<&UIImage>);

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        #[method(imageInsets)]
        pub unsafe fn imageInsets(&self) -> UIEdgeInsets;

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        /// Setter for [`imageInsets`][Self::imageInsets].
        #[method(setImageInsets:)]
        pub unsafe fn setImageInsets(&self, image_insets: UIEdgeInsets);

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        #[method(landscapeImagePhoneInsets)]
        pub unsafe fn landscapeImagePhoneInsets(&self) -> UIEdgeInsets;

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        /// Setter for [`landscapeImagePhoneInsets`][Self::landscapeImagePhoneInsets].
        #[method(setLandscapeImagePhoneInsets:)]
        pub unsafe fn setLandscapeImagePhoneInsets(
            &self,
            landscape_image_phone_insets: UIEdgeInsets,
        );

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        #[method(largeContentSizeImageInsets)]
        pub unsafe fn largeContentSizeImageInsets(&self) -> UIEdgeInsets;

        #[cfg(all(feature = "UIGeometry", feature = "objc2-core-foundation"))]
        /// Setter for [`largeContentSizeImageInsets`][Self::largeContentSizeImageInsets].
        #[method(setLargeContentSizeImageInsets:)]
        pub unsafe fn setLargeContentSizeImageInsets(
            &self,
            large_content_size_image_insets: UIEdgeInsets,
        );

        #[method(tag)]
        pub unsafe fn tag(&self) -> NSInteger;

        /// Setter for [`tag`][Self::tag].
        #[method(setTag:)]
        pub unsafe fn setTag(&self, tag: NSInteger);

        #[cfg(feature = "UIControl")]
        #[method(setTitleTextAttributes:forState:)]
        pub unsafe fn setTitleTextAttributes_forState(
            &self,
            attributes: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
            state: UIControlState,
        );

        #[cfg(feature = "UIControl")]
        #[unsafe(method_family(none))]
        #[method_id(titleTextAttributesForState:)]
        pub unsafe fn titleTextAttributesForState(
            &self,
            state: UIControlState,
        ) -> Option<Retained<NSDictionary<NSAttributedStringKey, AnyObject>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIBarItem {
        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
