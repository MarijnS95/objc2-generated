//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkautomaticreloadpaymentsummaryitem?language=objc)
    #[unsafe(super(PKPaymentSummaryItem, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PKPaymentSummaryItem")]
    pub struct PKAutomaticReloadPaymentSummaryItem;
);

#[cfg(feature = "PKPaymentSummaryItem")]
unsafe impl NSObjectProtocol for PKAutomaticReloadPaymentSummaryItem {}

#[cfg(feature = "PKPaymentSummaryItem")]
impl PKAutomaticReloadPaymentSummaryItem {
    extern_methods!(
        #[unsafe(method(thresholdAmount))]
        #[unsafe(method_family = none)]
        pub unsafe fn thresholdAmount(&self) -> Retained<NSDecimalNumber>;

        /// Setter for [`thresholdAmount`][Self::thresholdAmount].
        #[unsafe(method(setThresholdAmount:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setThresholdAmount(&self, threshold_amount: &NSDecimalNumber);
    );
}

/// Methods declared on superclass `PKPaymentSummaryItem`.
#[cfg(feature = "PKPaymentSummaryItem")]
impl PKAutomaticReloadPaymentSummaryItem {
    extern_methods!(
        #[unsafe(method(summaryItemWithLabel:amount:))]
        #[unsafe(method_family = none)]
        pub unsafe fn summaryItemWithLabel_amount(
            label: &NSString,
            amount: &NSDecimalNumber,
        ) -> Retained<Self>;

        #[unsafe(method(summaryItemWithLabel:amount:type:))]
        #[unsafe(method_family = none)]
        pub unsafe fn summaryItemWithLabel_amount_type(
            label: &NSString,
            amount: &NSDecimalNumber,
            r#type: PKPaymentSummaryItemType,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "PKPaymentSummaryItem")]
impl PKAutomaticReloadPaymentSummaryItem {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
