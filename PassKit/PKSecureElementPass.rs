//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/passkit/pksecureelementpassactivationstate?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct PKSecureElementPassActivationState(pub NSInteger);
impl PKSecureElementPassActivationState {
    #[doc(alias = "PKSecureElementPassActivationStateActivated")]
    pub const Activated: Self = Self(0);
    #[doc(alias = "PKSecureElementPassActivationStateRequiresActivation")]
    pub const RequiresActivation: Self = Self(1);
    #[doc(alias = "PKSecureElementPassActivationStateActivating")]
    pub const Activating: Self = Self(2);
    #[doc(alias = "PKSecureElementPassActivationStateSuspended")]
    pub const Suspended: Self = Self(3);
    #[doc(alias = "PKSecureElementPassActivationStateDeactivated")]
    pub const Deactivated: Self = Self(4);
}

unsafe impl Encode for PKSecureElementPassActivationState {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for PKSecureElementPassActivationState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/passkit/pksecureelementpass?language=objc)
    #[unsafe(super(PKPass, PKObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "PKObject", feature = "PKPass"))]
    pub struct PKSecureElementPass;
);

#[cfg(all(feature = "PKObject", feature = "PKPass"))]
extern_conformance!(
    unsafe impl NSObjectProtocol for PKSecureElementPass {}
);

#[cfg(all(feature = "PKObject", feature = "PKPass"))]
impl PKSecureElementPass {
    extern_methods!(
        #[unsafe(method(primaryAccountIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn primaryAccountIdentifier(&self) -> Retained<NSString>;

        #[unsafe(method(primaryAccountNumberSuffix))]
        #[unsafe(method_family = none)]
        pub unsafe fn primaryAccountNumberSuffix(&self) -> Retained<NSString>;

        #[unsafe(method(deviceAccountIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn deviceAccountIdentifier(&self) -> Retained<NSString>;

        #[unsafe(method(deviceAccountNumberSuffix))]
        #[unsafe(method_family = none)]
        pub unsafe fn deviceAccountNumberSuffix(&self) -> Retained<NSString>;

        #[unsafe(method(passActivationState))]
        #[unsafe(method_family = none)]
        pub unsafe fn passActivationState(&self) -> PKSecureElementPassActivationState;

        #[unsafe(method(devicePassIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn devicePassIdentifier(&self) -> Option<Retained<NSString>>;

        #[unsafe(method(pairedTerminalIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn pairedTerminalIdentifier(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `PKPass`.
#[cfg(all(feature = "PKObject", feature = "PKPass"))]
impl PKSecureElementPass {
    extern_methods!(
        #[unsafe(method(initWithData:error:_))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithData_error(
            this: Allocated<Self>,
            data: &NSData,
        ) -> Result<Retained<Self>, Retained<NSError>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(feature = "PKObject", feature = "PKPass"))]
impl PKSecureElementPass {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
