//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput?language=objc)
    #[unsafe(super(AVCaptureOutput, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AVCaptureOutputBase")]
    pub struct AVCaptureVideoDataOutput;
);

#[cfg(feature = "AVCaptureOutputBase")]
unsafe impl NSObjectProtocol for AVCaptureVideoDataOutput {}

extern_methods!(
    #[cfg(feature = "AVCaptureOutputBase")]
    unsafe impl AVCaptureVideoDataOutput {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other sampleBufferDelegate)]
        pub unsafe fn sampleBufferDelegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn AVCaptureVideoDataOutputSampleBufferDelegate>>>;

        #[method_id(@__retain_semantics Other videoSettings)]
        pub unsafe fn videoSettings(&self) -> Retained<NSDictionary<NSString, AnyObject>>;

        #[method(setVideoSettings:)]
        pub unsafe fn setVideoSettings(
            &self,
            video_settings: Option<&NSDictionary<NSString, AnyObject>>,
        );

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other recommendedVideoSettingsForAssetWriterWithOutputFileType:)]
        pub unsafe fn recommendedVideoSettingsForAssetWriterWithOutputFileType(
            &self,
            output_file_type: &AVFileType,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[cfg(all(feature = "AVMediaFormat", feature = "AVVideoSettings"))]
        #[method_id(@__retain_semantics Other availableVideoCodecTypesForAssetWriterWithOutputFileType:)]
        pub unsafe fn availableVideoCodecTypesForAssetWriterWithOutputFileType(
            &self,
            output_file_type: &AVFileType,
        ) -> Retained<NSArray<AVVideoCodecType>>;

        #[cfg(all(feature = "AVMediaFormat", feature = "AVVideoSettings"))]
        #[method_id(@__retain_semantics Other recommendedVideoSettingsForVideoCodecType:assetWriterOutputFileType:)]
        pub unsafe fn recommendedVideoSettingsForVideoCodecType_assetWriterOutputFileType(
            &self,
            video_codec_type: &AVVideoCodecType,
            output_file_type: &AVFileType,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[cfg(all(feature = "AVMediaFormat", feature = "AVVideoSettings"))]
        #[method_id(@__retain_semantics Other recommendedVideoSettingsForVideoCodecType:assetWriterOutputFileType:outputFileURL:)]
        pub unsafe fn recommendedVideoSettingsForVideoCodecType_assetWriterOutputFileType_outputFileURL(
            &self,
            video_codec_type: &AVVideoCodecType,
            output_file_type: &AVFileType,
            output_file_url: Option<&NSURL>,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[method_id(@__retain_semantics Other availableVideoCVPixelFormatTypes)]
        pub unsafe fn availableVideoCVPixelFormatTypes(&self) -> Retained<NSArray<NSNumber>>;

        #[cfg(feature = "AVVideoSettings")]
        #[method_id(@__retain_semantics Other availableVideoCodecTypes)]
        pub unsafe fn availableVideoCodecTypes(&self) -> Retained<NSArray<AVVideoCodecType>>;

        #[cfg(feature = "objc2-core-media")]
        #[deprecated = "Use AVCaptureConnection's videoMinFrameDuration property instead."]
        #[method(minFrameDuration)]
        pub unsafe fn minFrameDuration(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[deprecated = "Use AVCaptureConnection's videoMinFrameDuration property instead."]
        #[method(setMinFrameDuration:)]
        pub unsafe fn setMinFrameDuration(&self, min_frame_duration: CMTime);

        #[method(alwaysDiscardsLateVideoFrames)]
        pub unsafe fn alwaysDiscardsLateVideoFrames(&self) -> bool;

        #[method(setAlwaysDiscardsLateVideoFrames:)]
        pub unsafe fn setAlwaysDiscardsLateVideoFrames(
            &self,
            always_discards_late_video_frames: bool,
        );

        #[method(automaticallyConfiguresOutputBufferDimensions)]
        pub unsafe fn automaticallyConfiguresOutputBufferDimensions(&self) -> bool;

        #[method(setAutomaticallyConfiguresOutputBufferDimensions:)]
        pub unsafe fn setAutomaticallyConfiguresOutputBufferDimensions(
            &self,
            automatically_configures_output_buffer_dimensions: bool,
        );

        #[method(deliversPreviewSizedOutputBuffers)]
        pub unsafe fn deliversPreviewSizedOutputBuffers(&self) -> bool;

        #[method(setDeliversPreviewSizedOutputBuffers:)]
        pub unsafe fn setDeliversPreviewSizedOutputBuffers(
            &self,
            delivers_preview_sized_output_buffers: bool,
        );
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutputsamplebufferdelegate?language=objc)
    pub unsafe trait AVCaptureVideoDataOutputSampleBufferDelegate: NSObjectProtocol {
        #[cfg(all(
            feature = "AVCaptureOutputBase",
            feature = "AVCaptureSession",
            feature = "objc2-core-media"
        ))]
        #[optional]
        #[method(captureOutput:didOutputSampleBuffer:fromConnection:)]
        unsafe fn captureOutput_didOutputSampleBuffer_fromConnection(
            &self,
            output: &AVCaptureOutput,
            sample_buffer: CMSampleBufferRef,
            connection: &AVCaptureConnection,
        );

        #[cfg(all(
            feature = "AVCaptureOutputBase",
            feature = "AVCaptureSession",
            feature = "objc2-core-media"
        ))]
        #[optional]
        #[method(captureOutput:didDropSampleBuffer:fromConnection:)]
        unsafe fn captureOutput_didDropSampleBuffer_fromConnection(
            &self,
            output: &AVCaptureOutput,
            sample_buffer: CMSampleBufferRef,
            connection: &AVCaptureConnection,
        );
    }

    unsafe impl ProtocolType for dyn AVCaptureVideoDataOutputSampleBufferDelegate {}
);
