//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A class whose instances describe a group of tracks in an asset.
    ///
    ///
    /// Instances of AVAssetTrackGroup describe a single group of related tracks in an asset. For example, a track group can
    /// describe a set of alternate tracks, which are tracks containing variations of the same content, such as content
    /// translated into different languages, out of which only one track should be played at a time.
    ///
    /// Clients can inspect the track groups contained in an AVAsset by loading and obtaining the value of its trackGroups property.
    ///
    /// Subclasses of this type that are used from Swift must fulfill the requirements of a Sendable type.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassettrackgroup?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetTrackGroup;
);

unsafe impl Send for AVAssetTrackGroup {}

unsafe impl Sync for AVAssetTrackGroup {}

unsafe impl NSCopying for AVAssetTrackGroup {}

unsafe impl CopyingHelper for AVAssetTrackGroup {
    type Result = Self;
}

unsafe impl NSObjectProtocol for AVAssetTrackGroup {}

extern_methods!(
    unsafe impl AVAssetTrackGroup {
        /// The IDs of all of the tracks in the group.
        ///
        ///
        /// The value of this property is an NSArray of NSNumbers interpreted as CMPersistentTrackIDs, one for each track in the
        /// group.
        #[method_id(@__method_family Other trackIDs)]
        pub unsafe fn trackIDs(&self) -> Retained<NSArray<NSNumber>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVAssetTrackGroup {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
