//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avplayervideooutput?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVPlayerVideoOutput;
);

unsafe impl NSObjectProtocol for AVPlayerVideoOutput {}

extern_methods!(
    unsafe impl AVPlayerVideoOutput {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithSpecification:)]
        pub unsafe fn initWithSpecification(
            this: Allocated<Self>,
            specification: &AVVideoOutputSpecification,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-media")]
        #[method(copyTaggedBufferGroupForHostTime:presentationTimeStamp:activeConfiguration:)]
        pub unsafe fn copyTaggedBufferGroupForHostTime_presentationTimeStamp_activeConfiguration(
            &self,
            host_time: CMTime,
            presentation_time_stamp_out: *mut CMTime,
            active_configuration_out: Option<
                &mut Option<Retained<AVPlayerVideoOutputConfiguration>>,
            >,
        ) -> CMTaggedBufferGroupRef;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/cmtagcollectionvideooutputpreset?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CMTagCollectionVideoOutputPreset(pub u32);
impl CMTagCollectionVideoOutputPreset {
    pub const kCMTagCollectionVideoOutputPreset_Monoscopic: Self = Self(0);
    pub const kCMTagCollectionVideoOutputPreset_Stereoscopic: Self = Self(1);
}

unsafe impl Encode for CMTagCollectionVideoOutputPreset {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for CMTagCollectionVideoOutputPreset {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-media"))]
    pub fn CMTagCollectionCreateWithVideoOutputPreset(
        allocator: CFAllocatorRef,
        preset: CMTagCollectionVideoOutputPreset,
        new_collection_out: NonNull<CMTagCollectionRef>,
    ) -> OSStatus;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avvideooutputspecification?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVVideoOutputSpecification;
);

unsafe impl NSCopying for AVVideoOutputSpecification {}

unsafe impl CopyingHelper for AVVideoOutputSpecification {
    type Result = Self;
}

unsafe impl NSObjectProtocol for AVVideoOutputSpecification {}

extern_methods!(
    unsafe impl AVVideoOutputSpecification {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithTagCollections:)]
        pub unsafe fn initWithTagCollections(
            this: Allocated<Self>,
            tag_collections: &NSArray,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-media")]
        #[deprecated]
        #[method(setOutputPixelBufferAttributes:forTagCollection:)]
        pub unsafe fn setOutputPixelBufferAttributes_forTagCollection(
            &self,
            pixel_buffer_attributes: Option<&NSDictionary<NSString, AnyObject>>,
            tag_collection: CMTagCollectionRef,
        );

        #[cfg(feature = "objc2-core-media")]
        #[method(setOutputSettings:forTagCollection:)]
        pub unsafe fn setOutputSettings_forTagCollection(
            &self,
            output_settings: Option<&NSDictionary<NSString, AnyObject>>,
            tag_collection: CMTagCollectionRef,
        );

        #[method_id(@__retain_semantics Other preferredTagCollections)]
        pub unsafe fn preferredTagCollections(&self) -> Retained<NSArray>;

        #[deprecated]
        #[method_id(@__retain_semantics Other defaultPixelBufferAttributes)]
        pub unsafe fn defaultPixelBufferAttributes(
            &self,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[deprecated]
        #[method(setDefaultPixelBufferAttributes:)]
        pub unsafe fn setDefaultPixelBufferAttributes(
            &self,
            default_pixel_buffer_attributes: Option<&NSDictionary<NSString, AnyObject>>,
        );

        #[method_id(@__retain_semantics Other defaultOutputSettings)]
        pub unsafe fn defaultOutputSettings(
            &self,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[method(setDefaultOutputSettings:)]
        pub unsafe fn setDefaultOutputSettings(
            &self,
            default_output_settings: Option<&NSDictionary<NSString, AnyObject>>,
        );
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avplayervideooutputconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVPlayerVideoOutputConfiguration;
);

unsafe impl NSObjectProtocol for AVPlayerVideoOutputConfiguration {}

extern_methods!(
    unsafe impl AVPlayerVideoOutputConfiguration {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVPlayerItem")]
        #[method_id(@__retain_semantics Other sourcePlayerItem)]
        pub unsafe fn sourcePlayerItem(
            &self,
            mtm: MainThreadMarker,
        ) -> Option<Retained<AVPlayerItem>>;

        #[method_id(@__retain_semantics Other dataChannelDescriptions)]
        pub unsafe fn dataChannelDescriptions(&self) -> Retained<NSArray>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(preferredTransform)]
        pub unsafe fn preferredTransform(&self) -> CGAffineTransform;

        #[cfg(feature = "objc2-core-media")]
        #[method(activationTime)]
        pub unsafe fn activationTime(&self) -> CMTime;
    }
);
