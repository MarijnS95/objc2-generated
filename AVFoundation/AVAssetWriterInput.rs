//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
#[cfg(feature = "objc2-core-video")]
use objc2_core_video::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinput?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetWriterInput;
);

unsafe impl NSObjectProtocol for AVAssetWriterInput {}

extern_methods!(
    unsafe impl AVAssetWriterInput {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other assetWriterInputWithMediaType:outputSettings:)]
        pub unsafe fn assetWriterInputWithMediaType_outputSettings(
            media_type: &AVMediaType,
            output_settings: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "AVMediaFormat", feature = "objc2-core-media"))]
        #[method_id(@__retain_semantics Other assetWriterInputWithMediaType:outputSettings:sourceFormatHint:)]
        pub unsafe fn assetWriterInputWithMediaType_outputSettings_sourceFormatHint(
            media_type: &AVMediaType,
            output_settings: Option<&NSDictionary<NSString, AnyObject>>,
            source_format_hint: CMFormatDescriptionRef,
        ) -> Retained<Self>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Init initWithMediaType:outputSettings:)]
        pub unsafe fn initWithMediaType_outputSettings(
            this: Allocated<Self>,
            media_type: &AVMediaType,
            output_settings: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "AVMediaFormat", feature = "objc2-core-media"))]
        #[method_id(@__retain_semantics Init initWithMediaType:outputSettings:sourceFormatHint:)]
        pub unsafe fn initWithMediaType_outputSettings_sourceFormatHint(
            this: Allocated<Self>,
            media_type: &AVMediaType,
            output_settings: Option<&NSDictionary<NSString, AnyObject>>,
            source_format_hint: CMFormatDescriptionRef,
        ) -> Retained<Self>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaType)]
        pub unsafe fn mediaType(&self) -> Retained<AVMediaType>;

        #[method_id(@__retain_semantics Other outputSettings)]
        pub unsafe fn outputSettings(&self) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[cfg(feature = "objc2-core-media")]
        #[method(sourceFormatHint)]
        pub unsafe fn sourceFormatHint(&self) -> CMFormatDescriptionRef;

        #[cfg(feature = "AVMetadataItem")]
        #[method_id(@__retain_semantics Other metadata)]
        pub unsafe fn metadata(&self) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataItem")]
        #[method(setMetadata:)]
        pub unsafe fn setMetadata(&self, metadata: &NSArray<AVMetadataItem>);

        #[method(isReadyForMoreMediaData)]
        pub unsafe fn isReadyForMoreMediaData(&self) -> bool;

        #[method(expectsMediaDataInRealTime)]
        pub unsafe fn expectsMediaDataInRealTime(&self) -> bool;

        #[method(setExpectsMediaDataInRealTime:)]
        pub unsafe fn setExpectsMediaDataInRealTime(&self, expects_media_data_in_real_time: bool);

        #[cfg(feature = "objc2-core-media")]
        #[method(appendSampleBuffer:)]
        pub unsafe fn appendSampleBuffer(&self, sample_buffer: CMSampleBufferRef) -> bool;

        #[method(markAsFinished)]
        pub unsafe fn markAsFinished(&self);
    }
);

extern_methods!(
    /// AVAssetWriterInputLanguageProperties
    unsafe impl AVAssetWriterInput {
        #[method_id(@__retain_semantics Other languageCode)]
        pub unsafe fn languageCode(&self) -> Option<Retained<NSString>>;

        #[method(setLanguageCode:)]
        pub unsafe fn setLanguageCode(&self, language_code: Option<&NSString>);

        #[method_id(@__retain_semantics Other extendedLanguageTag)]
        pub unsafe fn extendedLanguageTag(&self) -> Option<Retained<NSString>>;

        #[method(setExtendedLanguageTag:)]
        pub unsafe fn setExtendedLanguageTag(&self, extended_language_tag: Option<&NSString>);
    }
);

extern_methods!(
    /// AVAssetWriterInputPropertiesForVisualCharacteristic
    unsafe impl AVAssetWriterInput {
        #[cfg(feature = "objc2-core-foundation")]
        #[method(naturalSize)]
        pub unsafe fn naturalSize(&self) -> CGSize;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(setNaturalSize:)]
        pub unsafe fn setNaturalSize(&self, natural_size: CGSize);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(transform)]
        pub unsafe fn transform(&self) -> CGAffineTransform;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(setTransform:)]
        pub unsafe fn setTransform(&self, transform: CGAffineTransform);
    }
);

extern_methods!(
    /// AVAssetWriterInputPropertiesForAudibleCharacteristic
    unsafe impl AVAssetWriterInput {
        #[method(preferredVolume)]
        pub unsafe fn preferredVolume(&self) -> c_float;

        #[method(setPreferredVolume:)]
        pub unsafe fn setPreferredVolume(&self, preferred_volume: c_float);
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputmediadatalocation?language=objc)
// NS_TYPED_ENUM
pub type AVAssetWriterInputMediaDataLocation = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputmediadatalocationinterleavedwithmainmediadata?language=objc)
    pub static AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData:
        &'static AVAssetWriterInputMediaDataLocation;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputmediadatalocationbeforemainmediadatanotinterleaved?language=objc)
    pub static AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved:
        &'static AVAssetWriterInputMediaDataLocation;
}

extern_methods!(
    /// AVAssetWriterInputFileTypeSpecificProperties
    unsafe impl AVAssetWriterInput {
        #[method(marksOutputTrackAsEnabled)]
        pub unsafe fn marksOutputTrackAsEnabled(&self) -> bool;

        #[method(setMarksOutputTrackAsEnabled:)]
        pub unsafe fn setMarksOutputTrackAsEnabled(&self, marks_output_track_as_enabled: bool);

        #[cfg(feature = "objc2-core-media")]
        #[method(mediaTimeScale)]
        pub unsafe fn mediaTimeScale(&self) -> CMTimeScale;

        #[cfg(feature = "objc2-core-media")]
        #[method(setMediaTimeScale:)]
        pub unsafe fn setMediaTimeScale(&self, media_time_scale: CMTimeScale);

        #[cfg(feature = "objc2-core-media")]
        #[method(preferredMediaChunkDuration)]
        pub unsafe fn preferredMediaChunkDuration(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setPreferredMediaChunkDuration:)]
        pub unsafe fn setPreferredMediaChunkDuration(&self, preferred_media_chunk_duration: CMTime);

        #[method(preferredMediaChunkAlignment)]
        pub unsafe fn preferredMediaChunkAlignment(&self) -> NSInteger;

        #[method(setPreferredMediaChunkAlignment:)]
        pub unsafe fn setPreferredMediaChunkAlignment(
            &self,
            preferred_media_chunk_alignment: NSInteger,
        );

        #[method_id(@__retain_semantics Other sampleReferenceBaseURL)]
        pub unsafe fn sampleReferenceBaseURL(&self) -> Option<Retained<NSURL>>;

        #[method(setSampleReferenceBaseURL:)]
        pub unsafe fn setSampleReferenceBaseURL(&self, sample_reference_base_url: Option<&NSURL>);

        #[method_id(@__retain_semantics Other mediaDataLocation)]
        pub unsafe fn mediaDataLocation(&self) -> Retained<AVAssetWriterInputMediaDataLocation>;

        #[method(setMediaDataLocation:)]
        pub unsafe fn setMediaDataLocation(
            &self,
            media_data_location: &AVAssetWriterInputMediaDataLocation,
        );
    }
);

extern_methods!(
    /// AVAssetWriterInputTrackAssociations
    unsafe impl AVAssetWriterInput {
        #[method(canAddTrackAssociationWithTrackOfInput:type:)]
        pub unsafe fn canAddTrackAssociationWithTrackOfInput_type(
            &self,
            input: &AVAssetWriterInput,
            track_association_type: &NSString,
        ) -> bool;

        #[method(addTrackAssociationWithTrackOfInput:type:)]
        pub unsafe fn addTrackAssociationWithTrackOfInput_type(
            &self,
            input: &AVAssetWriterInput,
            track_association_type: &NSString,
        );
    }
);

extern_methods!(
    /// AVAssetWriterInputMultiPass
    unsafe impl AVAssetWriterInput {
        #[method(performsMultiPassEncodingIfSupported)]
        pub unsafe fn performsMultiPassEncodingIfSupported(&self) -> bool;

        #[method(setPerformsMultiPassEncodingIfSupported:)]
        pub unsafe fn setPerformsMultiPassEncodingIfSupported(
            &self,
            performs_multi_pass_encoding_if_supported: bool,
        );

        #[method(canPerformMultiplePasses)]
        pub unsafe fn canPerformMultiplePasses(&self) -> bool;

        #[method_id(@__retain_semantics Other currentPassDescription)]
        pub unsafe fn currentPassDescription(
            &self,
        ) -> Option<Retained<AVAssetWriterInputPassDescription>>;

        #[method(markCurrentPassAsFinished)]
        pub unsafe fn markCurrentPassAsFinished(&self);
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputpassdescription?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetWriterInputPassDescription;
);

unsafe impl Send for AVAssetWriterInputPassDescription {}

unsafe impl Sync for AVAssetWriterInputPassDescription {}

unsafe impl NSObjectProtocol for AVAssetWriterInputPassDescription {}

extern_methods!(
    unsafe impl AVAssetWriterInputPassDescription {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other sourceTimeRanges)]
        pub unsafe fn sourceTimeRanges(&self) -> Retained<NSArray<NSValue>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputpixelbufferadaptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetWriterInputPixelBufferAdaptor;
);

unsafe impl NSObjectProtocol for AVAssetWriterInputPixelBufferAdaptor {}

extern_methods!(
    unsafe impl AVAssetWriterInputPixelBufferAdaptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:)]
        pub unsafe fn assetWriterInputPixelBufferAdaptorWithAssetWriterInput_sourcePixelBufferAttributes(
            input: &AVAssetWriterInput,
            source_pixel_buffer_attributes: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithAssetWriterInput:sourcePixelBufferAttributes:)]
        pub unsafe fn initWithAssetWriterInput_sourcePixelBufferAttributes(
            this: Allocated<Self>,
            input: &AVAssetWriterInput,
            source_pixel_buffer_attributes: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInput)]
        pub unsafe fn assetWriterInput(&self) -> Retained<AVAssetWriterInput>;

        #[method_id(@__retain_semantics Other sourcePixelBufferAttributes)]
        pub unsafe fn sourcePixelBufferAttributes(
            &self,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[cfg(feature = "objc2-core-video")]
        #[method(pixelBufferPool)]
        pub unsafe fn pixelBufferPool(&self) -> CVPixelBufferPoolRef;

        #[cfg(all(feature = "objc2-core-media", feature = "objc2-core-video"))]
        #[method(appendPixelBuffer:withPresentationTime:)]
        pub unsafe fn appendPixelBuffer_withPresentationTime(
            &self,
            pixel_buffer: CVPixelBufferRef,
            presentation_time: CMTime,
        ) -> bool;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputtaggedpixelbuffergroupadaptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetWriterInputTaggedPixelBufferGroupAdaptor;
);

unsafe impl NSObjectProtocol for AVAssetWriterInputTaggedPixelBufferGroupAdaptor {}

extern_methods!(
    unsafe impl AVAssetWriterInputTaggedPixelBufferGroupAdaptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInputTaggedPixelBufferGroupAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:)]
        pub unsafe fn assetWriterInputTaggedPixelBufferGroupAdaptorWithAssetWriterInput_sourcePixelBufferAttributes(
            input: &AVAssetWriterInput,
            source_pixel_buffer_attributes: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithAssetWriterInput:sourcePixelBufferAttributes:)]
        pub unsafe fn initWithAssetWriterInput_sourcePixelBufferAttributes(
            this: Allocated<Self>,
            input: &AVAssetWriterInput,
            source_pixel_buffer_attributes: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInput)]
        pub unsafe fn assetWriterInput(&self) -> Retained<AVAssetWriterInput>;

        #[method_id(@__retain_semantics Other sourcePixelBufferAttributes)]
        pub unsafe fn sourcePixelBufferAttributes(
            &self,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[cfg(feature = "objc2-core-video")]
        #[method(pixelBufferPool)]
        pub unsafe fn pixelBufferPool(&self) -> CVPixelBufferPoolRef;

        #[cfg(feature = "objc2-core-media")]
        #[method(appendTaggedPixelBufferGroup:withPresentationTime:)]
        pub unsafe fn appendTaggedPixelBufferGroup_withPresentationTime(
            &self,
            tagged_pixel_buffer_group: CMTaggedBufferGroupRef,
            presentation_time: CMTime,
        ) -> bool;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputmetadataadaptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetWriterInputMetadataAdaptor;
);

unsafe impl NSObjectProtocol for AVAssetWriterInputMetadataAdaptor {}

extern_methods!(
    unsafe impl AVAssetWriterInputMetadataAdaptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInputMetadataAdaptorWithAssetWriterInput:)]
        pub unsafe fn assetWriterInputMetadataAdaptorWithAssetWriterInput(
            input: &AVAssetWriterInput,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithAssetWriterInput:)]
        pub unsafe fn initWithAssetWriterInput(
            this: Allocated<Self>,
            input: &AVAssetWriterInput,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInput)]
        pub unsafe fn assetWriterInput(&self) -> Retained<AVAssetWriterInput>;

        #[cfg(feature = "AVTimedMetadataGroup")]
        #[method(appendTimedMetadataGroup:)]
        pub unsafe fn appendTimedMetadataGroup(
            &self,
            timed_metadata_group: &AVTimedMetadataGroup,
        ) -> bool;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputcaptionadaptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetWriterInputCaptionAdaptor;
);

unsafe impl NSObjectProtocol for AVAssetWriterInputCaptionAdaptor {}

extern_methods!(
    unsafe impl AVAssetWriterInputCaptionAdaptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInputCaptionAdaptorWithAssetWriterInput:)]
        pub unsafe fn assetWriterInputCaptionAdaptorWithAssetWriterInput(
            input: &AVAssetWriterInput,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithAssetWriterInput:)]
        pub unsafe fn initWithAssetWriterInput(
            this: Allocated<Self>,
            input: &AVAssetWriterInput,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other assetWriterInput)]
        pub unsafe fn assetWriterInput(&self) -> Retained<AVAssetWriterInput>;

        #[cfg(feature = "AVCaption")]
        #[method(appendCaption:)]
        pub unsafe fn appendCaption(&self, caption: &AVCaption) -> bool;

        #[cfg(feature = "AVCaptionGroup")]
        #[method(appendCaptionGroup:)]
        pub unsafe fn appendCaptionGroup(&self, caption_group: &AVCaptionGroup) -> bool;
    }
);
