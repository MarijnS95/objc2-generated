//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avexternalstoragedevice?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVExternalStorageDevice;
);

unsafe impl NSObjectProtocol for AVExternalStorageDevice {}

extern_methods!(
    unsafe impl AVExternalStorageDevice {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other displayName)]
        pub unsafe fn displayName(&self) -> Option<Retained<NSString>>;

        #[method(freeSize)]
        pub unsafe fn freeSize(&self) -> NSInteger;

        #[method(totalSize)]
        pub unsafe fn totalSize(&self) -> NSInteger;

        #[method(isConnected)]
        pub unsafe fn isConnected(&self) -> bool;

        #[method_id(@__retain_semantics Other uuid)]
        pub unsafe fn uuid(&self) -> Option<Retained<NSUUID>>;

        #[method(isNotRecommendedForCaptureUse)]
        pub unsafe fn isNotRecommendedForCaptureUse(&self) -> bool;

        #[method_id(@__retain_semantics Other nextAvailableURLsWithPathExtensions:error:_)]
        pub unsafe fn nextAvailableURLsWithPathExtensions_error(
            &self,
            extension_array: &NSArray<NSString>,
        ) -> Result<Retained<NSArray<NSURL>>, Retained<NSError>>;
    }
);

extern_methods!(
    /// AVExternalStorageDeviceAuthorization
    unsafe impl AVExternalStorageDevice {
        #[cfg(feature = "AVCaptureDevice")]
        #[method(authorizationStatus)]
        pub unsafe fn authorizationStatus() -> AVAuthorizationStatus;

        #[cfg(feature = "block2")]
        #[method(requestAccessWithCompletionHandler:)]
        pub unsafe fn requestAccessWithCompletionHandler(handler: &block2::Block<dyn Fn(Bool)>);
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avexternalstoragedevicediscoverysession?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVExternalStorageDeviceDiscoverySession;
);

unsafe impl NSObjectProtocol for AVExternalStorageDeviceDiscoverySession {}

extern_methods!(
    unsafe impl AVExternalStorageDeviceDiscoverySession {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other sharedSession)]
        pub unsafe fn sharedSession() -> Option<Retained<AVExternalStorageDeviceDiscoverySession>>;

        #[method_id(@__retain_semantics Other externalStorageDevices)]
        pub unsafe fn externalStorageDevices(&self) -> Retained<NSArray<AVExternalStorageDevice>>;

        #[method(isSupported)]
        pub unsafe fn isSupported() -> bool;
    }
);
