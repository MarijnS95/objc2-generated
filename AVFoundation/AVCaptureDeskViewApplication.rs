//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Allows a client to programmatically present the Desk View application and be informed when it is done being launched.
    ///
    ///
    /// Users can launch the Desk View application through the Video Effects button in Control Center when a Desk View capable Continuity Camera is running. Developers may use this interface as a shortcut to launch the Desk View application directly from their application.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcapturedeskviewapplication?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVCaptureDeskViewApplication;
);

unsafe impl NSObjectProtocol for AVCaptureDeskViewApplication {}

impl AVCaptureDeskViewApplication {
    extern_methods!(
        #[cfg(feature = "block2")]
        /// Presents the Desk View application to the user with no launch configuration.
        ///
        ///
        /// Parameter `completionHandler`: A block to be called once the Desk View application has been completely launched (or brought to the foreground).
        ///
        ///
        /// This method allows you to programmatically launch the Desk View application from your own application UI. If the Desk View application is already running, this method brings it to the front. If the Desk View application is minimized in the Dock, this method un-minimizes it and brings it to the front.
        #[unsafe(method(presentWithCompletionHandler:))]
        #[unsafe(method_family = none)]
        pub unsafe fn presentWithCompletionHandler(
            &self,
            completion_handler: Option<&block2::DynBlock<dyn Fn(*mut NSError)>>,
        );

        #[cfg(feature = "block2")]
        /// Presents the Desk View application to the user.
        ///
        ///
        /// Parameter `launchConfiguration`: Launch configuration governing how the Desk View application will be presented.
        ///
        ///
        /// Parameter `completionHandler`: A block to be called once the Desk View application has been completely launched (or brought to the foreground). Optionally, this completionHandler may fire later, once the user has completed set up mode (see AVCaptureDeskViewApplicationLaunchConfiguration.requiresSetUpModeCompletion).
        ///
        ///
        /// This method allows you to programmatically launch the Desk View application from your own application UI. If the Desk View application is already running, this method brings it to the front. If the Desk View application is minimized in the Dock, this method un-minimizes it and brings it to the front.
        #[unsafe(method(presentWithLaunchConfiguration:completionHandler:))]
        #[unsafe(method_family = none)]
        pub unsafe fn presentWithLaunchConfiguration_completionHandler(
            &self,
            launch_configuration: &AVCaptureDeskViewApplicationLaunchConfiguration,
            completion_handler: Option<&block2::DynBlock<dyn Fn(*mut NSError)>>,
        );
    );
}

/// Methods declared on superclass `NSObject`.
impl AVCaptureDeskViewApplication {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// An object for configuring how the Desk View application is presented.
    ///
    ///
    /// Developers may use this interface to customize the presentation of the Desk View application upon launch.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcapturedeskviewapplicationlaunchconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVCaptureDeskViewApplicationLaunchConfiguration;
);

unsafe impl NSObjectProtocol for AVCaptureDeskViewApplicationLaunchConfiguration {}

impl AVCaptureDeskViewApplicationLaunchConfiguration {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        /// Specifies the desired frame of the Desk View application's main window when launched.
        ///
        ///
        /// Default value is CGRectZero. The app will use a default value in this case (the user's previously selected position). mainWindowFrame is specified in global screen coordinates. When launching the Desk View application from a Mac Catalyst app, window origin is top left. When launched from a native macOS app, window origin is bottom left.
        #[unsafe(method(mainWindowFrame))]
        #[unsafe(method_family = none)]
        pub unsafe fn mainWindowFrame(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`mainWindowFrame`][Self::mainWindowFrame].
        #[unsafe(method(setMainWindowFrame:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMainWindowFrame(&self, main_window_frame: CGRect);

        /// Specifies whether presentWithLaunchConfiguration:completionHandler:'s completionHandler fires immediately after the application is launched, or only after the user has completed set up.
        ///
        ///
        /// The Desk View application launches in set up mode, showing the full field of view of an Ultra Wide camera with a superimposed trapezoid indicating the desk region crop that will be shown once set up is complete. By default, your presentWithLaunchConfiguration:completionHandler:'s completionHandler fires after the Desk View application is launched and visible to the user. By setting this property to YES, your completionHandler only fires when the user has completed set up mode and transitioned to the cropped Desk View mode.
        #[unsafe(method(requiresSetUpModeCompletion))]
        #[unsafe(method_family = none)]
        pub unsafe fn requiresSetUpModeCompletion(&self) -> bool;

        /// Setter for [`requiresSetUpModeCompletion`][Self::requiresSetUpModeCompletion].
        #[unsafe(method(setRequiresSetUpModeCompletion:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRequiresSetUpModeCompletion(&self, requires_set_up_mode_completion: bool);
    );
}

/// Methods declared on superclass `NSObject`.
impl AVCaptureDeskViewApplicationLaunchConfiguration {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
