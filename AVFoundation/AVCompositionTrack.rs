//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcompositiontrack?language=objc)
    #[unsafe(super(AVAssetTrack, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AVAssetTrack")]
    pub struct AVCompositionTrack;
);

#[cfg(all(feature = "AVAssetTrack", feature = "AVAsynchronousKeyValueLoading"))]
unsafe impl AVAsynchronousKeyValueLoading for AVCompositionTrack {}

#[cfg(feature = "AVAssetTrack")]
unsafe impl NSCopying for AVCompositionTrack {}

#[cfg(feature = "AVAssetTrack")]
unsafe impl CopyingHelper for AVCompositionTrack {
    type Result = Self;
}

#[cfg(feature = "AVAssetTrack")]
unsafe impl NSObjectProtocol for AVCompositionTrack {}

extern_methods!(
    #[cfg(feature = "AVAssetTrack")]
    unsafe impl AVCompositionTrack {
        #[cfg(all(feature = "AVAssetTrackSegment", feature = "AVCompositionTrackSegment"))]
        #[method_id(@__retain_semantics Other segments)]
        pub unsafe fn segments(&self) -> Retained<NSArray<AVCompositionTrackSegment>>;

        #[cfg(all(
            feature = "AVAssetTrackSegment",
            feature = "AVCompositionTrackSegment",
            feature = "objc2-core-media"
        ))]
        #[method_id(@__retain_semantics Other segmentForTrackTime:)]
        pub unsafe fn segmentForTrackTime(
            &self,
            track_time: CMTime,
        ) -> Option<Retained<AVCompositionTrackSegment>>;

        #[method_id(@__retain_semantics Other formatDescriptionReplacements)]
        pub unsafe fn formatDescriptionReplacements(
            &self,
        ) -> Retained<NSArray<AVCompositionTrackFormatDescriptionReplacement>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `AVAssetTrack`
    #[cfg(feature = "AVAssetTrack")]
    unsafe impl AVCompositionTrack {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmutablecompositiontrack?language=objc)
    #[unsafe(super(AVCompositionTrack, AVAssetTrack, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AVAssetTrack")]
    pub struct AVMutableCompositionTrack;
);

#[cfg(all(feature = "AVAssetTrack", feature = "AVAsynchronousKeyValueLoading"))]
unsafe impl AVAsynchronousKeyValueLoading for AVMutableCompositionTrack {}

#[cfg(feature = "AVAssetTrack")]
unsafe impl NSCopying for AVMutableCompositionTrack {}

#[cfg(feature = "AVAssetTrack")]
unsafe impl CopyingHelper for AVMutableCompositionTrack {
    type Result = Self;
}

#[cfg(feature = "AVAssetTrack")]
unsafe impl NSObjectProtocol for AVMutableCompositionTrack {}

extern_methods!(
    #[cfg(feature = "AVAssetTrack")]
    unsafe impl AVMutableCompositionTrack {
        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        #[method(setEnabled:)]
        pub unsafe fn setEnabled(&self, enabled: bool);

        #[cfg(feature = "objc2-core-media")]
        #[method(naturalTimeScale)]
        pub unsafe fn naturalTimeScale(&self) -> CMTimeScale;

        #[cfg(feature = "objc2-core-media")]
        #[method(setNaturalTimeScale:)]
        pub unsafe fn setNaturalTimeScale(&self, natural_time_scale: CMTimeScale);

        #[method_id(@__retain_semantics Other languageCode)]
        pub unsafe fn languageCode(&self) -> Option<Retained<NSString>>;

        #[method(setLanguageCode:)]
        pub unsafe fn setLanguageCode(&self, language_code: Option<&NSString>);

        #[method_id(@__retain_semantics Other extendedLanguageTag)]
        pub unsafe fn extendedLanguageTag(&self) -> Option<Retained<NSString>>;

        #[method(setExtendedLanguageTag:)]
        pub unsafe fn setExtendedLanguageTag(&self, extended_language_tag: Option<&NSString>);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(preferredTransform)]
        pub unsafe fn preferredTransform(&self) -> CGAffineTransform;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(setPreferredTransform:)]
        pub unsafe fn setPreferredTransform(&self, preferred_transform: CGAffineTransform);

        #[method(preferredVolume)]
        pub unsafe fn preferredVolume(&self) -> c_float;

        #[method(setPreferredVolume:)]
        pub unsafe fn setPreferredVolume(&self, preferred_volume: c_float);

        #[cfg(all(feature = "AVAssetTrackSegment", feature = "AVCompositionTrackSegment"))]
        #[method_id(@__retain_semantics Other segments)]
        pub unsafe fn segments(&self) -> Retained<NSArray<AVCompositionTrackSegment>>;

        #[cfg(all(feature = "AVAssetTrackSegment", feature = "AVCompositionTrackSegment"))]
        #[method(setSegments:)]
        pub unsafe fn setSegments(&self, segments: Option<&NSArray<AVCompositionTrackSegment>>);

        #[cfg(feature = "objc2-core-media")]
        #[method(insertTimeRange:ofTrack:atTime:error:_)]
        pub unsafe fn insertTimeRange_ofTrack_atTime_error(
            &self,
            time_range: CMTimeRange,
            track: &AVAssetTrack,
            start_time: CMTime,
        ) -> Result<(), Retained<NSError>>;

        #[cfg(feature = "objc2-core-media")]
        #[method(insertTimeRanges:ofTracks:atTime:error:_)]
        pub unsafe fn insertTimeRanges_ofTracks_atTime_error(
            &self,
            time_ranges: &NSArray<NSValue>,
            tracks: &NSArray<AVAssetTrack>,
            start_time: CMTime,
        ) -> Result<(), Retained<NSError>>;

        #[cfg(feature = "objc2-core-media")]
        #[method(insertEmptyTimeRange:)]
        pub unsafe fn insertEmptyTimeRange(&self, time_range: CMTimeRange);

        #[cfg(feature = "objc2-core-media")]
        #[method(removeTimeRange:)]
        pub unsafe fn removeTimeRange(&self, time_range: CMTimeRange);

        #[cfg(feature = "objc2-core-media")]
        #[method(scaleTimeRange:toDuration:)]
        pub unsafe fn scaleTimeRange_toDuration(&self, time_range: CMTimeRange, duration: CMTime);

        #[cfg(all(feature = "AVAssetTrackSegment", feature = "AVCompositionTrackSegment"))]
        #[method(validateTrackSegments:error:_)]
        pub unsafe fn validateTrackSegments_error(
            &self,
            track_segments: &NSArray<AVCompositionTrackSegment>,
        ) -> Result<(), Retained<NSError>>;

        #[method(addTrackAssociationToTrack:type:)]
        pub unsafe fn addTrackAssociationToTrack_type(
            &self,
            composition_track: &AVCompositionTrack,
            track_association_type: &AVTrackAssociationType,
        );

        #[method(removeTrackAssociationToTrack:type:)]
        pub unsafe fn removeTrackAssociationToTrack_type(
            &self,
            composition_track: &AVCompositionTrack,
            track_association_type: &AVTrackAssociationType,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `AVAssetTrack`
    #[cfg(feature = "AVAssetTrack")]
    unsafe impl AVMutableCompositionTrack {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcompositiontrackformatdescriptionreplacement?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVCompositionTrackFormatDescriptionReplacement;
);

unsafe impl Send for AVCompositionTrackFormatDescriptionReplacement {}

unsafe impl Sync for AVCompositionTrackFormatDescriptionReplacement {}

unsafe impl NSCoding for AVCompositionTrackFormatDescriptionReplacement {}

unsafe impl NSObjectProtocol for AVCompositionTrackFormatDescriptionReplacement {}

unsafe impl NSSecureCoding for AVCompositionTrackFormatDescriptionReplacement {}

extern_methods!(
    unsafe impl AVCompositionTrackFormatDescriptionReplacement {
        #[cfg(feature = "objc2-core-media")]
        #[method(originalFormatDescription)]
        pub unsafe fn originalFormatDescription(&self) -> CMFormatDescriptionRef;

        #[cfg(feature = "objc2-core-media")]
        #[method(replacementFormatDescription)]
        pub unsafe fn replacementFormatDescription(&self) -> CMFormatDescriptionRef;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVCompositionTrackFormatDescriptionReplacement {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// AVMutableCompositionTrackFormatDescriptionReplacement
    #[cfg(feature = "AVAssetTrack")]
    unsafe impl AVMutableCompositionTrack {
        #[cfg(feature = "objc2-core-media")]
        #[method(replaceFormatDescription:withFormatDescription:)]
        pub unsafe fn replaceFormatDescription_withFormatDescription(
            &self,
            original_format_description: CMFormatDescriptionRef,
            replacement_format_description: CMFormatDescriptionRef,
        );
    }
);

extern_methods!(
    /// SynchronousTrackInterface
    #[cfg(feature = "AVAssetTrack")]
    unsafe impl AVCompositionTrack {
        #[cfg(feature = "AVMediaFormat")]
        #[method(hasMediaCharacteristic:)]
        pub unsafe fn hasMediaCharacteristic(
            &self,
            media_characteristic: &AVMediaCharacteristic,
        ) -> bool;

        #[cfg(feature = "objc2-core-media")]
        #[method(samplePresentationTimeForTrackTime:)]
        pub unsafe fn samplePresentationTimeForTrackTime(&self, track_time: CMTime) -> CMTime;

        #[cfg(all(feature = "AVMetadataFormat", feature = "AVMetadataItem"))]
        #[method_id(@__retain_semantics Other metadataForFormat:)]
        pub unsafe fn metadataForFormat(
            &self,
            format: &AVMetadataFormat,
        ) -> Retained<NSArray<AVMetadataItem>>;

        #[method_id(@__retain_semantics Other associatedTracksOfType:)]
        pub unsafe fn associatedTracksOfType(
            &self,
            track_association_type: &AVTrackAssociationType,
        ) -> Retained<NSArray<AVAssetTrack>>;
    }
);
