//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avplayeritemtrackvideofieldmodedeinterlacefields?language=objc)
    pub static AVPlayerItemTrackVideoFieldModeDeinterlaceFields: &'static NSString;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avplayeritemtrack?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVPlayerItemTrack;
);

unsafe impl NSObjectProtocol for AVPlayerItemTrack {}

extern_methods!(
    unsafe impl AVPlayerItemTrack {
        #[cfg(feature = "AVAssetTrack")]
        #[method_id(@__retain_semantics Other assetTrack)]
        pub unsafe fn assetTrack(&self) -> Option<Retained<AVAssetTrack>>;

        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        #[method(setEnabled:)]
        pub unsafe fn setEnabled(&self, enabled: bool);

        #[method(currentVideoFrameRate)]
        pub unsafe fn currentVideoFrameRate(&self) -> c_float;

        #[method_id(@__retain_semantics Other videoFieldMode)]
        pub unsafe fn videoFieldMode(&self) -> Option<Retained<NSString>>;

        #[method(setVideoFieldMode:)]
        pub unsafe fn setVideoFieldMode(&self, video_field_mode: Option<&NSString>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVPlayerItemTrack {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
