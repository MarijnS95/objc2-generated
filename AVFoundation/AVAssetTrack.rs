//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassettrack?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetTrack;
);

#[cfg(feature = "AVAsynchronousKeyValueLoading")]
unsafe impl AVAsynchronousKeyValueLoading for AVAssetTrack {}

unsafe impl NSCopying for AVAssetTrack {}

unsafe impl CopyingHelper for AVAssetTrack {
    type Result = Self;
}

unsafe impl NSObjectProtocol for AVAssetTrack {}

extern_methods!(
    unsafe impl AVAssetTrack {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVAsset")]
        #[method_id(@__retain_semantics Other asset)]
        pub unsafe fn asset(&self) -> Option<Retained<AVAsset>>;

        #[cfg(feature = "objc2-core-media")]
        #[method(trackID)]
        pub unsafe fn trackID(&self) -> CMPersistentTrackID;
    }
);

extern_methods!(
    /// AVAssetTrackBasicPropertiesAndCharacteristics
    unsafe impl AVAssetTrack {
        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaType)]
        pub unsafe fn mediaType(&self) -> Retained<AVMediaType>;

        #[method_id(@__retain_semantics Other formatDescriptions)]
        pub unsafe fn formatDescriptions(&self) -> Retained<NSArray>;

        #[method(isPlayable)]
        pub unsafe fn isPlayable(&self) -> bool;

        #[method(isDecodable)]
        pub unsafe fn isDecodable(&self) -> bool;

        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        #[method(isSelfContained)]
        pub unsafe fn isSelfContained(&self) -> bool;

        #[method(totalSampleDataLength)]
        pub unsafe fn totalSampleDataLength(&self) -> c_longlong;

        #[cfg(feature = "AVMediaFormat")]
        #[method(hasMediaCharacteristic:)]
        pub unsafe fn hasMediaCharacteristic(
            &self,
            media_characteristic: &AVMediaCharacteristic,
        ) -> bool;
    }
);

extern_methods!(
    /// AVAssetTrackTemporalProperties
    unsafe impl AVAssetTrack {
        #[cfg(feature = "objc2-core-media")]
        #[method(timeRange)]
        pub unsafe fn timeRange(&self) -> CMTimeRange;

        #[cfg(feature = "objc2-core-media")]
        #[method(naturalTimeScale)]
        pub unsafe fn naturalTimeScale(&self) -> CMTimeScale;

        #[method(estimatedDataRate)]
        pub unsafe fn estimatedDataRate(&self) -> c_float;
    }
);

extern_methods!(
    /// AVAssetTrackLanguageProperties
    unsafe impl AVAssetTrack {
        #[method_id(@__retain_semantics Other languageCode)]
        pub unsafe fn languageCode(&self) -> Option<Retained<NSString>>;

        #[method_id(@__retain_semantics Other extendedLanguageTag)]
        pub unsafe fn extendedLanguageTag(&self) -> Option<Retained<NSString>>;
    }
);

extern_methods!(
    /// AVAssetTrackPropertiesForVisualCharacteristic
    unsafe impl AVAssetTrack {
        #[cfg(feature = "objc2-core-foundation")]
        #[method(naturalSize)]
        pub unsafe fn naturalSize(&self) -> CGSize;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(preferredTransform)]
        pub unsafe fn preferredTransform(&self) -> CGAffineTransform;
    }
);

extern_methods!(
    /// AVAssetTrackPropertiesForAudibleCharacteristic
    unsafe impl AVAssetTrack {
        #[method(preferredVolume)]
        pub unsafe fn preferredVolume(&self) -> c_float;

        #[method(hasAudioSampleDependencies)]
        pub unsafe fn hasAudioSampleDependencies(&self) -> bool;
    }
);

extern_methods!(
    /// AVAssetTrackPropertiesForFrameBasedCharacteristic
    unsafe impl AVAssetTrack {
        #[method(nominalFrameRate)]
        pub unsafe fn nominalFrameRate(&self) -> c_float;

        #[cfg(feature = "objc2-core-media")]
        #[method(minFrameDuration)]
        pub unsafe fn minFrameDuration(&self) -> CMTime;

        #[method(requiresFrameReordering)]
        pub unsafe fn requiresFrameReordering(&self) -> bool;
    }
);

extern_methods!(
    /// AVAssetTrackSegments
    unsafe impl AVAssetTrack {
        #[cfg(feature = "AVAssetTrackSegment")]
        #[method_id(@__retain_semantics Other segments)]
        pub unsafe fn segments(&self) -> Retained<NSArray<AVAssetTrackSegment>>;

        #[cfg(all(feature = "AVAssetTrackSegment", feature = "objc2-core-media"))]
        #[deprecated = "Use loadSegmentForTrackTime:completionHandler: instead"]
        #[method_id(@__retain_semantics Other segmentForTrackTime:)]
        pub unsafe fn segmentForTrackTime(
            &self,
            track_time: CMTime,
        ) -> Option<Retained<AVAssetTrackSegment>>;

        #[cfg(all(
            feature = "AVAssetTrackSegment",
            feature = "block2",
            feature = "objc2-core-media"
        ))]
        #[method(loadSegmentForTrackTime:completionHandler:)]
        pub unsafe fn loadSegmentForTrackTime_completionHandler(
            &self,
            track_time: CMTime,
            completion_handler: &block2::Block<dyn Fn(*mut AVAssetTrackSegment, *mut NSError)>,
        );

        #[cfg(feature = "objc2-core-media")]
        #[deprecated = "Use loadSamplePresentationTimeForTrackTime:completionHandler: instead"]
        #[method(samplePresentationTimeForTrackTime:)]
        pub unsafe fn samplePresentationTimeForTrackTime(&self, track_time: CMTime) -> CMTime;

        #[cfg(all(feature = "block2", feature = "objc2-core-media"))]
        #[method(loadSamplePresentationTimeForTrackTime:completionHandler:)]
        pub unsafe fn loadSamplePresentationTimeForTrackTime_completionHandler(
            &self,
            track_time: CMTime,
            completion_handler: &block2::Block<dyn Fn(CMTime, *mut NSError)>,
        );
    }
);

extern_methods!(
    /// AVAssetTrackMetadataReading
    unsafe impl AVAssetTrack {
        #[cfg(feature = "AVMetadataItem")]
        #[method_id(@__retain_semantics Other commonMetadata)]
        pub unsafe fn commonMetadata(&self) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataItem")]
        #[method_id(@__retain_semantics Other metadata)]
        pub unsafe fn metadata(&self) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataFormat")]
        #[method_id(@__retain_semantics Other availableMetadataFormats)]
        pub unsafe fn availableMetadataFormats(&self) -> Retained<NSArray<AVMetadataFormat>>;

        #[cfg(all(feature = "AVMetadataFormat", feature = "AVMetadataItem"))]
        #[deprecated = "Use loadMetadataForFormat:completionHandler: instead"]
        #[method_id(@__retain_semantics Other metadataForFormat:)]
        pub unsafe fn metadataForFormat(
            &self,
            format: &AVMetadataFormat,
        ) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(all(
            feature = "AVMetadataFormat",
            feature = "AVMetadataItem",
            feature = "block2"
        ))]
        #[method(loadMetadataForFormat:completionHandler:)]
        pub unsafe fn loadMetadataForFormat_completionHandler(
            &self,
            format: &AVMetadataFormat,
            completion_handler: &block2::Block<dyn Fn(*mut NSArray<AVMetadataItem>, *mut NSError)>,
        );
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtrackassociationtype?language=objc)
// NS_TYPED_ENUM
pub type AVTrackAssociationType = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtrackassociationtypeaudiofallback?language=objc)
    pub static AVTrackAssociationTypeAudioFallback: &'static AVTrackAssociationType;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtrackassociationtypechapterlist?language=objc)
    pub static AVTrackAssociationTypeChapterList: &'static AVTrackAssociationType;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtrackassociationtypeforcedsubtitlesonly?language=objc)
    pub static AVTrackAssociationTypeForcedSubtitlesOnly: &'static AVTrackAssociationType;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtrackassociationtypeselectionfollower?language=objc)
    pub static AVTrackAssociationTypeSelectionFollower: &'static AVTrackAssociationType;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtrackassociationtypetimecode?language=objc)
    pub static AVTrackAssociationTypeTimecode: &'static AVTrackAssociationType;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtrackassociationtypemetadatareferent?language=objc)
    pub static AVTrackAssociationTypeMetadataReferent: &'static AVTrackAssociationType;
}

extern_methods!(
    /// AVAssetTrackTrackAssociations
    unsafe impl AVAssetTrack {
        #[method_id(@__retain_semantics Other availableTrackAssociationTypes)]
        pub unsafe fn availableTrackAssociationTypes(
            &self,
        ) -> Retained<NSArray<AVTrackAssociationType>>;

        #[deprecated = "Use loadAssociatedTracksOfType:completionHandler: instead"]
        #[method_id(@__retain_semantics Other associatedTracksOfType:)]
        pub unsafe fn associatedTracksOfType(
            &self,
            track_association_type: &AVTrackAssociationType,
        ) -> Retained<NSArray<AVAssetTrack>>;

        #[cfg(feature = "block2")]
        #[method(loadAssociatedTracksOfType:completionHandler:)]
        pub unsafe fn loadAssociatedTracksOfType_completionHandler(
            &self,
            track_association_type: &AVTrackAssociationType,
            completion_handler: &block2::Block<dyn Fn(*mut NSArray<AVAssetTrack>, *mut NSError)>,
        );
    }
);

extern_methods!(
    /// AVAssetTrackSampleCursorProvision
    unsafe impl AVAssetTrack {
        #[method(canProvideSampleCursors)]
        pub unsafe fn canProvideSampleCursors(&self) -> bool;

        #[cfg(all(feature = "AVSampleCursor", feature = "objc2-core-media"))]
        #[method_id(@__retain_semantics Other makeSampleCursorWithPresentationTimeStamp:)]
        pub unsafe fn makeSampleCursorWithPresentationTimeStamp(
            &self,
            presentation_time_stamp: CMTime,
        ) -> Option<Retained<AVSampleCursor>>;

        #[cfg(feature = "AVSampleCursor")]
        #[method_id(@__retain_semantics Other makeSampleCursorAtFirstSampleInDecodeOrder)]
        pub unsafe fn makeSampleCursorAtFirstSampleInDecodeOrder(
            &self,
        ) -> Option<Retained<AVSampleCursor>>;

        #[cfg(feature = "AVSampleCursor")]
        #[method_id(@__retain_semantics Other makeSampleCursorAtLastSampleInDecodeOrder)]
        pub unsafe fn makeSampleCursorAtLastSampleInDecodeOrder(
            &self,
        ) -> Option<Retained<AVSampleCursor>>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassettracktimerangedidchangenotification?language=objc)
    pub static AVAssetTrackTimeRangeDidChangeNotification: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassettracksegmentsdidchangenotification?language=objc)
    pub static AVAssetTrackSegmentsDidChangeNotification: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassettracktrackassociationsdidchangenotification?language=objc)
    pub static AVAssetTrackTrackAssociationsDidChangeNotification: &'static NSString;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avfragmentedassettrack?language=objc)
    #[unsafe(super(AVAssetTrack, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVFragmentedAssetTrack;
);

unsafe impl Send for AVFragmentedAssetTrack {}

unsafe impl Sync for AVFragmentedAssetTrack {}

#[cfg(feature = "AVAsynchronousKeyValueLoading")]
unsafe impl AVAsynchronousKeyValueLoading for AVFragmentedAssetTrack {}

unsafe impl NSCopying for AVFragmentedAssetTrack {}

unsafe impl CopyingHelper for AVFragmentedAssetTrack {
    type Result = Self;
}

unsafe impl NSObjectProtocol for AVFragmentedAssetTrack {}

extern_methods!(
    unsafe impl AVFragmentedAssetTrack {}
);

extern_methods!(
    /// Methods declared on superclass `AVAssetTrack`
    unsafe impl AVFragmentedAssetTrack {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
