//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetriceventstreampublisher?language=objc)
    pub unsafe trait AVMetricEventStreamPublisher {}

    unsafe impl ProtocolType for dyn AVMetricEventStreamPublisher {}
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetriceventstreamsubscriber?language=objc)
    pub unsafe trait AVMetricEventStreamSubscriber {
        #[method(publisher:didReceiveEvent:)]
        unsafe fn publisher_didReceiveEvent(
            &self,
            publisher: &ProtocolObject<dyn AVMetricEventStreamPublisher>,
            event: &AVMetricEvent,
        );
    }

    unsafe impl ProtocolType for dyn AVMetricEventStreamSubscriber {}
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetriceventstream?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricEventStream;
);

unsafe impl NSObjectProtocol for AVMetricEventStream {}

extern_methods!(
    unsafe impl AVMetricEventStream {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other eventStream)]
        pub unsafe fn eventStream() -> Retained<Self>;

        #[method(addPublisher:)]
        pub unsafe fn addPublisher(
            &self,
            publisher: &ProtocolObject<dyn AVMetricEventStreamPublisher>,
        ) -> bool;

        #[method(subscribeToMetricEvent:)]
        pub unsafe fn subscribeToMetricEvent(&self, metric_event_class: &AnyClass);

        #[method(subscribeToMetricEvents:)]
        pub unsafe fn subscribeToMetricEvents(&self, metric_event_classes: &NSArray<AnyClass>);

        #[method(subscribeToAllMetricEvents)]
        pub unsafe fn subscribeToAllMetricEvents(&self);
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricevent?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricEvent;
);

unsafe impl Send for AVMetricEvent {}

unsafe impl Sync for AVMetricEvent {}

unsafe impl NSCoding for AVMetricEvent {}

unsafe impl NSObjectProtocol for AVMetricEvent {}

unsafe impl NSSecureCoding for AVMetricEvent {}

extern_methods!(
    unsafe impl AVMetricEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other date)]
        pub unsafe fn date(&self) -> Retained<NSDate>;

        #[cfg(feature = "objc2-core-media")]
        #[method(mediaTime)]
        pub unsafe fn mediaTime(&self) -> CMTime;

        #[method_id(@__retain_semantics Other sessionID)]
        pub unsafe fn sessionID(&self) -> Option<Retained<NSString>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricerrorevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricErrorEvent;
);

unsafe impl Send for AVMetricErrorEvent {}

unsafe impl Sync for AVMetricErrorEvent {}

unsafe impl NSCoding for AVMetricErrorEvent {}

unsafe impl NSObjectProtocol for AVMetricErrorEvent {}

unsafe impl NSSecureCoding for AVMetricErrorEvent {}

extern_methods!(
    unsafe impl AVMetricErrorEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method(didRecover)]
        pub unsafe fn didRecover(&self) -> bool;

        #[method_id(@__retain_semantics Other error)]
        pub unsafe fn error(&self) -> Retained<NSError>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricmediaresourcerequestevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricMediaResourceRequestEvent;
);

unsafe impl Send for AVMetricMediaResourceRequestEvent {}

unsafe impl Sync for AVMetricMediaResourceRequestEvent {}

unsafe impl NSCoding for AVMetricMediaResourceRequestEvent {}

unsafe impl NSObjectProtocol for AVMetricMediaResourceRequestEvent {}

unsafe impl NSSecureCoding for AVMetricMediaResourceRequestEvent {}

extern_methods!(
    unsafe impl AVMetricMediaResourceRequestEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other url)]
        pub unsafe fn url(&self) -> Option<Retained<NSURL>>;

        #[method_id(@__retain_semantics Other serverAddress)]
        pub unsafe fn serverAddress(&self) -> Option<Retained<NSString>>;

        #[method_id(@__retain_semantics Other requestStartTime)]
        pub unsafe fn requestStartTime(&self) -> Retained<NSDate>;

        #[method_id(@__retain_semantics Other requestEndTime)]
        pub unsafe fn requestEndTime(&self) -> Retained<NSDate>;

        #[method_id(@__retain_semantics Other responseStartTime)]
        pub unsafe fn responseStartTime(&self) -> Retained<NSDate>;

        #[method_id(@__retain_semantics Other responseEndTime)]
        pub unsafe fn responseEndTime(&self) -> Retained<NSDate>;

        #[method(byteRange)]
        pub unsafe fn byteRange(&self) -> NSRange;

        #[method(wasReadFromCache)]
        pub unsafe fn wasReadFromCache(&self) -> bool;

        #[method_id(@__retain_semantics Other errorEvent)]
        pub unsafe fn errorEvent(&self) -> Option<Retained<AVMetricErrorEvent>>;

        #[method_id(@__retain_semantics Other networkTransactionMetrics)]
        pub unsafe fn networkTransactionMetrics(&self)
            -> Option<Retained<NSURLSessionTaskMetrics>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetrichlsplaylistrequestevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricHLSPlaylistRequestEvent;
);

unsafe impl Send for AVMetricHLSPlaylistRequestEvent {}

unsafe impl Sync for AVMetricHLSPlaylistRequestEvent {}

unsafe impl NSCoding for AVMetricHLSPlaylistRequestEvent {}

unsafe impl NSObjectProtocol for AVMetricHLSPlaylistRequestEvent {}

unsafe impl NSSecureCoding for AVMetricHLSPlaylistRequestEvent {}

extern_methods!(
    unsafe impl AVMetricHLSPlaylistRequestEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other url)]
        pub unsafe fn url(&self) -> Option<Retained<NSURL>>;

        #[method(isMultivariantPlaylist)]
        pub unsafe fn isMultivariantPlaylist(&self) -> bool;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaType)]
        pub unsafe fn mediaType(&self) -> Retained<AVMediaType>;

        #[method_id(@__retain_semantics Other mediaResourceRequestEvent)]
        pub unsafe fn mediaResourceRequestEvent(
            &self,
        ) -> Option<Retained<AVMetricMediaResourceRequestEvent>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetrichlsmediasegmentrequestevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricHLSMediaSegmentRequestEvent;
);

unsafe impl Send for AVMetricHLSMediaSegmentRequestEvent {}

unsafe impl Sync for AVMetricHLSMediaSegmentRequestEvent {}

unsafe impl NSCoding for AVMetricHLSMediaSegmentRequestEvent {}

unsafe impl NSObjectProtocol for AVMetricHLSMediaSegmentRequestEvent {}

unsafe impl NSSecureCoding for AVMetricHLSMediaSegmentRequestEvent {}

extern_methods!(
    unsafe impl AVMetricHLSMediaSegmentRequestEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other url)]
        pub unsafe fn url(&self) -> Option<Retained<NSURL>>;

        #[method(isMapSegment)]
        pub unsafe fn isMapSegment(&self) -> bool;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaType)]
        pub unsafe fn mediaType(&self) -> Retained<AVMediaType>;

        #[method(byteRange)]
        pub unsafe fn byteRange(&self) -> NSRange;

        #[method_id(@__retain_semantics Other indexFileURL)]
        pub unsafe fn indexFileURL(&self) -> Retained<NSURL>;

        #[method_id(@__retain_semantics Other mediaResourceRequestEvent)]
        pub unsafe fn mediaResourceRequestEvent(
            &self,
        ) -> Option<Retained<AVMetricMediaResourceRequestEvent>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetriccontentkeyrequestevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricContentKeyRequestEvent;
);

unsafe impl Send for AVMetricContentKeyRequestEvent {}

unsafe impl Sync for AVMetricContentKeyRequestEvent {}

unsafe impl NSCoding for AVMetricContentKeyRequestEvent {}

unsafe impl NSObjectProtocol for AVMetricContentKeyRequestEvent {}

unsafe impl NSSecureCoding for AVMetricContentKeyRequestEvent {}

extern_methods!(
    unsafe impl AVMetricContentKeyRequestEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVContentKeySession")]
        #[method_id(@__retain_semantics Other contentKeySpecifier)]
        pub unsafe fn contentKeySpecifier(&self) -> Retained<AVContentKeySpecifier>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaType)]
        pub unsafe fn mediaType(&self) -> Retained<AVMediaType>;

        #[method(isClientInitiated)]
        pub unsafe fn isClientInitiated(&self) -> bool;

        #[method_id(@__retain_semantics Other mediaResourceRequestEvent)]
        pub unsafe fn mediaResourceRequestEvent(
            &self,
        ) -> Option<Retained<AVMetricMediaResourceRequestEvent>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemlikelytokeepupevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemLikelyToKeepUpEvent;
);

unsafe impl Send for AVMetricPlayerItemLikelyToKeepUpEvent {}

unsafe impl Sync for AVMetricPlayerItemLikelyToKeepUpEvent {}

unsafe impl NSCoding for AVMetricPlayerItemLikelyToKeepUpEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemLikelyToKeepUpEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemLikelyToKeepUpEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemLikelyToKeepUpEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVAssetVariant")]
        #[method_id(@__retain_semantics Other variant)]
        pub unsafe fn variant(&self) -> Option<Retained<AVAssetVariant>>;

        #[method(timeTaken)]
        pub unsafe fn timeTaken(&self) -> NSTimeInterval;

        #[method_id(@__retain_semantics Other loadedTimeRanges)]
        pub unsafe fn loadedTimeRanges(&self) -> Retained<NSArray<NSValue>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeriteminitiallikelytokeepupevent?language=objc)
    #[unsafe(super(AVMetricPlayerItemLikelyToKeepUpEvent, AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemInitialLikelyToKeepUpEvent;
);

unsafe impl Send for AVMetricPlayerItemInitialLikelyToKeepUpEvent {}

unsafe impl Sync for AVMetricPlayerItemInitialLikelyToKeepUpEvent {}

unsafe impl NSCoding for AVMetricPlayerItemInitialLikelyToKeepUpEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemInitialLikelyToKeepUpEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemInitialLikelyToKeepUpEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemInitialLikelyToKeepUpEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other playlistRequestEvents)]
        pub unsafe fn playlistRequestEvents(
            &self,
        ) -> Retained<NSArray<AVMetricHLSPlaylistRequestEvent>>;

        #[method_id(@__retain_semantics Other mediaSegmentRequestEvents)]
        pub unsafe fn mediaSegmentRequestEvents(
            &self,
        ) -> Retained<NSArray<AVMetricHLSMediaSegmentRequestEvent>>;

        #[method_id(@__retain_semantics Other contentKeyRequestEvents)]
        pub unsafe fn contentKeyRequestEvents(
            &self,
        ) -> Retained<NSArray<AVMetricContentKeyRequestEvent>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemratechangeevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemRateChangeEvent;
);

unsafe impl Send for AVMetricPlayerItemRateChangeEvent {}

unsafe impl Sync for AVMetricPlayerItemRateChangeEvent {}

unsafe impl NSCoding for AVMetricPlayerItemRateChangeEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemRateChangeEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemRateChangeEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemRateChangeEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method(rate)]
        pub unsafe fn rate(&self) -> c_double;

        #[method(previousRate)]
        pub unsafe fn previousRate(&self) -> c_double;

        #[cfg(feature = "AVAssetVariant")]
        #[method_id(@__retain_semantics Other variant)]
        pub unsafe fn variant(&self) -> Option<Retained<AVAssetVariant>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemstallevent?language=objc)
    #[unsafe(super(AVMetricPlayerItemRateChangeEvent, AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemStallEvent;
);

unsafe impl Send for AVMetricPlayerItemStallEvent {}

unsafe impl Sync for AVMetricPlayerItemStallEvent {}

unsafe impl NSCoding for AVMetricPlayerItemStallEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemStallEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemStallEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemStallEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemseekevent?language=objc)
    #[unsafe(super(AVMetricPlayerItemRateChangeEvent, AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemSeekEvent;
);

unsafe impl Send for AVMetricPlayerItemSeekEvent {}

unsafe impl Sync for AVMetricPlayerItemSeekEvent {}

unsafe impl NSCoding for AVMetricPlayerItemSeekEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemSeekEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemSeekEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemSeekEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemseekdidcompleteevent?language=objc)
    #[unsafe(super(AVMetricPlayerItemRateChangeEvent, AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemSeekDidCompleteEvent;
);

unsafe impl Send for AVMetricPlayerItemSeekDidCompleteEvent {}

unsafe impl Sync for AVMetricPlayerItemSeekDidCompleteEvent {}

unsafe impl NSCoding for AVMetricPlayerItemSeekDidCompleteEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemSeekDidCompleteEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemSeekDidCompleteEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemSeekDidCompleteEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method(didSeekInBuffer)]
        pub unsafe fn didSeekInBuffer(&self) -> bool;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemvariantswitchevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemVariantSwitchEvent;
);

unsafe impl Send for AVMetricPlayerItemVariantSwitchEvent {}

unsafe impl Sync for AVMetricPlayerItemVariantSwitchEvent {}

unsafe impl NSCoding for AVMetricPlayerItemVariantSwitchEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemVariantSwitchEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemVariantSwitchEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemVariantSwitchEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVAssetVariant")]
        #[method_id(@__retain_semantics Other fromVariant)]
        pub unsafe fn fromVariant(&self) -> Option<Retained<AVAssetVariant>>;

        #[cfg(feature = "AVAssetVariant")]
        #[method_id(@__retain_semantics Other toVariant)]
        pub unsafe fn toVariant(&self) -> Retained<AVAssetVariant>;

        #[method_id(@__retain_semantics Other loadedTimeRanges)]
        pub unsafe fn loadedTimeRanges(&self) -> Retained<NSArray<NSValue>>;

        #[method(didSucceed)]
        pub unsafe fn didSucceed(&self) -> bool;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemvariantswitchstartevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemVariantSwitchStartEvent;
);

unsafe impl Send for AVMetricPlayerItemVariantSwitchStartEvent {}

unsafe impl Sync for AVMetricPlayerItemVariantSwitchStartEvent {}

unsafe impl NSCoding for AVMetricPlayerItemVariantSwitchStartEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemVariantSwitchStartEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemVariantSwitchStartEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemVariantSwitchStartEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVAssetVariant")]
        #[method_id(@__retain_semantics Other fromVariant)]
        pub unsafe fn fromVariant(&self) -> Option<Retained<AVAssetVariant>>;

        #[cfg(feature = "AVAssetVariant")]
        #[method_id(@__retain_semantics Other toVariant)]
        pub unsafe fn toVariant(&self) -> Retained<AVAssetVariant>;

        #[method_id(@__retain_semantics Other loadedTimeRanges)]
        pub unsafe fn loadedTimeRanges(&self) -> Retained<NSArray<NSValue>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetricplayeritemplaybacksummaryevent?language=objc)
    #[unsafe(super(AVMetricEvent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetricPlayerItemPlaybackSummaryEvent;
);

unsafe impl Send for AVMetricPlayerItemPlaybackSummaryEvent {}

unsafe impl Sync for AVMetricPlayerItemPlaybackSummaryEvent {}

unsafe impl NSCoding for AVMetricPlayerItemPlaybackSummaryEvent {}

unsafe impl NSObjectProtocol for AVMetricPlayerItemPlaybackSummaryEvent {}

unsafe impl NSSecureCoding for AVMetricPlayerItemPlaybackSummaryEvent {}

extern_methods!(
    unsafe impl AVMetricPlayerItemPlaybackSummaryEvent {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Other errorEvent)]
        pub unsafe fn errorEvent(&self) -> Option<Retained<AVMetricErrorEvent>>;

        #[method(recoverableErrorCount)]
        pub unsafe fn recoverableErrorCount(&self) -> NSInteger;

        #[method(stallCount)]
        pub unsafe fn stallCount(&self) -> NSInteger;

        #[method(variantSwitchCount)]
        pub unsafe fn variantSwitchCount(&self) -> NSInteger;

        #[method(playbackDuration)]
        pub unsafe fn playbackDuration(&self) -> NSInteger;

        #[method(mediaResourceRequestCount)]
        pub unsafe fn mediaResourceRequestCount(&self) -> NSInteger;

        #[method(timeSpentRecoveringFromStall)]
        pub unsafe fn timeSpentRecoveringFromStall(&self) -> NSTimeInterval;

        #[method(timeSpentInInitialStartup)]
        pub unsafe fn timeSpentInInitialStartup(&self) -> NSTimeInterval;

        #[method(timeWeightedAverageBitrate)]
        pub unsafe fn timeWeightedAverageBitrate(&self) -> NSInteger;

        #[method(timeWeightedPeakBitrate)]
        pub unsafe fn timeWeightedPeakBitrate(&self) -> NSInteger;
    }
);
