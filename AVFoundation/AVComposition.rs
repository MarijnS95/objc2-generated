//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcomposition?language=objc)
    #[unsafe(super(AVAsset, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AVAsset")]
    pub struct AVComposition;
);

#[cfg(all(feature = "AVAsset", feature = "AVAsynchronousKeyValueLoading"))]
unsafe impl AVAsynchronousKeyValueLoading for AVComposition {}

#[cfg(feature = "AVAsset")]
unsafe impl NSCopying for AVComposition {}

#[cfg(feature = "AVAsset")]
unsafe impl CopyingHelper for AVComposition {
    type Result = Self;
}

#[cfg(feature = "AVAsset")]
unsafe impl NSMutableCopying for AVComposition {}

#[cfg(feature = "AVAsset")]
unsafe impl MutableCopyingHelper for AVComposition {
    type Result = AVMutableComposition;
}

#[cfg(feature = "AVAsset")]
unsafe impl NSObjectProtocol for AVComposition {}

extern_methods!(
    #[cfg(feature = "AVAsset")]
    unsafe impl AVComposition {
        #[cfg(all(feature = "AVAssetTrack", feature = "AVCompositionTrack"))]
        #[method_id(@__retain_semantics Other tracks)]
        pub unsafe fn tracks(&self) -> Retained<NSArray<AVCompositionTrack>>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(naturalSize)]
        pub unsafe fn naturalSize(&self) -> CGSize;

        #[method_id(@__retain_semantics Other URLAssetInitializationOptions)]
        pub unsafe fn URLAssetInitializationOptions(
            &self,
        ) -> Retained<NSDictionary<NSString, AnyObject>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `AVAsset`
    #[cfg(feature = "AVAsset")]
    unsafe impl AVComposition {
        #[method_id(@__retain_semantics Other assetWithURL:)]
        pub unsafe fn assetWithURL(url: &NSURL) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "AVAsset")]
    unsafe impl AVComposition {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// AVCompositionTrackInspection
    #[cfg(feature = "AVAsset")]
    unsafe impl AVComposition {
        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "objc2-core-media"
        ))]
        #[method_id(@__retain_semantics Other trackWithTrackID:)]
        pub unsafe fn trackWithTrackID(
            &self,
            track_id: CMPersistentTrackID,
        ) -> Option<Retained<AVCompositionTrack>>;

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "block2",
            feature = "objc2-core-media"
        ))]
        #[method(loadTrackWithTrackID:completionHandler:)]
        pub unsafe fn loadTrackWithTrackID_completionHandler(
            &self,
            track_id: CMPersistentTrackID,
            completion_handler: &block2::Block<dyn Fn(*mut AVCompositionTrack, *mut NSError)>,
        );

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat"
        ))]
        #[method_id(@__retain_semantics Other tracksWithMediaType:)]
        pub unsafe fn tracksWithMediaType(
            &self,
            media_type: &AVMediaType,
        ) -> Retained<NSArray<AVCompositionTrack>>;

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat",
            feature = "block2"
        ))]
        #[method(loadTracksWithMediaType:completionHandler:)]
        pub unsafe fn loadTracksWithMediaType_completionHandler(
            &self,
            media_type: &AVMediaType,
            completion_handler: &block2::Block<
                dyn Fn(*mut NSArray<AVCompositionTrack>, *mut NSError),
            >,
        );

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat"
        ))]
        #[method_id(@__retain_semantics Other tracksWithMediaCharacteristic:)]
        pub unsafe fn tracksWithMediaCharacteristic(
            &self,
            media_characteristic: &AVMediaCharacteristic,
        ) -> Retained<NSArray<AVCompositionTrack>>;

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat",
            feature = "block2"
        ))]
        #[method(loadTracksWithMediaCharacteristic:completionHandler:)]
        pub unsafe fn loadTracksWithMediaCharacteristic_completionHandler(
            &self,
            media_characteristic: &AVMediaCharacteristic,
            completion_handler: &block2::Block<
                dyn Fn(*mut NSArray<AVCompositionTrack>, *mut NSError),
            >,
        );
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmutablecomposition?language=objc)
    #[unsafe(super(AVComposition, AVAsset, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AVAsset")]
    pub struct AVMutableComposition;
);

#[cfg(all(feature = "AVAsset", feature = "AVAsynchronousKeyValueLoading"))]
unsafe impl AVAsynchronousKeyValueLoading for AVMutableComposition {}

#[cfg(feature = "AVAsset")]
unsafe impl NSCopying for AVMutableComposition {}

#[cfg(feature = "AVAsset")]
unsafe impl CopyingHelper for AVMutableComposition {
    type Result = AVComposition;
}

#[cfg(feature = "AVAsset")]
unsafe impl NSMutableCopying for AVMutableComposition {}

#[cfg(feature = "AVAsset")]
unsafe impl MutableCopyingHelper for AVMutableComposition {
    type Result = Self;
}

#[cfg(feature = "AVAsset")]
unsafe impl NSObjectProtocol for AVMutableComposition {}

extern_methods!(
    #[cfg(feature = "AVAsset")]
    unsafe impl AVMutableComposition {
        #[cfg(all(feature = "AVAssetTrack", feature = "AVCompositionTrack"))]
        #[method_id(@__retain_semantics Other tracks)]
        pub unsafe fn tracks(&self) -> Retained<NSArray<AVMutableCompositionTrack>>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(naturalSize)]
        pub unsafe fn naturalSize(&self) -> CGSize;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(setNaturalSize:)]
        pub unsafe fn setNaturalSize(&self, natural_size: CGSize);

        #[method_id(@__retain_semantics Other composition)]
        pub unsafe fn composition() -> Retained<Self>;

        #[method_id(@__retain_semantics Other compositionWithURLAssetInitializationOptions:)]
        pub unsafe fn compositionWithURLAssetInitializationOptions(
            url_asset_initialization_options: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `AVAsset`
    #[cfg(feature = "AVAsset")]
    unsafe impl AVMutableComposition {
        #[method_id(@__retain_semantics Other assetWithURL:)]
        pub unsafe fn assetWithURL(url: &NSURL) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "AVAsset")]
    unsafe impl AVMutableComposition {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// AVMutableCompositionCompositionLevelEditing
    #[cfg(feature = "AVAsset")]
    unsafe impl AVMutableComposition {
        #[cfg(feature = "objc2-core-media")]
        #[deprecated]
        #[method(insertTimeRange:ofAsset:atTime:error:_)]
        pub unsafe fn insertTimeRange_ofAsset_atTime_error(
            &self,
            time_range: CMTimeRange,
            asset: &AVAsset,
            start_time: CMTime,
        ) -> Result<(), Retained<NSError>>;

        #[cfg(all(feature = "block2", feature = "objc2-core-media"))]
        #[method(insertTimeRange:ofAsset:atTime:completionHandler:)]
        pub unsafe fn insertTimeRange_ofAsset_atTime_completionHandler(
            &self,
            time_range: CMTimeRange,
            asset: &AVAsset,
            start_time: CMTime,
            completion_handler: &block2::Block<dyn Fn(*mut NSError)>,
        );

        #[cfg(feature = "objc2-core-media")]
        #[method(insertEmptyTimeRange:)]
        pub unsafe fn insertEmptyTimeRange(&self, time_range: CMTimeRange);

        #[cfg(feature = "objc2-core-media")]
        #[method(removeTimeRange:)]
        pub unsafe fn removeTimeRange(&self, time_range: CMTimeRange);

        #[cfg(feature = "objc2-core-media")]
        #[method(scaleTimeRange:toDuration:)]
        pub unsafe fn scaleTimeRange_toDuration(&self, time_range: CMTimeRange, duration: CMTime);
    }
);

extern_methods!(
    /// AVMutableCompositionTrackLevelEditing
    #[cfg(feature = "AVAsset")]
    unsafe impl AVMutableComposition {
        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat",
            feature = "objc2-core-media"
        ))]
        #[method_id(@__retain_semantics Other addMutableTrackWithMediaType:preferredTrackID:)]
        pub unsafe fn addMutableTrackWithMediaType_preferredTrackID(
            &self,
            media_type: &AVMediaType,
            preferred_track_id: CMPersistentTrackID,
        ) -> Option<Retained<AVMutableCompositionTrack>>;

        #[cfg(all(feature = "AVAssetTrack", feature = "AVCompositionTrack"))]
        #[method(removeTrack:)]
        pub unsafe fn removeTrack(&self, track: &AVCompositionTrack);

        #[cfg(all(feature = "AVAssetTrack", feature = "AVCompositionTrack"))]
        #[method_id(@__retain_semantics Other mutableTrackCompatibleWithTrack:)]
        pub unsafe fn mutableTrackCompatibleWithTrack(
            &self,
            track: &AVAssetTrack,
        ) -> Option<Retained<AVMutableCompositionTrack>>;
    }
);

extern_methods!(
    /// AVMutableCompositionTrackInspection
    #[cfg(feature = "AVAsset")]
    unsafe impl AVMutableComposition {
        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "objc2-core-media"
        ))]
        #[method_id(@__retain_semantics Other trackWithTrackID:)]
        pub unsafe fn trackWithTrackID(
            &self,
            track_id: CMPersistentTrackID,
        ) -> Option<Retained<AVMutableCompositionTrack>>;

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "block2",
            feature = "objc2-core-media"
        ))]
        #[method(loadTrackWithTrackID:completionHandler:)]
        pub unsafe fn loadTrackWithTrackID_completionHandler(
            &self,
            track_id: CMPersistentTrackID,
            completion_handler: &block2::Block<
                dyn Fn(*mut AVMutableCompositionTrack, *mut NSError),
            >,
        );

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat"
        ))]
        #[method_id(@__retain_semantics Other tracksWithMediaType:)]
        pub unsafe fn tracksWithMediaType(
            &self,
            media_type: &AVMediaType,
        ) -> Retained<NSArray<AVMutableCompositionTrack>>;

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat",
            feature = "block2"
        ))]
        #[method(loadTracksWithMediaType:completionHandler:)]
        pub unsafe fn loadTracksWithMediaType_completionHandler(
            &self,
            media_type: &AVMediaType,
            completion_handler: &block2::Block<
                dyn Fn(*mut NSArray<AVMutableCompositionTrack>, *mut NSError),
            >,
        );

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat"
        ))]
        #[method_id(@__retain_semantics Other tracksWithMediaCharacteristic:)]
        pub unsafe fn tracksWithMediaCharacteristic(
            &self,
            media_characteristic: &AVMediaCharacteristic,
        ) -> Retained<NSArray<AVMutableCompositionTrack>>;

        #[cfg(all(
            feature = "AVAssetTrack",
            feature = "AVCompositionTrack",
            feature = "AVMediaFormat",
            feature = "block2"
        ))]
        #[method(loadTracksWithMediaCharacteristic:completionHandler:)]
        pub unsafe fn loadTracksWithMediaCharacteristic_completionHandler(
            &self,
            media_characteristic: &AVMediaCharacteristic,
            completion_handler: &block2::Block<
                dyn Fn(*mut NSArray<AVMutableCompositionTrack>, *mut NSError),
            >,
        );
    }
);

extern_methods!(
    /// SynchronousAssetInterface
    #[cfg(feature = "AVAsset")]
    unsafe impl AVComposition {
        #[cfg(all(feature = "AVMetadataFormat", feature = "AVMetadataItem"))]
        #[method_id(@__retain_semantics Other metadataForFormat:)]
        pub unsafe fn metadataForFormat(
            &self,
            format: &AVMetadataFormat,
        ) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(all(feature = "AVMetadataFormat", feature = "AVTimedMetadataGroup"))]
        #[method_id(@__retain_semantics Other chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:)]
        pub unsafe fn chapterMetadataGroupsWithTitleLocale_containingItemsWithCommonKeys(
            &self,
            locale: &NSLocale,
            common_keys: Option<&NSArray<AVMetadataKey>>,
        ) -> Retained<NSArray<AVTimedMetadataGroup>>;

        #[cfg(feature = "AVTimedMetadataGroup")]
        #[method_id(@__retain_semantics Other chapterMetadataGroupsBestMatchingPreferredLanguages:)]
        pub unsafe fn chapterMetadataGroupsBestMatchingPreferredLanguages(
            &self,
            preferred_languages: &NSArray<NSString>,
        ) -> Retained<NSArray<AVTimedMetadataGroup>>;

        #[cfg(all(feature = "AVMediaFormat", feature = "AVMediaSelectionGroup"))]
        #[method_id(@__retain_semantics Other mediaSelectionGroupForMediaCharacteristic:)]
        pub unsafe fn mediaSelectionGroupForMediaCharacteristic(
            &self,
            media_characteristic: &AVMediaCharacteristic,
        ) -> Option<Retained<AVMediaSelectionGroup>>;

        #[cfg(feature = "objc2-core-media")]
        #[method(unusedTrackID)]
        pub unsafe fn unusedTrackID(&self) -> CMPersistentTrackID;
    }
);
