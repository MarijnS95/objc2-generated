//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetadataitem?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetadataItem;
);

#[cfg(feature = "AVAsynchronousKeyValueLoading")]
unsafe impl AVAsynchronousKeyValueLoading for AVMetadataItem {}

unsafe impl NSCopying for AVMetadataItem {}

unsafe impl CopyingHelper for AVMetadataItem {
    type Result = Self;
}

unsafe impl NSMutableCopying for AVMetadataItem {}

unsafe impl MutableCopyingHelper for AVMetadataItem {
    type Result = AVMutableMetadataItem;
}

unsafe impl NSObjectProtocol for AVMetadataItem {}

extern_methods!(
    unsafe impl AVMetadataItem {
        #[cfg(feature = "AVMetadataIdentifiers")]
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Option<Retained<AVMetadataIdentifier>>;

        #[method_id(@__retain_semantics Other extendedLanguageTag)]
        pub unsafe fn extendedLanguageTag(&self) -> Option<Retained<NSString>>;

        #[method_id(@__retain_semantics Other locale)]
        pub unsafe fn locale(&self) -> Option<Retained<NSLocale>>;

        #[cfg(feature = "objc2-core-media")]
        #[method(time)]
        pub unsafe fn time(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(duration)]
        pub unsafe fn duration(&self) -> CMTime;

        #[method_id(@__retain_semantics Other dataType)]
        pub unsafe fn dataType(&self) -> Option<Retained<NSString>>;

        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self)
            -> Option<Retained<AnyObject /* NSObjectProtocol+ NSCopying */>>;

        #[cfg(feature = "AVMetadataFormat")]
        #[method_id(@__retain_semantics Other extraAttributes)]
        pub unsafe fn extraAttributes(
            &self,
        ) -> Option<Retained<NSDictionary<AVMetadataExtraAttributeKey, AnyObject>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVMetadataItem {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// AVMetadataItemDateRepresentation
    unsafe impl AVMetadataItem {
        #[method_id(@__retain_semantics Other startDate)]
        pub unsafe fn startDate(&self) -> Option<Retained<NSDate>>;
    }
);

extern_methods!(
    /// AVMetadataItemTypeCoercion
    unsafe impl AVMetadataItem {
        #[method_id(@__retain_semantics Other stringValue)]
        pub unsafe fn stringValue(&self) -> Option<Retained<NSString>>;

        #[method_id(@__retain_semantics Other numberValue)]
        pub unsafe fn numberValue(&self) -> Option<Retained<NSNumber>>;

        #[method_id(@__retain_semantics Other dateValue)]
        pub unsafe fn dateValue(&self) -> Option<Retained<NSDate>>;

        #[method_id(@__retain_semantics Other dataValue)]
        pub unsafe fn dataValue(&self) -> Option<Retained<NSData>>;
    }
);

extern_methods!(
    /// AVAsynchronousKeyValueLoading
    unsafe impl AVMetadataItem {
        #[cfg(feature = "block2")]
        #[method(loadValuesAsynchronouslyForKeys:completionHandler:)]
        pub unsafe fn loadValuesAsynchronouslyForKeys_completionHandler(
            &self,
            keys: &NSArray<NSString>,
            handler: Option<&block2::Block<dyn Fn()>>,
        );
    }
);

extern_methods!(
    /// AVMetadataItemArrayFiltering
    unsafe impl AVMetadataItem {
        #[method_id(@__retain_semantics Other metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:)]
        pub unsafe fn metadataItemsFromArray_filteredAndSortedAccordingToPreferredLanguages(
            metadata_items: &NSArray<AVMetadataItem>,
            preferred_languages: &NSArray<NSString>,
        ) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataIdentifiers")]
        #[method_id(@__retain_semantics Other metadataItemsFromArray:filteredByIdentifier:)]
        pub unsafe fn metadataItemsFromArray_filteredByIdentifier(
            metadata_items: &NSArray<AVMetadataItem>,
            identifier: &AVMetadataIdentifier,
        ) -> Retained<NSArray<AVMetadataItem>>;

        #[method_id(@__retain_semantics Other metadataItemsFromArray:filteredByMetadataItemFilter:)]
        pub unsafe fn metadataItemsFromArray_filteredByMetadataItemFilter(
            metadata_items: &NSArray<AVMetadataItem>,
            metadata_item_filter: &AVMetadataItemFilter,
        ) -> Retained<NSArray<AVMetadataItem>>;
    }
);

extern_methods!(
    /// AVMetadataItemKeyAndKeyspace
    unsafe impl AVMetadataItem {
        #[cfg(all(feature = "AVMetadataFormat", feature = "AVMetadataIdentifiers"))]
        #[method_id(@__retain_semantics Other identifierForKey:keySpace:)]
        pub unsafe fn identifierForKey_keySpace(
            key: &AnyObject,
            key_space: &AVMetadataKeySpace,
        ) -> Option<Retained<AVMetadataIdentifier>>;

        #[cfg(all(feature = "AVMetadataFormat", feature = "AVMetadataIdentifiers"))]
        #[method_id(@__retain_semantics Other keySpaceForIdentifier:)]
        pub unsafe fn keySpaceForIdentifier(
            identifier: &AVMetadataIdentifier,
        ) -> Option<Retained<AVMetadataKeySpace>>;

        #[cfg(feature = "AVMetadataIdentifiers")]
        #[method_id(@__retain_semantics Other keyForIdentifier:)]
        pub unsafe fn keyForIdentifier(
            identifier: &AVMetadataIdentifier,
        ) -> Option<Retained<AnyObject>>;

        #[method_id(@__retain_semantics Other key)]
        pub unsafe fn key(&self) -> Option<Retained<AnyObject /* NSObjectProtocol+ NSCopying */>>;

        #[cfg(feature = "AVMetadataFormat")]
        #[method_id(@__retain_semantics Other commonKey)]
        pub unsafe fn commonKey(&self) -> Option<Retained<AVMetadataKey>>;

        #[cfg(feature = "AVMetadataFormat")]
        #[method_id(@__retain_semantics Other keySpace)]
        pub unsafe fn keySpace(&self) -> Option<Retained<AVMetadataKeySpace>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmutablemetadataitem?language=objc)
    #[unsafe(super(AVMetadataItem, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMutableMetadataItem;
);

#[cfg(feature = "AVAsynchronousKeyValueLoading")]
unsafe impl AVAsynchronousKeyValueLoading for AVMutableMetadataItem {}

unsafe impl NSCopying for AVMutableMetadataItem {}

unsafe impl CopyingHelper for AVMutableMetadataItem {
    type Result = AVMetadataItem;
}

unsafe impl NSMutableCopying for AVMutableMetadataItem {}

unsafe impl MutableCopyingHelper for AVMutableMetadataItem {
    type Result = Self;
}

unsafe impl NSObjectProtocol for AVMutableMetadataItem {}

extern_methods!(
    unsafe impl AVMutableMetadataItem {
        #[cfg(feature = "AVMetadataIdentifiers")]
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Option<Retained<AVMetadataIdentifier>>;

        #[cfg(feature = "AVMetadataIdentifiers")]
        #[method(setIdentifier:)]
        pub unsafe fn setIdentifier(&self, identifier: Option<&AVMetadataIdentifier>);

        #[method_id(@__retain_semantics Other extendedLanguageTag)]
        pub unsafe fn extendedLanguageTag(&self) -> Option<Retained<NSString>>;

        #[method(setExtendedLanguageTag:)]
        pub unsafe fn setExtendedLanguageTag(&self, extended_language_tag: Option<&NSString>);

        #[method_id(@__retain_semantics Other locale)]
        pub unsafe fn locale(&self) -> Option<Retained<NSLocale>>;

        #[method(setLocale:)]
        pub unsafe fn setLocale(&self, locale: Option<&NSLocale>);

        #[cfg(feature = "objc2-core-media")]
        #[method(time)]
        pub unsafe fn time(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setTime:)]
        pub unsafe fn setTime(&self, time: CMTime);

        #[cfg(feature = "objc2-core-media")]
        #[method(duration)]
        pub unsafe fn duration(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setDuration:)]
        pub unsafe fn setDuration(&self, duration: CMTime);

        #[method_id(@__retain_semantics Other dataType)]
        pub unsafe fn dataType(&self) -> Option<Retained<NSString>>;

        #[method(setDataType:)]
        pub unsafe fn setDataType(&self, data_type: Option<&NSString>);

        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self)
            -> Option<Retained<AnyObject /* NSObjectProtocol+ NSCopying */>>;

        #[method(setValue:)]
        pub unsafe fn setValue(&self, value: Option<&AnyObject /* NSObjectProtocol+ NSCopying */>);

        #[cfg(feature = "AVMetadataFormat")]
        #[method_id(@__retain_semantics Other extraAttributes)]
        pub unsafe fn extraAttributes(
            &self,
        ) -> Option<Retained<NSDictionary<AVMetadataExtraAttributeKey, AnyObject>>>;

        #[cfg(feature = "AVMetadataFormat")]
        #[method(setExtraAttributes:)]
        pub unsafe fn setExtraAttributes(
            &self,
            extra_attributes: Option<&NSDictionary<AVMetadataExtraAttributeKey, AnyObject>>,
        );

        #[method_id(@__retain_semantics Other metadataItem)]
        pub unsafe fn metadataItem() -> Retained<AVMutableMetadataItem>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVMutableMetadataItem {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// AVMutableMetadataItemDateRepresentation
    unsafe impl AVMutableMetadataItem {
        #[method_id(@__retain_semantics Other startDate)]
        pub unsafe fn startDate(&self) -> Option<Retained<NSDate>>;

        #[method(setStartDate:)]
        pub unsafe fn setStartDate(&self, start_date: Option<&NSDate>);
    }
);

extern_methods!(
    /// AVMutableMetadataItemKeyAndKeyspace
    unsafe impl AVMutableMetadataItem {
        #[cfg(feature = "AVMetadataFormat")]
        #[method_id(@__retain_semantics Other keySpace)]
        pub unsafe fn keySpace(&self) -> Option<Retained<AVMetadataKeySpace>>;

        #[cfg(feature = "AVMetadataFormat")]
        #[method(setKeySpace:)]
        pub unsafe fn setKeySpace(&self, key_space: Option<&AVMetadataKeySpace>);

        #[method_id(@__retain_semantics Other key)]
        pub unsafe fn key(&self) -> Option<Retained<AnyObject /* NSObjectProtocol+ NSCopying */>>;

        #[method(setKey:)]
        pub unsafe fn setKey(&self, key: Option<&AnyObject /* NSObjectProtocol+ NSCopying */>);
    }
);

extern_methods!(
    /// AVMetadataItemLazyValueLoading
    unsafe impl AVMetadataItem {
        #[cfg(feature = "block2")]
        #[method_id(@__retain_semantics Other metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:)]
        pub unsafe fn metadataItemWithPropertiesOfMetadataItem_valueLoadingHandler(
            metadata_item: &AVMetadataItem,
            handler: &block2::Block<dyn Fn(NonNull<AVMetadataItemValueRequest>)>,
        ) -> Retained<AVMetadataItem>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetadataitemvaluerequest?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetadataItemValueRequest;
);

unsafe impl NSObjectProtocol for AVMetadataItemValueRequest {}

extern_methods!(
    unsafe impl AVMetadataItemValueRequest {
        #[method_id(@__retain_semantics Other metadataItem)]
        pub unsafe fn metadataItem(&self) -> Option<Retained<AVMetadataItem>>;

        #[method(respondWithValue:)]
        pub unsafe fn respondWithValue(
            &self,
            value: &AnyObject, /* NSObjectProtocol+ NSCopying */
        );

        #[method(respondWithError:)]
        pub unsafe fn respondWithError(&self, error: &NSError);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVMetadataItemValueRequest {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetadataitemfilter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetadataItemFilter;
);

unsafe impl Send for AVMetadataItemFilter {}

unsafe impl Sync for AVMetadataItemFilter {}

unsafe impl NSObjectProtocol for AVMetadataItemFilter {}

extern_methods!(
    unsafe impl AVMetadataItemFilter {
        #[method_id(@__retain_semantics Other metadataItemFilterForSharing)]
        pub unsafe fn metadataItemFilterForSharing() -> Retained<AVMetadataItemFilter>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVMetadataItemFilter {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// AVMetadataItemArrayFilteringDeprecable
    unsafe impl AVMetadataItem {
        #[method_id(@__retain_semantics Other metadataItemsFromArray:withLocale:)]
        pub unsafe fn metadataItemsFromArray_withLocale(
            metadata_items: &NSArray<AVMetadataItem>,
            locale: &NSLocale,
        ) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataFormat")]
        #[method_id(@__retain_semantics Other metadataItemsFromArray:withKey:keySpace:)]
        pub unsafe fn metadataItemsFromArray_withKey_keySpace(
            metadata_items: &NSArray<AVMetadataItem>,
            key: Option<&AnyObject>,
            key_space: Option<&AVMetadataKeySpace>,
        ) -> Retained<NSArray<AVMetadataItem>>;
    }
);

extern_methods!(
    /// SynchronousMetadataItemInterface
    unsafe impl AVMutableMetadataItem {}
);
