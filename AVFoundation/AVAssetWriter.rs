//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-uniform-type-identifiers")]
use objc2_uniform_type_identifiers::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterstatus?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAssetWriterStatus(pub NSInteger);
impl AVAssetWriterStatus {
    #[doc(alias = "AVAssetWriterStatusUnknown")]
    pub const Unknown: Self = Self(0);
    #[doc(alias = "AVAssetWriterStatusWriting")]
    pub const Writing: Self = Self(1);
    #[doc(alias = "AVAssetWriterStatusCompleted")]
    pub const Completed: Self = Self(2);
    #[doc(alias = "AVAssetWriterStatusFailed")]
    pub const Failed: Self = Self(3);
    #[doc(alias = "AVAssetWriterStatusCancelled")]
    pub const Cancelled: Self = Self(4);
}

unsafe impl Encode for AVAssetWriterStatus {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAssetWriterStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAssetWriter;
);

unsafe impl NSObjectProtocol for AVAssetWriter {}

extern_methods!(
    unsafe impl AVAssetWriter {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other assetWriterWithURL:fileType:error:_)]
        pub unsafe fn assetWriterWithURL_fileType_error(
            output_url: &NSURL,
            output_file_type: &AVFileType,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Init initWithURL:fileType:error:_)]
        pub unsafe fn initWithURL_fileType_error(
            this: Allocated<Self>,
            output_url: &NSURL,
            output_file_type: &AVFileType,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[cfg(feature = "objc2-uniform-type-identifiers")]
        #[method_id(@__retain_semantics Init initWithContentType:)]
        pub unsafe fn initWithContentType(
            this: Allocated<Self>,
            output_content_type: &UTType,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other outputURL)]
        pub unsafe fn outputURL(&self) -> Retained<NSURL>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other outputFileType)]
        pub unsafe fn outputFileType(&self) -> Retained<AVFileType>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other availableMediaTypes)]
        pub unsafe fn availableMediaTypes(&self) -> Retained<NSArray<AVMediaType>>;

        #[method(status)]
        pub unsafe fn status(&self) -> AVAssetWriterStatus;

        #[method_id(@__retain_semantics Other error)]
        pub unsafe fn error(&self) -> Option<Retained<NSError>>;

        #[cfg(feature = "AVMetadataItem")]
        #[method_id(@__retain_semantics Other metadata)]
        pub unsafe fn metadata(&self) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataItem")]
        #[method(setMetadata:)]
        pub unsafe fn setMetadata(&self, metadata: &NSArray<AVMetadataItem>);

        #[method(shouldOptimizeForNetworkUse)]
        pub unsafe fn shouldOptimizeForNetworkUse(&self) -> bool;

        #[method(setShouldOptimizeForNetworkUse:)]
        pub unsafe fn setShouldOptimizeForNetworkUse(&self, should_optimize_for_network_use: bool);

        #[method_id(@__retain_semantics Other directoryForTemporaryFiles)]
        pub unsafe fn directoryForTemporaryFiles(&self) -> Option<Retained<NSURL>>;

        #[method(setDirectoryForTemporaryFiles:)]
        pub unsafe fn setDirectoryForTemporaryFiles(
            &self,
            directory_for_temporary_files: Option<&NSURL>,
        );

        #[cfg(feature = "AVAssetWriterInput")]
        #[method_id(@__retain_semantics Other inputs)]
        pub unsafe fn inputs(&self) -> Retained<NSArray<AVAssetWriterInput>>;

        #[cfg(feature = "AVMediaFormat")]
        #[method(canApplyOutputSettings:forMediaType:)]
        pub unsafe fn canApplyOutputSettings_forMediaType(
            &self,
            output_settings: Option<&NSDictionary<NSString, AnyObject>>,
            media_type: &AVMediaType,
        ) -> bool;

        #[cfg(feature = "AVAssetWriterInput")]
        #[method(canAddInput:)]
        pub unsafe fn canAddInput(&self, input: &AVAssetWriterInput) -> bool;

        #[cfg(feature = "AVAssetWriterInput")]
        #[method(addInput:)]
        pub unsafe fn addInput(&self, input: &AVAssetWriterInput);

        #[method(startWriting)]
        pub unsafe fn startWriting(&self) -> bool;

        #[cfg(feature = "objc2-core-media")]
        #[method(startSessionAtSourceTime:)]
        pub unsafe fn startSessionAtSourceTime(&self, start_time: CMTime);

        #[cfg(feature = "objc2-core-media")]
        #[method(endSessionAtSourceTime:)]
        pub unsafe fn endSessionAtSourceTime(&self, end_time: CMTime);

        #[method(cancelWriting)]
        pub unsafe fn cancelWriting(&self);

        #[deprecated]
        #[method(finishWriting)]
        pub unsafe fn finishWriting(&self) -> bool;

        #[cfg(feature = "block2")]
        #[method(finishWritingWithCompletionHandler:)]
        pub unsafe fn finishWritingWithCompletionHandler(&self, handler: &block2::Block<dyn Fn()>);
    }
);

extern_methods!(
    /// AVAssetWriterFileTypeSpecificProperties
    unsafe impl AVAssetWriter {
        #[cfg(feature = "objc2-core-media")]
        #[method(movieFragmentInterval)]
        pub unsafe fn movieFragmentInterval(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setMovieFragmentInterval:)]
        pub unsafe fn setMovieFragmentInterval(&self, movie_fragment_interval: CMTime);

        #[cfg(feature = "objc2-core-media")]
        #[method(initialMovieFragmentInterval)]
        pub unsafe fn initialMovieFragmentInterval(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setInitialMovieFragmentInterval:)]
        pub unsafe fn setInitialMovieFragmentInterval(
            &self,
            initial_movie_fragment_interval: CMTime,
        );

        #[method(initialMovieFragmentSequenceNumber)]
        pub unsafe fn initialMovieFragmentSequenceNumber(&self) -> NSInteger;

        #[method(setInitialMovieFragmentSequenceNumber:)]
        pub unsafe fn setInitialMovieFragmentSequenceNumber(
            &self,
            initial_movie_fragment_sequence_number: NSInteger,
        );

        #[method(producesCombinableFragments)]
        pub unsafe fn producesCombinableFragments(&self) -> bool;

        #[method(setProducesCombinableFragments:)]
        pub unsafe fn setProducesCombinableFragments(&self, produces_combinable_fragments: bool);

        #[cfg(feature = "objc2-core-media")]
        #[method(overallDurationHint)]
        pub unsafe fn overallDurationHint(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setOverallDurationHint:)]
        pub unsafe fn setOverallDurationHint(&self, overall_duration_hint: CMTime);

        #[cfg(feature = "objc2-core-media")]
        #[method(movieTimeScale)]
        pub unsafe fn movieTimeScale(&self) -> CMTimeScale;

        #[cfg(feature = "objc2-core-media")]
        #[method(setMovieTimeScale:)]
        pub unsafe fn setMovieTimeScale(&self, movie_time_scale: CMTimeScale);
    }
);

extern_methods!(
    /// AVAssetWriterInputGroups
    unsafe impl AVAssetWriter {
        #[cfg(feature = "AVMediaSelectionGroup")]
        #[method(canAddInputGroup:)]
        pub unsafe fn canAddInputGroup(&self, input_group: &AVAssetWriterInputGroup) -> bool;

        #[cfg(feature = "AVMediaSelectionGroup")]
        #[method(addInputGroup:)]
        pub unsafe fn addInputGroup(&self, input_group: &AVAssetWriterInputGroup);

        #[cfg(feature = "AVMediaSelectionGroup")]
        #[method_id(@__retain_semantics Other inputGroups)]
        pub unsafe fn inputGroups(&self) -> Retained<NSArray<AVAssetWriterInputGroup>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterinputgroup?language=objc)
    #[unsafe(super(AVMediaSelectionGroup, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AVMediaSelectionGroup")]
    pub struct AVAssetWriterInputGroup;
);

#[cfg(feature = "AVMediaSelectionGroup")]
unsafe impl NSCopying for AVAssetWriterInputGroup {}

#[cfg(feature = "AVMediaSelectionGroup")]
unsafe impl CopyingHelper for AVAssetWriterInputGroup {
    type Result = Self;
}

#[cfg(feature = "AVMediaSelectionGroup")]
unsafe impl NSObjectProtocol for AVAssetWriterInputGroup {}

extern_methods!(
    #[cfg(feature = "AVMediaSelectionGroup")]
    unsafe impl AVAssetWriterInputGroup {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "AVAssetWriterInput")]
        #[method_id(@__retain_semantics Other assetWriterInputGroupWithInputs:defaultInput:)]
        pub unsafe fn assetWriterInputGroupWithInputs_defaultInput(
            inputs: &NSArray<AVAssetWriterInput>,
            default_input: Option<&AVAssetWriterInput>,
        ) -> Retained<Self>;

        #[cfg(feature = "AVAssetWriterInput")]
        #[method_id(@__retain_semantics Init initWithInputs:defaultInput:)]
        pub unsafe fn initWithInputs_defaultInput(
            this: Allocated<Self>,
            inputs: &NSArray<AVAssetWriterInput>,
            default_input: Option<&AVAssetWriterInput>,
        ) -> Retained<Self>;

        #[cfg(feature = "AVAssetWriterInput")]
        #[method_id(@__retain_semantics Other inputs)]
        pub unsafe fn inputs(&self) -> Retained<NSArray<AVAssetWriterInput>>;

        #[cfg(feature = "AVAssetWriterInput")]
        #[method_id(@__retain_semantics Other defaultInput)]
        pub unsafe fn defaultInput(&self) -> Option<Retained<AVAssetWriterInput>>;
    }
);

extern_methods!(
    /// AVAssetWriterSegmentation
    unsafe impl AVAssetWriter {
        #[cfg(feature = "objc2-core-media")]
        #[method(preferredOutputSegmentInterval)]
        pub unsafe fn preferredOutputSegmentInterval(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setPreferredOutputSegmentInterval:)]
        pub unsafe fn setPreferredOutputSegmentInterval(
            &self,
            preferred_output_segment_interval: CMTime,
        );

        #[cfg(feature = "objc2-core-media")]
        #[method(initialSegmentStartTime)]
        pub unsafe fn initialSegmentStartTime(&self) -> CMTime;

        #[cfg(feature = "objc2-core-media")]
        #[method(setInitialSegmentStartTime:)]
        pub unsafe fn setInitialSegmentStartTime(&self, initial_segment_start_time: CMTime);

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other outputFileTypeProfile)]
        pub unsafe fn outputFileTypeProfile(&self) -> Option<Retained<AVFileTypeProfile>>;

        #[cfg(feature = "AVMediaFormat")]
        #[method(setOutputFileTypeProfile:)]
        pub unsafe fn setOutputFileTypeProfile(
            &self,
            output_file_type_profile: Option<&AVFileTypeProfile>,
        );

        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn AVAssetWriterDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn AVAssetWriterDelegate>>,
        );

        #[method(flushSegment)]
        pub unsafe fn flushSegment(&self);
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avassetwriterdelegate?language=objc)
    pub unsafe trait AVAssetWriterDelegate: NSObjectProtocol {
        #[cfg(feature = "AVAssetSegmentReport")]
        #[optional]
        #[method(assetWriter:didOutputSegmentData:segmentType:segmentReport:)]
        unsafe fn assetWriter_didOutputSegmentData_segmentType_segmentReport(
            &self,
            writer: &AVAssetWriter,
            segment_data: &NSData,
            segment_type: AVAssetSegmentType,
            segment_report: Option<&AVAssetSegmentReport>,
        );

        #[cfg(feature = "AVAssetSegmentReport")]
        #[optional]
        #[method(assetWriter:didOutputSegmentData:segmentType:)]
        unsafe fn assetWriter_didOutputSegmentData_segmentType(
            &self,
            writer: &AVAssetWriter,
            segment_data: &NSData,
            segment_type: AVAssetSegmentType,
        );
    }

    unsafe impl ProtocolType for dyn AVAssetWriterDelegate {}
);
