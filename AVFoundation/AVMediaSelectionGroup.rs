//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmediaselectiongroup?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMediaSelectionGroup;
);

unsafe impl NSCopying for AVMediaSelectionGroup {}

unsafe impl CopyingHelper for AVMediaSelectionGroup {
    type Result = Self;
}

unsafe impl NSObjectProtocol for AVMediaSelectionGroup {}

extern_methods!(
    unsafe impl AVMediaSelectionGroup {
        #[method_id(@__retain_semantics Other options)]
        pub unsafe fn options(&self) -> Retained<NSArray<AVMediaSelectionOption>>;

        #[method_id(@__retain_semantics Other defaultOption)]
        pub unsafe fn defaultOption(&self) -> Option<Retained<AVMediaSelectionOption>>;

        #[method(allowsEmptySelection)]
        pub unsafe fn allowsEmptySelection(&self) -> bool;

        #[method_id(@__retain_semantics Other mediaSelectionOptionWithPropertyList:)]
        pub unsafe fn mediaSelectionOptionWithPropertyList(
            &self,
            plist: &AnyObject,
        ) -> Option<Retained<AVMediaSelectionOption>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVMediaSelectionGroup {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// AVMediaSelectionOptionFiltering
    unsafe impl AVMediaSelectionGroup {
        #[method_id(@__retain_semantics Other playableMediaSelectionOptionsFromArray:)]
        pub unsafe fn playableMediaSelectionOptionsFromArray(
            media_selection_options: &NSArray<AVMediaSelectionOption>,
        ) -> Retained<NSArray<AVMediaSelectionOption>>;

        #[method_id(@__retain_semantics Other mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:)]
        pub unsafe fn mediaSelectionOptionsFromArray_filteredAndSortedAccordingToPreferredLanguages(
            media_selection_options: &NSArray<AVMediaSelectionOption>,
            preferred_languages: &NSArray<NSString>,
        ) -> Retained<NSArray<AVMediaSelectionOption>>;

        #[method_id(@__retain_semantics Other mediaSelectionOptionsFromArray:withLocale:)]
        pub unsafe fn mediaSelectionOptionsFromArray_withLocale(
            media_selection_options: &NSArray<AVMediaSelectionOption>,
            locale: &NSLocale,
        ) -> Retained<NSArray<AVMediaSelectionOption>>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaSelectionOptionsFromArray:withMediaCharacteristics:)]
        pub unsafe fn mediaSelectionOptionsFromArray_withMediaCharacteristics(
            media_selection_options: &NSArray<AVMediaSelectionOption>,
            media_characteristics: &NSArray<AVMediaCharacteristic>,
        ) -> Retained<NSArray<AVMediaSelectionOption>>;

        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaSelectionOptionsFromArray:withoutMediaCharacteristics:)]
        pub unsafe fn mediaSelectionOptionsFromArray_withoutMediaCharacteristics(
            media_selection_options: &NSArray<AVMediaSelectionOption>,
            media_characteristics: &NSArray<AVMediaCharacteristic>,
        ) -> Retained<NSArray<AVMediaSelectionOption>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmediaselectionoption?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMediaSelectionOption;
);

unsafe impl NSCopying for AVMediaSelectionOption {}

unsafe impl CopyingHelper for AVMediaSelectionOption {
    type Result = Self;
}

unsafe impl NSObjectProtocol for AVMediaSelectionOption {}

extern_methods!(
    unsafe impl AVMediaSelectionOption {
        #[cfg(feature = "AVMediaFormat")]
        #[method_id(@__retain_semantics Other mediaType)]
        pub unsafe fn mediaType(&self) -> Retained<AVMediaType>;

        #[method_id(@__retain_semantics Other mediaSubTypes)]
        pub unsafe fn mediaSubTypes(&self) -> Retained<NSArray<NSNumber>>;

        #[cfg(feature = "AVMediaFormat")]
        #[method(hasMediaCharacteristic:)]
        pub unsafe fn hasMediaCharacteristic(
            &self,
            media_characteristic: &AVMediaCharacteristic,
        ) -> bool;

        #[method(isPlayable)]
        pub unsafe fn isPlayable(&self) -> bool;

        #[method_id(@__retain_semantics Other extendedLanguageTag)]
        pub unsafe fn extendedLanguageTag(&self) -> Option<Retained<NSString>>;

        #[method_id(@__retain_semantics Other locale)]
        pub unsafe fn locale(&self) -> Option<Retained<NSLocale>>;

        #[cfg(feature = "AVMetadataItem")]
        #[method_id(@__retain_semantics Other commonMetadata)]
        pub unsafe fn commonMetadata(&self) -> Retained<NSArray<AVMetadataItem>>;

        #[method_id(@__retain_semantics Other availableMetadataFormats)]
        pub unsafe fn availableMetadataFormats(&self) -> Retained<NSArray<NSString>>;

        #[cfg(feature = "AVMetadataItem")]
        #[method_id(@__retain_semantics Other metadataForFormat:)]
        pub unsafe fn metadataForFormat(
            &self,
            format: &NSString,
        ) -> Retained<NSArray<AVMetadataItem>>;

        #[method_id(@__retain_semantics Other associatedMediaSelectionOptionInMediaSelectionGroup:)]
        pub unsafe fn associatedMediaSelectionOptionInMediaSelectionGroup(
            &self,
            media_selection_group: &AVMediaSelectionGroup,
        ) -> Option<Retained<AVMediaSelectionOption>>;

        #[method_id(@__retain_semantics Other propertyList)]
        pub unsafe fn propertyList(&self) -> Retained<AnyObject>;

        #[method_id(@__retain_semantics Other displayNameWithLocale:)]
        pub unsafe fn displayNameWithLocale(&self, locale: &NSLocale) -> Retained<NSString>;

        #[method_id(@__retain_semantics Other displayName)]
        pub unsafe fn displayName(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVMediaSelectionOption {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
