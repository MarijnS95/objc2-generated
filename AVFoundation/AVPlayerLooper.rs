//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avplayerlooperstatus?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVPlayerLooperStatus(pub NSInteger);
impl AVPlayerLooperStatus {
    #[doc(alias = "AVPlayerLooperStatusUnknown")]
    pub const Unknown: Self = Self(0);
    #[doc(alias = "AVPlayerLooperStatusReady")]
    pub const Ready: Self = Self(1);
    #[doc(alias = "AVPlayerLooperStatusFailed")]
    pub const Failed: Self = Self(2);
    #[doc(alias = "AVPlayerLooperStatusCancelled")]
    pub const Cancelled: Self = Self(3);
}

unsafe impl Encode for AVPlayerLooperStatus {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVPlayerLooperStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avplayerlooperitemordering?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVPlayerLooperItemOrdering(pub NSInteger);
impl AVPlayerLooperItemOrdering {
    #[doc(alias = "AVPlayerLooperItemOrderingLoopingItemsPrecedeExistingItems")]
    pub const LoopingItemsPrecedeExistingItems: Self = Self(0);
    #[doc(alias = "AVPlayerLooperItemOrderingLoopingItemsFollowExistingItems")]
    pub const LoopingItemsFollowExistingItems: Self = Self(1);
}

unsafe impl Encode for AVPlayerLooperItemOrdering {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVPlayerLooperItemOrdering {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avplayerlooper?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVPlayerLooper;
);

unsafe impl Send for AVPlayerLooper {}

unsafe impl Sync for AVPlayerLooper {}

unsafe impl NSObjectProtocol for AVPlayerLooper {}

extern_methods!(
    unsafe impl AVPlayerLooper {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(all(
            feature = "AVPlayer",
            feature = "AVPlayerItem",
            feature = "objc2-core-media"
        ))]
        #[method_id(@__retain_semantics Other playerLooperWithPlayer:templateItem:timeRange:)]
        pub unsafe fn playerLooperWithPlayer_templateItem_timeRange(
            player: &AVQueuePlayer,
            item_to_loop: &AVPlayerItem,
            loop_range: CMTimeRange,
        ) -> Retained<Self>;

        #[cfg(all(feature = "AVPlayer", feature = "AVPlayerItem"))]
        #[method_id(@__retain_semantics Other playerLooperWithPlayer:templateItem:)]
        pub unsafe fn playerLooperWithPlayer_templateItem(
            player: &AVQueuePlayer,
            item_to_loop: &AVPlayerItem,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "AVPlayer",
            feature = "AVPlayerItem",
            feature = "objc2-core-media"
        ))]
        #[method_id(@__retain_semantics Init initWithPlayer:templateItem:timeRange:)]
        pub unsafe fn initWithPlayer_templateItem_timeRange(
            this: Allocated<Self>,
            player: &AVQueuePlayer,
            item_to_loop: &AVPlayerItem,
            loop_range: CMTimeRange,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "AVPlayer",
            feature = "AVPlayerItem",
            feature = "objc2-core-media"
        ))]
        #[method_id(@__retain_semantics Init initWithPlayer:templateItem:timeRange:existingItemsOrdering:)]
        pub unsafe fn initWithPlayer_templateItem_timeRange_existingItemsOrdering(
            this: Allocated<Self>,
            player: &AVQueuePlayer,
            item_to_loop: &AVPlayerItem,
            loop_range: CMTimeRange,
            item_ordering: AVPlayerLooperItemOrdering,
        ) -> Retained<Self>;

        #[method(status)]
        pub unsafe fn status(&self) -> AVPlayerLooperStatus;

        #[method_id(@__retain_semantics Other error)]
        pub unsafe fn error(&self) -> Option<Retained<NSError>>;

        #[method(disableLooping)]
        pub unsafe fn disableLooping(&self);

        #[method(loopCount)]
        pub unsafe fn loopCount(&self) -> NSInteger;

        #[cfg(feature = "AVPlayerItem")]
        #[method_id(@__retain_semantics Other loopingPlayerItems)]
        pub unsafe fn loopingPlayerItems(
            &self,
            mtm: MainThreadMarker,
        ) -> Retained<NSArray<AVPlayerItem>>;
    }
);
