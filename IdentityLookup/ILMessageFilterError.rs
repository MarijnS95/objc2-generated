//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/identitylookup/ilmessagefiltererrordomain?language=objc)
    pub static ILMessageFilterErrorDomain: &'static NSErrorDomain;
}

/// [Apple's documentation](https://developer.apple.com/documentation/identitylookup/ilmessagefiltererror?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ILMessageFilterError(pub NSInteger);
impl ILMessageFilterError {
    /// An unspecified system error occurred.
    #[doc(alias = "ILMessageFilterErrorSystem")]
    pub const System: Self = Self(1);
    /// The network request URL included in the extension's Info.plist was either missing or invalid. See documentation for network request URL requirements.
    #[doc(alias = "ILMessageFilterErrorInvalidNetworkURL")]
    pub const InvalidNetworkURL: Self = Self(2);
    /// Extension's containing app is not authorized to allow extension to defer network requests to the host specified in the URL of the extension's Info.plist.
    #[doc(alias = "ILMessageFilterErrorNetworkURLUnauthorized")]
    pub const NetworkURLUnauthorized: Self = Self(3);
    /// Network request was attempted but failed. See `NSUnderlyingErrorKey` in `userInfo` dictionary for details.
    #[doc(alias = "ILMessageFilterErrorNetworkRequestFailed")]
    pub const NetworkRequestFailed: Self = Self(4);
    /// Extension requested to defer a request to its network service more than once. Requests may be deferred to the network at most once.
    #[doc(alias = "ILMessageFilterErrorRedundantNetworkDeferral")]
    pub const RedundantNetworkDeferral: Self = Self(5);
}

unsafe impl Encode for ILMessageFilterError {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for ILMessageFilterError {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
