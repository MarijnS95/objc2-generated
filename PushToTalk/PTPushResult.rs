//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/pushtotalk/ptpushresult?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PTPushResult;
);

unsafe impl Send for PTPushResult {}

unsafe impl Sync for PTPushResult {}

extern_conformance!(
    unsafe impl NSObjectProtocol for PTPushResult {}
);

impl PTPushResult {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// Use this if the push is a result of the user leaving the channel
        #[unsafe(method(leaveChannelPushResult))]
        #[unsafe(method_family = none)]
        pub unsafe fn leaveChannelPushResult() -> Retained<PTPushResult>;

        #[cfg(feature = "PTParticipant")]
        /// Use this to report the active remote participant that started speaking
        #[unsafe(method(pushResultForActiveRemoteParticipant:))]
        #[unsafe(method_family = none)]
        pub unsafe fn pushResultForActiveRemoteParticipant(
            participant: &PTParticipant,
        ) -> Retained<PTPushResult>;
    );
}
