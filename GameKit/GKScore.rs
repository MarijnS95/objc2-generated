//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated]
    pub struct GKScore;

    unsafe impl ClassType for GKScore {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for GKScore {}

unsafe impl NSObjectProtocol for GKScore {}

unsafe impl NSSecureCoding for GKScore {}

extern_methods!(
    unsafe impl GKScore {
        #[deprecated]
        #[method_id(@__retain_semantics Init initWithLeaderboardIdentifier:)]
        pub unsafe fn initWithLeaderboardIdentifier(
            this: Allocated<Self>,
            identifier: &NSString,
        ) -> Id<Self>;

        #[cfg(all(feature = "GKBasePlayer", feature = "GKPlayer"))]
        #[method_id(@__retain_semantics Init initWithLeaderboardIdentifier:player:)]
        pub unsafe fn initWithLeaderboardIdentifier_player(
            this: Allocated<Self>,
            identifier: &NSString,
            player: &GKPlayer,
        ) -> Id<Self>;

        #[deprecated]
        #[method(value)]
        pub unsafe fn value(&self) -> i64;

        #[deprecated]
        #[method(setValue:)]
        pub unsafe fn setValue(&self, value: i64);

        #[deprecated]
        #[method_id(@__retain_semantics Other formattedValue)]
        pub unsafe fn formattedValue(&self) -> Option<Id<NSString>>;

        #[method_id(@__retain_semantics Other leaderboardIdentifier)]
        pub unsafe fn leaderboardIdentifier(&self) -> Id<NSString>;

        #[method(setLeaderboardIdentifier:)]
        pub unsafe fn setLeaderboardIdentifier(&self, leaderboard_identifier: &NSString);

        #[method(context)]
        pub unsafe fn context(&self) -> u64;

        #[method(setContext:)]
        pub unsafe fn setContext(&self, context: u64);

        #[deprecated]
        #[method_id(@__retain_semantics Other date)]
        pub unsafe fn date(&self) -> Id<NSDate>;

        #[cfg(all(feature = "GKBasePlayer", feature = "GKPlayer"))]
        #[method_id(@__retain_semantics Other player)]
        pub unsafe fn player(&self) -> Option<Id<GKPlayer>>;

        #[deprecated]
        #[method(rank)]
        pub unsafe fn rank(&self) -> NSInteger;

        #[method(shouldSetDefaultLeaderboard)]
        pub unsafe fn shouldSetDefaultLeaderboard(&self) -> bool;

        #[method(setShouldSetDefaultLeaderboard:)]
        pub unsafe fn setShouldSetDefaultLeaderboard(&self, should_set_default_leaderboard: bool);

        #[cfg(feature = "block2")]
        #[method(reportScores:withCompletionHandler:)]
        pub unsafe fn reportScores_withCompletionHandler(
            scores: &NSArray<GKScore>,
            completion_handler: Option<&block2::Block<dyn Fn(*mut NSError)>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl GKScore {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_methods!(
    /// Deprecated
    unsafe impl GKScore {
        #[cfg(feature = "block2")]
        #[deprecated]
        #[method(reportScoreWithCompletionHandler:)]
        pub unsafe fn reportScoreWithCompletionHandler(
            &self,
            completion_handler: Option<&block2::Block<dyn Fn(*mut NSError)>>,
        );

        #[deprecated]
        #[method_id(@__retain_semantics Init initWithCategory:)]
        pub unsafe fn initWithCategory(
            this: Allocated<Self>,
            category: Option<&NSString>,
        ) -> Id<Self>;

        #[deprecated]
        #[method_id(@__retain_semantics Other category)]
        pub unsafe fn category(&self) -> Option<Id<NSString>>;

        #[deprecated]
        #[method(setCategory:)]
        pub unsafe fn setCategory(&self, category: Option<&NSString>);
    }
);

extern_methods!(
    /// Obsoleted
    unsafe impl GKScore {
        #[deprecated]
        #[method_id(@__retain_semantics Init initWithLeaderboardIdentifier:forPlayer:)]
        pub unsafe fn initWithLeaderboardIdentifier_forPlayer(
            this: Allocated<Self>,
            identifier: &NSString,
            player_id: &NSString,
        ) -> Option<Id<Self>>;

        #[deprecated]
        #[method_id(@__retain_semantics Other playerID)]
        pub unsafe fn playerID(&self) -> Option<Id<NSString>>;
    }
);
