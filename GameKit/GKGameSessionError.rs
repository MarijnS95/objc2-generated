//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkgamesessionerrordomain?language=objc)
    pub static GKGameSessionErrorDomain: &'static NSString;
}

/// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkgamesessionerrorcode?language=objc)
// NS_ENUM
#[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GKGameSessionErrorCode(pub NSInteger);
impl GKGameSessionErrorCode {
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorUnknown")]
    pub const Unknown: Self = Self(1);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorNotAuthenticated")]
    pub const NotAuthenticated: Self = Self(2);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorSessionConflict")]
    pub const SessionConflict: Self = Self(3);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorSessionNotShared")]
    pub const SessionNotShared: Self = Self(4);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorConnectionCancelledByUser")]
    pub const ConnectionCancelledByUser: Self = Self(5);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorConnectionFailed")]
    pub const ConnectionFailed: Self = Self(6);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorSessionHasMaxConnectedPlayers")]
    pub const SessionHasMaxConnectedPlayers: Self = Self(7);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorSendDataNotConnected")]
    pub const SendDataNotConnected: Self = Self(8);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorSendDataNoRecipients")]
    pub const SendDataNoRecipients: Self = Self(9);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorSendDataNotReachable")]
    pub const SendDataNotReachable: Self = Self(10);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorSendRateLimitReached")]
    pub const SendRateLimitReached: Self = Self(11);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorBadContainer")]
    pub const BadContainer: Self = Self(12);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorCloudQuotaExceeded")]
    pub const CloudQuotaExceeded: Self = Self(13);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorNetworkFailure")]
    pub const NetworkFailure: Self = Self(14);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorCloudDriveDisabled")]
    pub const CloudDriveDisabled: Self = Self(15);
    #[deprecated = "GKGameSession is deprecated, use real-time and turn-based matchmaking APIs instead."]
    #[doc(alias = "GKGameSessionErrorInvalidSession")]
    pub const InvalidSession: Self = Self(16);
}

unsafe impl Encode for GKGameSessionErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for GKGameSessionErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
