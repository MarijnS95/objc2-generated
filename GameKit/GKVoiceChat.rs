//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkvoicechatplayerstate?language=objc)
// NS_ENUM
#[deprecated = "No longer supported"]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GKVoiceChatPlayerState(pub NSInteger);
impl GKVoiceChatPlayerState {
    #[deprecated = "No longer supported"]
    #[doc(alias = "GKVoiceChatPlayerConnected")]
    pub const Connected: Self = Self(0);
    #[deprecated = "No longer supported"]
    #[doc(alias = "GKVoiceChatPlayerDisconnected")]
    pub const Disconnected: Self = Self(1);
    #[deprecated = "No longer supported"]
    #[doc(alias = "GKVoiceChatPlayerSpeaking")]
    pub const Speaking: Self = Self(2);
    #[deprecated = "No longer supported"]
    #[doc(alias = "GKVoiceChatPlayerSilent")]
    pub const Silent: Self = Self(3);
    #[deprecated = "No longer supported"]
    #[doc(alias = "GKVoiceChatPlayerConnecting")]
    pub const Connecting: Self = Self(4);
}

unsafe impl Encode for GKVoiceChatPlayerState {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for GKVoiceChatPlayerState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// GKVoiceChat represents an instance of a named voice communications channel
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkvoicechat?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "No longer supported"]
    pub struct GKVoiceChat;
);

unsafe impl NSObjectProtocol for GKVoiceChat {}

extern_methods!(
    unsafe impl GKVoiceChat {
        #[deprecated = "No longer supported"]
        #[method(start)]
        pub unsafe fn start(&self);

        /// start receiving audio from the chat
        #[deprecated = "No longer supported"]
        #[method(stop)]
        pub unsafe fn stop(&self);

        #[cfg(all(feature = "GKBasePlayer", feature = "GKPlayer"))]
        /// stop receiving audio from the chat
        #[method(setPlayer:muted:)]
        pub unsafe fn setPlayer_muted(&self, player: &GKPlayer, is_muted: bool);

        #[cfg(all(feature = "GKBasePlayer", feature = "GKPlayer", feature = "block2"))]
        #[method(playerVoiceChatStateDidChangeHandler)]
        pub unsafe fn playerVoiceChatStateDidChangeHandler(
            &self,
        ) -> NonNull<block2::Block<dyn Fn(NonNull<GKPlayer>, GKVoiceChatPlayerState)>>;

        #[cfg(all(feature = "GKBasePlayer", feature = "GKPlayer", feature = "block2"))]
        /// Setter for [`playerVoiceChatStateDidChangeHandler`][Self::playerVoiceChatStateDidChangeHandler].
        #[method(setPlayerVoiceChatStateDidChangeHandler:)]
        pub unsafe fn setPlayerVoiceChatStateDidChangeHandler(
            &self,
            player_voice_chat_state_did_change_handler: &block2::Block<
                dyn Fn(NonNull<GKPlayer>, GKVoiceChatPlayerState),
            >,
        );

        #[deprecated = "No longer supported"]
        #[method_id(name)]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[deprecated = "No longer supported"]
        #[method(isActive)]
        pub unsafe fn isActive(&self) -> bool;

        /// Setter for [`isActive`][Self::isActive].
        #[deprecated = "No longer supported"]
        #[method(setActive:)]
        pub unsafe fn setActive(&self, active: bool);

        #[deprecated = "No longer supported"]
        #[method(volume)]
        pub unsafe fn volume(&self) -> c_float;

        /// Setter for [`volume`][Self::volume].
        #[deprecated = "No longer supported"]
        #[method(setVolume:)]
        pub unsafe fn setVolume(&self, volume: c_float);

        #[cfg(all(feature = "GKBasePlayer", feature = "GKPlayer"))]
        #[method_id(players)]
        #[unsafe(method_family = none)]
        pub unsafe fn players(&self) -> Retained<NSArray<GKPlayer>>;

        #[deprecated = "No longer supported"]
        #[method(isVoIPAllowed)]
        pub unsafe fn isVoIPAllowed() -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl GKVoiceChat {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// Deprecated
    unsafe impl GKVoiceChat {
        #[cfg(feature = "block2")]
        #[deprecated]
        #[method(playerStateUpdateHandler)]
        pub unsafe fn playerStateUpdateHandler(
            &self,
        ) -> NonNull<block2::Block<dyn Fn(NonNull<NSString>, GKVoiceChatPlayerState)>>;

        #[cfg(feature = "block2")]
        /// Setter for [`playerStateUpdateHandler`][Self::playerStateUpdateHandler].
        #[deprecated]
        #[method(setPlayerStateUpdateHandler:)]
        pub unsafe fn setPlayerStateUpdateHandler(
            &self,
            player_state_update_handler: &block2::Block<
                dyn Fn(NonNull<NSString>, GKVoiceChatPlayerState),
            >,
        );
    }
);

extern_methods!(
    /// Obsoleted
    unsafe impl GKVoiceChat {
        /// * This property is obsolete. **
        #[deprecated]
        #[method_id(playerIDs)]
        #[unsafe(method_family = none)]
        pub unsafe fn playerIDs(&self) -> Option<Retained<NSArray<NSString>>>;

        /// * This method is obsolete. It will never be invoked and its implementation does nothing**
        #[deprecated]
        #[method(setMute:forPlayer:)]
        pub unsafe fn setMute_forPlayer(&self, is_muted: bool, player_id: &NSString);
    }
);
