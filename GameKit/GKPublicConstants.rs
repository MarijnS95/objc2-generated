//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gksenddatamode?language=objc)
// NS_ENUM
#[deprecated]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GKSendDataMode(pub c_int);
impl GKSendDataMode {
    #[deprecated]
    pub const GKSendDataReliable: Self = Self(0);
    #[deprecated]
    pub const GKSendDataUnreliable: Self = Self(1);
}

unsafe impl Encode for GKSendDataMode {
    const ENCODING: Encoding = c_int::ENCODING;
}

unsafe impl RefEncode for GKSendDataMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gksessionmode?language=objc)
// NS_ENUM
#[deprecated]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GKSessionMode(pub c_int);
impl GKSessionMode {
    #[deprecated]
    #[doc(alias = "GKSessionModeServer")]
    pub const Server: Self = Self(0);
    #[deprecated]
    #[doc(alias = "GKSessionModeClient")]
    pub const Client: Self = Self(1);
    #[deprecated]
    #[doc(alias = "GKSessionModePeer")]
    pub const Peer: Self = Self(2);
}

unsafe impl Encode for GKSessionMode {
    const ENCODING: Encoding = c_int::ENCODING;
}

unsafe impl RefEncode for GKSessionMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkpeerconnectionstate?language=objc)
// NS_ENUM
#[deprecated]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GKPeerConnectionState(pub c_int);
impl GKPeerConnectionState {
    #[deprecated]
    pub const GKPeerStateAvailable: Self = Self(0);
    #[deprecated]
    pub const GKPeerStateUnavailable: Self = Self(1);
    #[deprecated]
    pub const GKPeerStateConnected: Self = Self(2);
    #[deprecated]
    pub const GKPeerStateDisconnected: Self = Self(3);
    #[deprecated]
    pub const GKPeerStateConnecting: Self = Self(4);
    #[deprecated]
    pub const GKPeerStateConnectedRelay: Self = Self(5);
}

unsafe impl Encode for GKPeerConnectionState {
    const ENCODING: Encoding = c_int::ENCODING;
}

unsafe impl RefEncode for GKPeerConnectionState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkvoicechatserviceerrordomain?language=objc)
    pub static GKVoiceChatServiceErrorDomain: Option<&'static NSString>;
}

/// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkvoicechatserviceerror?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GKVoiceChatServiceError(pub c_int);
impl GKVoiceChatServiceError {
    pub const GKVoiceChatServiceInternalError: Self = Self(32000);
    pub const GKVoiceChatServiceNoRemotePacketsError: Self = Self(32001);
    pub const GKVoiceChatServiceUnableToConnectError: Self = Self(32002);
    pub const GKVoiceChatServiceRemoteParticipantHangupError: Self = Self(32003);
    pub const GKVoiceChatServiceInvalidCallIDError: Self = Self(32004);
    pub const GKVoiceChatServiceAudioUnavailableError: Self = Self(32005);
    pub const GKVoiceChatServiceUninitializedClientError: Self = Self(32006);
    pub const GKVoiceChatServiceClientMissingRequiredMethodsError: Self = Self(32007);
    pub const GKVoiceChatServiceRemoteParticipantBusyError: Self = Self(32008);
    pub const GKVoiceChatServiceRemoteParticipantCancelledError: Self = Self(32009);
    pub const GKVoiceChatServiceRemoteParticipantResponseInvalidError: Self = Self(32010);
    pub const GKVoiceChatServiceRemoteParticipantDeclinedInviteError: Self = Self(32011);
    pub const GKVoiceChatServiceMethodCurrentlyInvalidError: Self = Self(32012);
    pub const GKVoiceChatServiceNetworkConfigurationError: Self = Self(32013);
    pub const GKVoiceChatServiceUnsupportedRemoteVersionError: Self = Self(32014);
    pub const GKVoiceChatServiceOutOfMemoryError: Self = Self(32015);
    pub const GKVoiceChatServiceInvalidParameterError: Self = Self(32016);
}

unsafe impl Encode for GKVoiceChatServiceError {
    const ENCODING: Encoding = c_int::ENCODING;
}

unsafe impl RefEncode for GKVoiceChatServiceError {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
