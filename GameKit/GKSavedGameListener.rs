//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gksavedgamelistener?language=objc)
    pub unsafe trait GKSavedGameListener: NSObjectProtocol {
        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKPlayer",
            feature = "GKSavedGame"
        ))]
        /// Called when a playerâ€™s saved game data has been modified.
        #[optional]
        #[method(player:didModifySavedGame:)]
        unsafe fn player_didModifySavedGame(&self, player: &GKPlayer, saved_game: &GKSavedGame);

        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKPlayer",
            feature = "GKSavedGame"
        ))]
        /// Called when a conflict has arisen between different versions of the same saved game. This can happen when multiple devices write to the same saved game while one or more is offline. The application should determine the correct data to use, then call resolveConflictingSavedGames:withData:completionHandler:. This may require data merging or asking the user.
        #[optional]
        #[method(player:hasConflictingSavedGames:)]
        unsafe fn player_hasConflictingSavedGames(
            &self,
            player: &GKPlayer,
            saved_games: &NSArray<GKSavedGame>,
        );
    }
);
