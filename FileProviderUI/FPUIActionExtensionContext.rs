//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_file_provider::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// The error domain for errors raised by the File Provider UI extension.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/fileproviderui/fpuierrordomain?language=objc)
    pub static FPUIErrorDomain: &'static NSString;
}

/// [Apple's documentation](https://developer.apple.com/documentation/fileproviderui/fpuiactionidentifier?language=objc)
// NS_TYPED_EXTENSIBLE_ENUM
pub type FPUIActionIdentifier = NSString;

/// The error codes for errors raised by the File Provider UI extension.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/fileproviderui/fpuiextensionerrorcode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct FPUIExtensionErrorCode(pub NSUInteger);
impl FPUIExtensionErrorCode {
    /// An error indicating that the action was canceled by the user.
    #[doc(alias = "FPUIExtensionErrorCodeUserCancelled")]
    pub const UserCancelled: Self = Self(0);
    /// An error indicating that the action has failed.
    #[doc(alias = "FPUIExtensionErrorCodeFailed")]
    pub const Failed: Self = Self(1);
}

unsafe impl Encode for FPUIExtensionErrorCode {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for FPUIExtensionErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// An extension context provided to File Provider UI extensions.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/fileproviderui/fpuiactionextensioncontext?language=objc)
    #[unsafe(super(NSExtensionContext, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct FPUIActionExtensionContext;
);

unsafe impl NSObjectProtocol for FPUIActionExtensionContext {}

extern_methods!(
    unsafe impl FPUIActionExtensionContext {
        /// The identifier for the domain managed by the current file provider.
        #[method_id(domainIdentifier)]
        #[unsafe(method_family = none)]
        pub unsafe fn domainIdentifier(&self) -> Option<Retained<NSFileProviderDomainIdentifier>>;

        /// Marks the action as complete.
        ///
        /// Call this method when the action completes successfully.
        #[method(completeRequest)]
        pub unsafe fn completeRequest(&self);

        #[cfg(feature = "block2")]
        #[method(completeRequestReturningItems:completionHandler:)]
        pub unsafe fn completeRequestReturningItems_completionHandler(
            &self,
            items: Option<&NSArray>,
            completion_handler: Option<&block2::Block<dyn Fn(Bool)>>,
        );

        /// Cancels the action and returns the provided error.
        ///
        /// Call this method if the action fails. Set the error's domain to
        /// ``FPUIErrorDomain``. Set the error code to a ``FPUIExtensionErrorCode``
        /// value.
        #[method(cancelRequestWithError:)]
        pub unsafe fn cancelRequestWithError(&self, error: &NSError);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl FPUIActionExtensionContext {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
