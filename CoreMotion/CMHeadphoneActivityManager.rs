//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coremotion/cmheadphoneactivitystatus?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CMHeadphoneActivityStatus(pub NSInteger);
impl CMHeadphoneActivityStatus {
    #[doc(alias = "CMHeadphoneActivityStatusDisconnected")]
    pub const Disconnected: Self = Self(0);
    #[doc(alias = "CMHeadphoneActivityStatusConnected")]
    pub const Connected: Self = Self(1);
}

unsafe impl Encode for CMHeadphoneActivityStatus {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for CMHeadphoneActivityStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coremotion/cmheadphoneactivitystatushandler?language=objc)
#[cfg(feature = "block2")]
pub type CMHeadphoneActivityStatusHandler =
    *mut block2::Block<dyn Fn(CMHeadphoneActivityStatus, *mut NSError)>;

/// [Apple's documentation](https://developer.apple.com/documentation/coremotion/cmheadphoneactivityhandler?language=objc)
#[cfg(all(
    feature = "CMLogItem",
    feature = "CMMotionActivity",
    feature = "block2"
))]
pub type CMHeadphoneActivityHandler =
    *mut block2::Block<dyn Fn(*mut CMMotionActivity, *mut NSError)>;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremotion/cmheadphoneactivitymanager?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CMHeadphoneActivityManager;
);

unsafe impl NSObjectProtocol for CMHeadphoneActivityManager {}

extern_methods!(
    unsafe impl CMHeadphoneActivityManager {
        #[cfg(feature = "CMAuthorization")]
        #[method(authorizationStatus)]
        pub unsafe fn authorizationStatus() -> CMAuthorizationStatus;

        #[method(isActivityAvailable)]
        pub unsafe fn isActivityAvailable(&self) -> bool;

        #[method(isActivityActive)]
        pub unsafe fn isActivityActive(&self) -> bool;

        #[method(isStatusAvailable)]
        pub unsafe fn isStatusAvailable(&self) -> bool;

        #[method(isStatusActive)]
        pub unsafe fn isStatusActive(&self) -> bool;

        #[cfg(all(
            feature = "CMLogItem",
            feature = "CMMotionActivity",
            feature = "block2"
        ))]
        #[method(startActivityUpdatesToQueue:withHandler:)]
        pub unsafe fn startActivityUpdatesToQueue_withHandler(
            &self,
            queue: &NSOperationQueue,
            handler: CMHeadphoneActivityHandler,
        );

        #[method(stopActivityUpdates)]
        pub unsafe fn stopActivityUpdates(&self);

        #[cfg(feature = "block2")]
        #[method(startStatusUpdatesToQueue:withHandler:)]
        pub unsafe fn startStatusUpdatesToQueue_withHandler(
            &self,
            queue: &NSOperationQueue,
            handler: CMHeadphoneActivityStatusHandler,
        );

        #[method(stopStatusUpdates)]
        pub unsafe fn stopStatusUpdates(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CMHeadphoneActivityManager {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
