//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coremotion/cmacceleration?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct CMAcceleration {
    pub x: c_double,
    pub y: c_double,
    pub z: c_double,
}

unsafe impl Encode for CMAcceleration {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <c_double>::ENCODING,
            <c_double>::ENCODING,
            <c_double>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for CMAcceleration {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremotion/cmaccelerometerdata?language=objc)
    #[unsafe(super(CMLogItem, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CMLogItem")]
    pub struct CMAccelerometerData;
);

#[cfg(feature = "CMLogItem")]
extern_conformance!(
    unsafe impl NSCoding for CMAccelerometerData {}
);

#[cfg(feature = "CMLogItem")]
extern_conformance!(
    unsafe impl NSCopying for CMAccelerometerData {}
);

#[cfg(feature = "CMLogItem")]
unsafe impl CopyingHelper for CMAccelerometerData {
    type Result = Self;
}

#[cfg(feature = "CMLogItem")]
extern_conformance!(
    unsafe impl NSObjectProtocol for CMAccelerometerData {}
);

#[cfg(feature = "CMLogItem")]
extern_conformance!(
    unsafe impl NSSecureCoding for CMAccelerometerData {}
);

#[cfg(feature = "CMLogItem")]
impl CMAccelerometerData {
    extern_methods!(
        #[unsafe(method(acceleration))]
        #[unsafe(method_family = none)]
        pub unsafe fn acceleration(&self) -> CMAcceleration;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "CMLogItem")]
impl CMAccelerometerData {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
