//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/opendirectory/odquerycallback?language=objc)
#[cfg(all(feature = "CFOpenDirectory", feature = "objc2-core-foundation"))]
pub type ODQueryCallback =
    Option<unsafe extern "C-unwind" fn(ODQueryRef, CFArrayRef, CFErrorRef, *mut c_void)>;

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn ODQueryGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(all(
        feature = "CFOpenDirectory",
        feature = "CFOpenDirectoryConstants",
        feature = "objc2-core-foundation"
    ))]
    pub fn ODQueryCreateWithNode(
        allocator: CFAllocatorRef,
        node: ODNodeRef,
        record_type_or_list: CFTypeRef,
        attribute: Option<&ODAttributeType>,
        match_type: ODMatchType,
        query_value_or_list: CFTypeRef,
        return_attribute_or_list: CFTypeRef,
        max_results: CFIndex,
        error: *mut CFErrorRef,
    ) -> ODQueryRef;
}

extern "C-unwind" {
    #[cfg(all(
        feature = "CFOpenDirectory",
        feature = "CFOpenDirectoryConstants",
        feature = "objc2-core-foundation"
    ))]
    pub fn ODQueryCreateWithNodeType(
        allocator: CFAllocatorRef,
        node_type: ODNodeType,
        record_type_or_list: CFTypeRef,
        attribute: Option<&ODAttributeType>,
        match_type: ODMatchType,
        query_value_or_list: CFTypeRef,
        return_attribute_or_list: CFTypeRef,
        max_results: CFIndex,
        error: *mut CFErrorRef,
    ) -> ODQueryRef;
}

extern "C-unwind" {
    #[cfg(all(feature = "CFOpenDirectory", feature = "objc2-core-foundation"))]
    pub fn ODQueryCopyResults(
        query: ODQueryRef,
        allow_partial_results: bool,
        error: *mut CFErrorRef,
    ) -> CFArrayRef;
}

extern "C-unwind" {
    #[cfg(feature = "CFOpenDirectory")]
    pub fn ODQuerySynchronize(query: ODQueryRef);
}

extern "C-unwind" {
    #[cfg(all(feature = "CFOpenDirectory", feature = "objc2-core-foundation"))]
    pub fn ODQuerySetCallback(query: ODQueryRef, callback: ODQueryCallback, user_info: *mut c_void);
}

extern "C-unwind" {
    #[cfg(all(feature = "CFOpenDirectory", feature = "objc2-core-foundation"))]
    pub fn ODQueryScheduleWithRunLoop(
        query: ODQueryRef,
        run_loop: CFRunLoopRef,
        run_loop_mode: CFStringRef,
    );
}

extern "C-unwind" {
    #[cfg(all(feature = "CFOpenDirectory", feature = "objc2-core-foundation"))]
    pub fn ODQueryUnscheduleFromRunLoop(
        query: ODQueryRef,
        run_loop: CFRunLoopRef,
        run_loop_mode: CFStringRef,
    );
}
