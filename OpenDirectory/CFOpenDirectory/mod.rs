//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "CFODContext")]
#[path = "CFODContext.rs"]
mod __CFODContext;
#[cfg(feature = "CFODNode")]
#[path = "CFODNode.rs"]
mod __CFODNode;
#[cfg(feature = "CFODQuery")]
#[path = "CFODQuery.rs"]
mod __CFODQuery;
#[cfg(feature = "CFODRecord")]
#[path = "CFODRecord.rs"]
mod __CFODRecord;
#[cfg(feature = "CFODSession")]
#[path = "CFODSession.rs"]
mod __CFODSession;
#[cfg(feature = "CFOpenDirectoryConstants")]
#[path = "CFOpenDirectoryConstants.rs"]
mod __CFOpenDirectoryConstants;

#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeAddAccountPolicy;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCopyAccountPolicies;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCopyDetails;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCopyPolicies;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeCopyRecord;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCopySubnodeNames;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeCopySupportedAttributes;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCopySupportedPolicies;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCopySupportedRecordTypes;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCopyUnreachableSubnodeNames;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCreateCopy;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeCreateRecord;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCreateWithName;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeCreateWithNodeType;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCustomCall;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeCustomFunction;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeGetName;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodePasswordContentCheck;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeRemoveAccountPolicy;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeRemovePolicy;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeSetAccountPolicies;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeSetCredentials;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeSetCredentialsExtended;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeSetCredentialsUsingKerberosCache;
#[cfg(all(feature = "CFODNode", feature = "objc2-core-foundation"))]
pub use self::__CFODNode::ODNodeSetPolicies;
#[cfg(all(
    feature = "CFODNode",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODNode::ODNodeSetPolicy;
#[cfg(all(feature = "CFODQuery", feature = "objc2-core-foundation"))]
pub use self::__CFODQuery::ODQueryCallback;
#[cfg(all(feature = "CFODQuery", feature = "objc2-core-foundation"))]
pub use self::__CFODQuery::ODQueryCopyResults;
#[cfg(all(
    feature = "CFODQuery",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODQuery::ODQueryCreateWithNode;
#[cfg(all(
    feature = "CFODQuery",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODQuery::ODQueryCreateWithNodeType;
#[cfg(all(feature = "CFODQuery", feature = "objc2-core-foundation"))]
pub use self::__CFODQuery::ODQueryScheduleWithRunLoop;
#[cfg(all(feature = "CFODQuery", feature = "objc2-core-foundation"))]
pub use self::__CFODQuery::ODQuerySetCallback;
#[cfg(feature = "CFODQuery")]
pub use self::__CFODQuery::ODQuerySynchronize;
#[cfg(all(feature = "CFODQuery", feature = "objc2-core-foundation"))]
pub use self::__CFODQuery::ODQueryUnscheduleFromRunLoop;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordAddAccountPolicy;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordAddMember;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordAddValue;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordAuthenticationAllowed;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordChangePassword;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordContainsMember;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordCopyAccountPolicies;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordCopyDetails;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordCopyEffectivePolicies;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordCopyPasswordPolicy;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordCopyPolicies;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordCopySupportedPolicies;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordCopyValues;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordDelete;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordGetRecordName;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordGetRecordType;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordPasswordChangeAllowed;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordRemoveAccountPolicy;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordRemoveMember;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordRemovePolicy;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordRemoveValue;
#[cfg(feature = "CFODRecord")]
pub use self::__CFODRecord::ODRecordSecondsUntilAuthenticationsExpire;
#[cfg(feature = "CFODRecord")]
pub use self::__CFODRecord::ODRecordSecondsUntilPasswordExpires;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordSetAccountPolicies;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordSetNodeCredentials;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordSetNodeCredentialsExtended;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordSetNodeCredentialsUsingKerberosCache;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordSetPolicies;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordSetPolicy;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordSetValue;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordSynchronize;
#[cfg(all(feature = "CFODRecord", feature = "objc2-core-foundation"))]
pub use self::__CFODRecord::ODRecordVerifyPassword;
#[cfg(all(
    feature = "CFODRecord",
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFODRecord::ODRecordVerifyPasswordExtended;
#[cfg(feature = "CFODRecord")]
pub use self::__CFODRecord::ODRecordWillAuthenticationsExpire;
#[cfg(feature = "CFODRecord")]
pub use self::__CFODRecord::ODRecordWillPasswordExpire;
#[cfg(feature = "CFODSession")]
pub use self::__CFODSession::kODSessionDefault;
#[cfg(all(feature = "CFODSession", feature = "objc2-core-foundation"))]
pub use self::__CFODSession::ODSessionCopyNodeNames;
#[cfg(all(feature = "CFODSession", feature = "objc2-core-foundation"))]
pub use self::__CFODSession::ODSessionCreate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAccessControlEntry;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAddressLine1;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAddressLine2;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAddressLine3;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAdminLimits;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAdvertisedServices;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAlias;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAllAttributes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAllTypes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAltSecurityIdentities;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAreaCode;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAttrListRefCount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAttrListRefs;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAttrListValueRefCount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAttrListValueRefs;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAuthCredential;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAuthMethod;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAuthenticationAuthority;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAuthenticationHint;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAuthorityRevocationList;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAutomaticSearchPath;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeAutomountInformation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeBirthday;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeBootParams;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeBuildVersion;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeBuilding;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCACertificate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCapacity;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCertificateRevocationList;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCity;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeComment;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCompany;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeComputers;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeConfigAvailable;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeConfigFile;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeContactGUID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeContactPerson;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCopyTimestamp;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCoreFWVersion;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCountry;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCreationTimestamp;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCrossCertificatePair;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeCustomSearchPath;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDNSDomain;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDNSName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDNSNameServer;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDataStamp;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDateRecordCreated;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDepartment;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDirRefCount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeDirRefs;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeEMailAddress;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeEMailContacts;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeENetAddress;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeExpire;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeFWVersion;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeFaxNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeFirstName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeFullName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeFunctionalState;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeGUID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeGroup;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeGroupMembers;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeGroupMembership;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeGroupServices;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeHTML;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeHardwareUUID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeHomeDirectory;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeHomeDirectoryQuota;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeHomeDirectorySoftQuota;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeHomeLocOwner;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeHomePhoneNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeIMHandle;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeIPAddress;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeIPAddressAndENetAddress;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeIPv6Address;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeInternetAlias;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeJPEGPhoto;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeJobTitle;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeKDCAuthKey;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeKDCConfigData;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeKerberosRealm;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeKerberosServices;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeKeywords;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLDAPReadReplicas;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLDAPSearchBaseSuffix;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLDAPWriteReplicas;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLastName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLocalOnlySearchPath;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLocaleRelay;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLocaleSubnets;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeLocation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMCXFlags;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMCXSettings;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMIME;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMailAttribute;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMapCoordinates;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMapGUID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMapURI;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMetaAmbiguousName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMetaAugmentedAttributes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMetaAutomountMap;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMetaNodeLocation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMetaRecordName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMiddleName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeMobileNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeModificationTimestamp;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNFSHomeDirectory;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNTDomainComputerAccount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNamePrefix;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNameSuffix;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNativeOnly;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNestedGroups;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNetGroupTriplet;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNetGroups;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNetworkInterfaces;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNetworkNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNickName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNodeOptions;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNodePath;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNodeRefCount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNodeRefs;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNodeSASLRealm;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNote;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeNumTableList;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOperatingSystem;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOperatingSystemVersion;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOrganizationInfo;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOrganizationName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOriginalHomeDirectory;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOriginalNFSHomeDirectory;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOriginalNodeName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOwner;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeOwnerGUID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePGPPublicKey;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePIDValue;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePagerNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeParentLocales;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePassword;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePasswordPlus;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePasswordPolicyOptions;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePasswordServerList;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePasswordServerLocation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePhoneContacts;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePhoneNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePicture;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePlugInInfo;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePluginIndex;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePort;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePostalAddress;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePostalAddressContacts;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePostalCode;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePresetUserIsAdmin;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrimaryComputerGUID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrimaryComputerList;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrimaryGroupID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrimaryLocale;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrimaryNTDomain;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrintServiceInfoText;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrintServiceInfoXML;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrintServiceUserData;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrinter1284DeviceID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrinterLPRHost;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrinterLPRQueue;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrinterMakeAndModel;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrinterType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrinterURI;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePrinterXRISupported;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeProcessName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeProfiles;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeProfilesTimestamp;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeProtocolNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeProtocols;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypePwdAgingPolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRPCNumber;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeReadOnlyNode;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRealUserID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRecRefCount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRecRefs;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRecordName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRecordType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRelationships;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeRelativeDNPrefix;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeResourceInfo;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeResourceType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBAcctFlags;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBGroupRID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBHome;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBHomeDrive;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBKickoffTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBLogoffTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBLogonTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBPWDLastSet;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBPrimaryGroupSID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBProfilePath;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBRID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBSID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBScriptPath;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSMBUserWorkstations;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSchema;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSearchPath;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSearchPolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeServiceType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeServicesLocator;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSetupAdvertising;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSetupAutoRegister;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSetupLocation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSetupOccupation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeStandardOnly;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeState;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeStreet;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeSubNodes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeTimePackage;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeTimeToLive;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeTotalRefCount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeTotalSize;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeTrustInformation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeURL;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeUniqueID;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeUserCertificate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeUserPKCS12Data;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeUserSMIMECertificate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeUserShell;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeVFSDumpFreq;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeVFSLinkDir;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeVFSOpts;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeVFSPassNo;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeVFSType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeVersion;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeWeblogURI;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAttributeTypeXMLPlist;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationType2WayRandom;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationType2WayRandomChangePasswd;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeAPOP;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeCRAM_MD5;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeChangePasswd;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeClearText;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeClearTextReadOnly;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeCrypt;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeDIGEST_MD5;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeDeleteUser;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeGetEffectivePolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeGetGlobalPolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeGetKerberosPrincipal;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeGetPolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeGetUserData;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeGetUserName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeKerberosTickets;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeMPPEMasterKeys;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeMPPEPrimaryKeys;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeMSCHAP2;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeNTLMv2;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeNTLMv2WithSessionKey;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeNewUser;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeNewUserWithPolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeNodeNativeClearTextOK;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeNodeNativeNoClearText;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeReadSecureHash;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSMBNTv2UserSessionKey;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSMBWorkstationCredentialSessionKey;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSMB_LM_Key;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSMB_NT_Key;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSMB_NT_UserSessionKey;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSMB_NT_WithUserSessionKey;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSecureHash;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetCertificateHashAsCurrent;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetGlobalPolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetLMHash;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetNTHash;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetPassword;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetPasswordAsCurrent;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetPolicy;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetPolicyAsCurrent;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetUserData;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetUserName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeSetWorkstationPassword;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeWithAuthorizationRef;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODAuthenticationTypeWriteSecureHash;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODBackOffSeconds;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODExpirationTimeExpired;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODExpirationTimeNeverExpires;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchAny;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchBeginsWith;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchContains;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchEndsWith;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchEqualTo;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchGreaterThan;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchInsensitiveBeginsWith;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchInsensitiveContains;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchInsensitiveEndsWith;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchInsensitiveEqualTo;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODMatchLessThan;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODModuleConfigOptionConnectionIdleDisconnect;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODModuleConfigOptionConnectionSetupTimeout;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODModuleConfigOptionManInTheMiddle;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODModuleConfigOptionPacketEncryption;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODModuleConfigOptionPacketSigning;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODModuleConfigOptionQueryTimeout;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODNodeOptionsQuerySkippedSubnode;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODNodeTypeAuthentication;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODNodeTypeConfigure;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODNodeTypeContacts;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODNodeTypeLocalNodes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODNodeTypeNetwork;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeCreationTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeCurrentDate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeCurrentDayOfWeek;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeCurrentTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeCurrentTimeOfDay;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeDaysUntilExpiration;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeEnableAtTimeOfDay;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeEnableOnDate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeEnableOnDayOfWeek;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeExpiresAtTimeOfDay;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeExpiresEveryNDays;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeExpiresOnDate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeExpiresOnDayOfWeek;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeFailedAuthentications;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeLastAuthenticationTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeLastFailedAuthenticationTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeLastPasswordChangeTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeMaximumFailedAuthentications;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeNewPasswordRequiredTime;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributePassword;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributePasswordHashes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributePasswordHistory;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributePasswordHistoryDepth;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeRecordName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyAttributeRecordType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyCategoryAuthentication;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyCategoryPasswordChange;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyCategoryPasswordContent;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyKeyContent;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyKeyContentDescription;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyKeyEvaluationDetails;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyKeyIdentifier;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyKeyParameters;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyKeyPolicySatisfied;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypeAccountExpiresOnDate;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypeAccountMaximumFailedLogins;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypeAccountMaximumMinutesOfNonUse;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypeAccountMaximumMinutesUntilDisabled;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypeAccountMinutesUntilFailedLoginReset;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordCannotBeAccountName;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordChangeRequired;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordHistory;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordMaximumAgeInMinutes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordMaximumNumberOfCharacters;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordMinimumNumberOfCharacters;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordRequiresAlpha;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordRequiresMixedCase;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordRequiresNumeric;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordRequiresSymbol;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODPolicyTypePasswordSelfModification;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeAFPServer;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeAliases;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeAttributeTypes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeAugments;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeAutoServerSetup;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeAutomount;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeAutomountMap;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeBootp;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeCertificateAuthorities;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeComputerGroups;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeComputerLists;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeComputers;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeConfiguration;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeEthernets;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeFTPServer;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeFileMakerServers;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeGroups;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeHostServices;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeHosts;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeLDAPServer;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeLocations;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeMounts;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeNFS;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeNetDomains;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeNetGroups;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeNetworks;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePeople;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePresetComputerGroups;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePresetComputerLists;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePresetComputers;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePresetGroups;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePresetUsers;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePrintService;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePrintServiceUser;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypePrinters;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeProtocols;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeQTSServer;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeQueryInformation;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeRPC;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeRecordTypes;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeResources;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeSMBServer;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeServer;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeServices;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeSharePoints;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeUsers;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::kODRecordTypeWebServer;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODSessionProxyAddress;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODSessionProxyPassword;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODSessionProxyPort;
#[cfg(all(
    feature = "CFOpenDirectoryConstants",
    feature = "objc2-core-foundation"
))]
pub use self::__CFOpenDirectoryConstants::kODSessionProxyUsername;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODAttributeType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODAuthenticationType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODErrorUserInfoKeyType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODFrameworkErrors;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODMatchType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODNodeType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODOptionKeyType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODPolicyAttributeType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODPolicyCategoryType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODPolicyKeyType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODPolicyType;
#[cfg(feature = "CFOpenDirectoryConstants")]
pub use self::__CFOpenDirectoryConstants::ODRecordType;
use core::cell::UnsafeCell;
use core::marker::{PhantomData, PhantomPinned};
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

/// Opaque reference for the ODContext object
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/opendirectory/odcontextref?language=objc)
#[repr(C)]
pub struct ODContextRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

#[cfg(feature = "objc2-core-foundation")]
cf_type!(
    unsafe impl ODContextRef {}
);
cf_objc2_type!(
    unsafe impl RefEncode<"__ODContext"> for ODContextRef {}
);

/// Opaque reference for the ODNode object
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/opendirectory/odnoderef?language=objc)
#[repr(C)]
pub struct ODNodeRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

#[cfg(feature = "objc2-core-foundation")]
cf_type!(
    unsafe impl ODNodeRef {}
);
cf_objc2_type!(
    unsafe impl RefEncode<"__ODNode"> for ODNodeRef {}
);

/// Opaque reference for the ODQuery object
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/opendirectory/odqueryref?language=objc)
#[repr(C)]
pub struct ODQueryRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

#[cfg(feature = "objc2-core-foundation")]
cf_type!(
    unsafe impl ODQueryRef {}
);
cf_objc2_type!(
    unsafe impl RefEncode<"__ODQuery"> for ODQueryRef {}
);

/// Opaque reference for the ODRecord object
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/opendirectory/odrecordref?language=objc)
#[repr(C)]
pub struct ODRecordRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

#[cfg(feature = "objc2-core-foundation")]
cf_type!(
    unsafe impl ODRecordRef {}
);
cf_objc2_type!(
    unsafe impl RefEncode<"__ODRecord"> for ODRecordRef {}
);

/// Opaque reference for ODSession object
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/opendirectory/odsessionref?language=objc)
#[repr(C)]
pub struct ODSessionRef {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

#[cfg(feature = "objc2-core-foundation")]
cf_type!(
    unsafe impl ODSessionRef {}
);
cf_objc2_type!(
    unsafe impl RefEncode<"__ODSession"> for ODSessionRef {}
);

extern "C" {
    /// the error domain for OpenDirectory.framework details
    ///
    /// the error domain for OpenDirectory.framework details
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/opendirectory/koderrordomainframework?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kODErrorDomainFramework: Option<&'static CFString>;
}
