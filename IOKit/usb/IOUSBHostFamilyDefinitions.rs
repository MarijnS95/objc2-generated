//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::*;

/// Connection speeds reported in kUSBHostMatchingPropertySpeed
///
/// This enumeration matches the default speed ID mappings defined in XHCI 1.0 Table 147.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/iokit/tiousbhostconnectionspeed?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct tIOUSBHostConnectionSpeed(pub c_uint);
impl tIOUSBHostConnectionSpeed {
    #[doc(alias = "kIOUSBHostConnectionSpeedNone")]
    pub const IOUSBHostConnectionSpeedNone: Self = Self(0);
    #[doc(alias = "kIOUSBHostConnectionSpeedFull")]
    pub const IOUSBHostConnectionSpeedFull: Self = Self(1);
    #[doc(alias = "kIOUSBHostConnectionSpeedLow")]
    pub const IOUSBHostConnectionSpeedLow: Self = Self(2);
    #[doc(alias = "kIOUSBHostConnectionSpeedHigh")]
    pub const IOUSBHostConnectionSpeedHigh: Self = Self(3);
    #[doc(alias = "kIOUSBHostConnectionSpeedSuper")]
    pub const IOUSBHostConnectionSpeedSuper: Self = Self(4);
    #[doc(alias = "kIOUSBHostConnectionSpeedSuperPlus")]
    pub const IOUSBHostConnectionSpeedSuperPlus: Self = Self(5);
    #[doc(alias = "kIOUSBHostConnectionSpeedSuperPlusBy2")]
    pub const IOUSBHostConnectionSpeedSuperPlusBy2: Self = Self(6);
    #[doc(alias = "kIOUSBHostConnectionSpeedCount")]
    pub const IOUSBHostConnectionSpeedCount: Self = Self(7);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for tIOUSBHostConnectionSpeed {
    const ENCODING: Encoding = c_uint::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for tIOUSBHostConnectionSpeed {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Port types returned by IOUSBHostDevice::getPortStatus and kUSBHostPortPropertyStatus
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/iokit/tiousbhostporttype?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct tIOUSBHostPortType(pub c_uint);
impl tIOUSBHostPortType {
    #[doc(alias = "kIOUSBHostPortTypeStandard")]
    pub const IOUSBHostPortTypeStandard: Self = Self(0);
    #[doc(alias = "kIOUSBHostPortTypeCaptive")]
    pub const IOUSBHostPortTypeCaptive: Self = Self(1);
    #[doc(alias = "kIOUSBHostPortTypeInternal")]
    pub const IOUSBHostPortTypeInternal: Self = Self(2);
    #[doc(alias = "kIOUSBHostPortTypeAccessory")]
    pub const IOUSBHostPortTypeAccessory: Self = Self(3);
    #[doc(alias = "kIOUSBHostPortTypeExpressCard")]
    pub const IOUSBHostPortTypeExpressCard: Self = Self(4);
    #[doc(alias = "kIOUSBHostPortTypeCount")]
    pub const IOUSBHostPortTypeCount: Self = Self(5);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for tIOUSBHostPortType {
    const ENCODING: Encoding = c_uint::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for tIOUSBHostPortType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Values returned by IOUSBHostDevice::getPortStatus  and kUSBHostPortPropertyStatus
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/iokit/tiousbhostportstatus?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct tIOUSBHostPortStatus(pub c_uint);
impl tIOUSBHostPortStatus {
    #[doc(alias = "kIOUSBHostPortStatusPortTypeMask")]
    pub const IOUSBHostPortStatusPortTypeMask: Self = Self(IOUSBHostFamilyBitRange!(0, 3));
    #[doc(alias = "kIOUSBHostPortStatusPortTypePhase")]
    pub const IOUSBHostPortStatusPortTypePhase: Self = Self(IOUSBHostFamilyBitRangePhase!(0, 3));
    #[doc(alias = "kIOUSBHostPortStatusPortTypeStandard")]
    pub const IOUSBHostPortStatusPortTypeStandard: Self = Self(
        (tIOUSBHostPortType::IOUSBHostPortTypeStandard.0 << IOUSBHostFamilyBitRangePhase!(0, 3)),
    );
    #[doc(alias = "kIOUSBHostPortStatusPortTypeCaptive")]
    pub const IOUSBHostPortStatusPortTypeCaptive: Self = Self(
        (tIOUSBHostPortType::IOUSBHostPortTypeCaptive.0 << IOUSBHostFamilyBitRangePhase!(0, 3)),
    );
    #[doc(alias = "kIOUSBHostPortStatusPortTypeInternal")]
    pub const IOUSBHostPortStatusPortTypeInternal: Self = Self(
        (tIOUSBHostPortType::IOUSBHostPortTypeInternal.0 << IOUSBHostFamilyBitRangePhase!(0, 3)),
    );
    #[doc(alias = "kIOUSBHostPortStatusPortTypeAccessory")]
    pub const IOUSBHostPortStatusPortTypeAccessory: Self = Self(
        (tIOUSBHostPortType::IOUSBHostPortTypeAccessory.0 << IOUSBHostFamilyBitRangePhase!(0, 3)),
    );
    #[doc(alias = "kIOUSBHostPortStatusPortTypeReserved")]
    pub const IOUSBHostPortStatusPortTypeReserved: Self = Self(IOUSBHostFamilyBitRange!(4, 7));
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedMask")]
    pub const IOUSBHostPortStatusConnectedSpeedMask: Self = Self(IOUSBHostFamilyBitRange!(8, 10));
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedPhase")]
    pub const IOUSBHostPortStatusConnectedSpeedPhase: Self =
        Self(IOUSBHostFamilyBitRangePhase!(8, 10));
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedNone")]
    pub const IOUSBHostPortStatusConnectedSpeedNone: Self = Self(
        (tIOUSBHostConnectionSpeed::IOUSBHostConnectionSpeedNone.0
            << IOUSBHostFamilyBitRangePhase!(8, 10)),
    );
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedFull")]
    pub const IOUSBHostPortStatusConnectedSpeedFull: Self = Self(
        (tIOUSBHostConnectionSpeed::IOUSBHostConnectionSpeedFull.0
            << IOUSBHostFamilyBitRangePhase!(8, 10)),
    );
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedLow")]
    pub const IOUSBHostPortStatusConnectedSpeedLow: Self = Self(
        (tIOUSBHostConnectionSpeed::IOUSBHostConnectionSpeedLow.0
            << IOUSBHostFamilyBitRangePhase!(8, 10)),
    );
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedHigh")]
    pub const IOUSBHostPortStatusConnectedSpeedHigh: Self = Self(
        (tIOUSBHostConnectionSpeed::IOUSBHostConnectionSpeedHigh.0
            << IOUSBHostFamilyBitRangePhase!(8, 10)),
    );
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedSuper")]
    pub const IOUSBHostPortStatusConnectedSpeedSuper: Self = Self(
        (tIOUSBHostConnectionSpeed::IOUSBHostConnectionSpeedSuper.0
            << IOUSBHostFamilyBitRangePhase!(8, 10)),
    );
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedSuperPlus")]
    pub const IOUSBHostPortStatusConnectedSpeedSuperPlus: Self = Self(
        (tIOUSBHostConnectionSpeed::IOUSBHostConnectionSpeedSuperPlus.0
            << IOUSBHostFamilyBitRangePhase!(8, 10)),
    );
    #[doc(alias = "kIOUSBHostPortStatusConnectedSpeedSuperPlusBy2")]
    pub const IOUSBHostPortStatusConnectedSpeedSuperPlusBy2: Self = Self(
        (tIOUSBHostConnectionSpeed::IOUSBHostConnectionSpeedSuperPlusBy2.0
            << IOUSBHostFamilyBitRangePhase!(8, 10)),
    );
    #[doc(alias = "kIOUSBHostPortStatusResetting")]
    pub const IOUSBHostPortStatusResetting: Self = Self(IOUSBHostFamilyBit!(11));
    #[doc(alias = "kIOUSBHostPortStatusEnabled")]
    pub const IOUSBHostPortStatusEnabled: Self = Self(IOUSBHostFamilyBit!(12));
    #[doc(alias = "kIOUSBHostPortStatusSuspended")]
    pub const IOUSBHostPortStatusSuspended: Self = Self(IOUSBHostFamilyBit!(13));
    #[doc(alias = "kIOUSBHostPortStatusOvercurrent")]
    pub const IOUSBHostPortStatusOvercurrent: Self = Self(IOUSBHostFamilyBit!(14));
    #[doc(alias = "kIOUSBHostPortStatusTestMode")]
    pub const IOUSBHostPortStatusTestMode: Self = Self(IOUSBHostFamilyBit!(15));
}

#[cfg(feature = "objc2")]
unsafe impl Encode for tIOUSBHostPortStatus {
    const ENCODING: Encoding = c_uint::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for tIOUSBHostPortStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
