//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// CLSQuantityItem represents user generated quantity information.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/classkit/clsquantityitem?language=objc)
    #[unsafe(super(CLSActivityItem, CLSObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "CLSActivityItem", feature = "CLSObject"))]
    pub struct CLSQuantityItem;
);

#[cfg(all(feature = "CLSActivityItem", feature = "CLSObject"))]
unsafe impl NSCoding for CLSQuantityItem {}

#[cfg(all(feature = "CLSActivityItem", feature = "CLSObject"))]
unsafe impl NSObjectProtocol for CLSQuantityItem {}

#[cfg(all(feature = "CLSActivityItem", feature = "CLSObject"))]
unsafe impl NSSecureCoding for CLSQuantityItem {}

extern_methods!(
    #[cfg(all(feature = "CLSActivityItem", feature = "CLSObject"))]
    unsafe impl CLSQuantityItem {
        /// Quantity awarded.
        #[method(quantity)]
        pub unsafe fn quantity(&self) -> c_double;

        /// Setter for [`quantity`][Self::quantity].
        #[method(setQuantity:)]
        pub unsafe fn setQuantity(&self, quantity: c_double);

        /// Create a quantity item with an identifier and title.
        ///
        /// Parameter `identifier`: An identifier that is unique within activity.
        ///
        /// Parameter `title`: Title of the quantity. Ex
        /// _Hints_
        #[method_id(@__retain_semantics Init initWithIdentifier:title:)]
        pub unsafe fn initWithIdentifier_title(
            this: Allocated<Self>,
            identifier: &NSString,
            title: &NSString,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CLSActivityItem`
    #[cfg(all(feature = "CLSActivityItem", feature = "CLSObject"))]
    unsafe impl CLSQuantityItem {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);
