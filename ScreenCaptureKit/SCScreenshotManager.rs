//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/screencapturekit/scscreenshotmanager?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SCScreenshotManager;
);

unsafe impl NSObjectProtocol for SCScreenshotManager {}

extern_methods!(
    unsafe impl SCScreenshotManager {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "SCStream", feature = "block2", feature = "objc2-core-media"))]
        #[method(captureSampleBufferWithFilter:configuration:completionHandler:)]
        pub unsafe fn captureSampleBufferWithFilter_configuration_completionHandler(
            content_filter: &SCContentFilter,
            config: &SCStreamConfiguration,
            completion_handler: Option<&block2::Block<dyn Fn(CMSampleBufferRef, *mut NSError)>>,
        );

        #[cfg(all(
            feature = "SCStream",
            feature = "block2",
            feature = "objc2-core-graphics"
        ))]
        #[method(captureImageWithFilter:configuration:completionHandler:)]
        pub unsafe fn captureImageWithFilter_configuration_completionHandler(
            content_filter: &SCContentFilter,
            config: &SCStreamConfiguration,
            completion_handler: Option<&block2::Block<dyn Fn(CGImageRef, *mut NSError)>>,
        );

        #[cfg(all(
            feature = "block2",
            feature = "objc2-core-foundation",
            feature = "objc2-core-graphics"
        ))]
        #[method(captureImageInRect:completionHandler:)]
        pub unsafe fn captureImageInRect_completionHandler(
            rect: CGRect,
            completion_handler: Option<&block2::Block<dyn Fn(CGImageRef, *mut NSError)>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SCScreenshotManager {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
