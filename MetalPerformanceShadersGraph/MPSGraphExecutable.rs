//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;
#[cfg(feature = "objc2-metal-performance-shaders")]
use objc2_metal_performance_shaders::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphexecutablecompletionhandler?language=objc)
#[cfg(all(
    feature = "MPSGraphCore",
    feature = "MPSGraphTensorData",
    feature = "block2"
))]
pub type MPSGraphExecutableCompletionHandler =
    *mut block2::Block<dyn Fn(NonNull<NSArray<MPSGraphTensorData>>, *mut NSError)>;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphexecutablescheduledhandler?language=objc)
#[cfg(all(
    feature = "MPSGraphCore",
    feature = "MPSGraphTensorData",
    feature = "block2"
))]
pub type MPSGraphExecutableScheduledHandler =
    *mut block2::Block<dyn Fn(NonNull<NSArray<MPSGraphTensorData>>, *mut NSError)>;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphexecutableexecutiondescriptor?language=objc)
    #[unsafe(super(MPSGraphObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSGraphCore")]
    pub struct MPSGraphExecutableExecutionDescriptor;
);

#[cfg(feature = "MPSGraphCore")]
unsafe impl NSCopying for MPSGraphExecutableExecutionDescriptor {}

#[cfg(feature = "MPSGraphCore")]
unsafe impl CopyingHelper for MPSGraphExecutableExecutionDescriptor {
    type Result = Self;
}

#[cfg(feature = "MPSGraphCore")]
unsafe impl NSObjectProtocol for MPSGraphExecutableExecutionDescriptor {}

extern_methods!(
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphExecutableExecutionDescriptor {
        #[cfg(all(feature = "MPSGraphTensorData", feature = "block2"))]
        #[method(scheduledHandler)]
        pub unsafe fn scheduledHandler(&self) -> MPSGraphExecutableScheduledHandler;

        #[cfg(all(feature = "MPSGraphTensorData", feature = "block2"))]
        #[method(setScheduledHandler:)]
        pub unsafe fn setScheduledHandler(
            &self,
            scheduled_handler: MPSGraphExecutableScheduledHandler,
        );

        #[cfg(all(feature = "MPSGraphTensorData", feature = "block2"))]
        #[method(completionHandler)]
        pub unsafe fn completionHandler(&self) -> MPSGraphExecutableCompletionHandler;

        #[cfg(all(feature = "MPSGraphTensorData", feature = "block2"))]
        #[method(setCompletionHandler:)]
        pub unsafe fn setCompletionHandler(
            &self,
            completion_handler: MPSGraphExecutableCompletionHandler,
        );

        #[method(waitUntilCompleted)]
        pub unsafe fn waitUntilCompleted(&self) -> bool;

        #[method(setWaitUntilCompleted:)]
        pub unsafe fn setWaitUntilCompleted(&self, wait_until_completed: bool);

        #[method(waitForEvent:value:)]
        pub unsafe fn waitForEvent_value(
            &self,
            event: &ProtocolObject<dyn MTLSharedEvent>,
            value: u64,
        );

        #[cfg(feature = "MPSGraph")]
        #[method(signalEvent:atExecutionEvent:value:)]
        pub unsafe fn signalEvent_atExecutionEvent_value(
            &self,
            event: &ProtocolObject<dyn MTLSharedEvent>,
            execution_stage: MPSGraphExecutionStage,
            value: u64,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphExecutableExecutionDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphdeploymentplatform?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSGraphDeploymentPlatform(pub u64);
impl MPSGraphDeploymentPlatform {
    #[doc(alias = "MPSGraphDeploymentPlatformMacOS")]
    pub const MacOS: Self = Self(0);
    #[doc(alias = "MPSGraphDeploymentPlatformIOS")]
    pub const IOS: Self = Self(1);
    #[doc(alias = "MPSGraphDeploymentPlatformTvOS")]
    pub const TvOS: Self = Self(2);
    #[doc(alias = "MPSGraphDeploymentPlatformVisionOS")]
    pub const VisionOS: Self = Self(3);
}

unsafe impl Encode for MPSGraphDeploymentPlatform {
    const ENCODING: Encoding = u64::ENCODING;
}

unsafe impl RefEncode for MPSGraphDeploymentPlatform {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphexecutableserializationdescriptor?language=objc)
    #[unsafe(super(MPSGraphObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSGraphCore")]
    pub struct MPSGraphExecutableSerializationDescriptor;
);

#[cfg(feature = "MPSGraphCore")]
unsafe impl NSObjectProtocol for MPSGraphExecutableSerializationDescriptor {}

extern_methods!(
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphExecutableSerializationDescriptor {
        #[method(append)]
        pub unsafe fn append(&self) -> bool;

        #[method(setAppend:)]
        pub unsafe fn setAppend(&self, append: bool);

        #[method(deploymentPlatform)]
        pub unsafe fn deploymentPlatform(&self) -> MPSGraphDeploymentPlatform;

        #[method(setDeploymentPlatform:)]
        pub unsafe fn setDeploymentPlatform(&self, deployment_platform: MPSGraphDeploymentPlatform);

        #[method_id(@__retain_semantics Other minimumDeploymentTarget)]
        pub unsafe fn minimumDeploymentTarget(&self) -> Retained<NSString>;

        #[method(setMinimumDeploymentTarget:)]
        pub unsafe fn setMinimumDeploymentTarget(&self, minimum_deployment_target: &NSString);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphExecutableSerializationDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphexecutable?language=objc)
    #[unsafe(super(MPSGraphObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSGraphCore")]
    pub struct MPSGraphExecutable;
);

#[cfg(feature = "MPSGraphCore")]
unsafe impl NSObjectProtocol for MPSGraphExecutable {}

extern_methods!(
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphExecutable {
        #[cfg(feature = "MPSGraph")]
        #[method(options)]
        pub unsafe fn options(&self) -> MPSGraphOptions;

        #[cfg(feature = "MPSGraph")]
        #[method(setOptions:)]
        pub unsafe fn setOptions(&self, options: MPSGraphOptions);

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other feedTensors)]
        pub unsafe fn feedTensors(&self) -> Option<Retained<NSArray<MPSGraphTensor>>>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other targetTensors)]
        pub unsafe fn targetTensors(&self) -> Option<Retained<NSArray<MPSGraphTensor>>>;

        #[cfg(all(feature = "MPSGraph", feature = "MPSGraphDevice"))]
        #[method(specializeWithDevice:inputTypes:compilationDescriptor:)]
        pub unsafe fn specializeWithDevice_inputTypes_compilationDescriptor(
            &self,
            device: Option<&MPSGraphDevice>,
            input_types: &NSArray<MPSGraphType>,
            compilation_descriptor: Option<&MPSGraphCompilationDescriptor>,
        );

        #[cfg(all(feature = "MPSGraph", feature = "MPSGraphDevice"))]
        #[method_id(@__retain_semantics Other getOutputTypesWithDevice:inputTypes:compilationDescriptor:)]
        pub unsafe fn getOutputTypesWithDevice_inputTypes_compilationDescriptor(
            &self,
            device: Option<&MPSGraphDevice>,
            input_types: &NSArray<MPSGraphType>,
            compilation_descriptor: Option<&MPSGraphCompilationDescriptor>,
        ) -> Option<Retained<NSArray<MPSGraphShapedType>>>;

        #[cfg(feature = "MPSGraphTensorData")]
        #[method_id(@__retain_semantics Other runWithMTLCommandQueue:inputsArray:resultsArray:executionDescriptor:)]
        pub unsafe fn runWithMTLCommandQueue_inputsArray_resultsArray_executionDescriptor(
            &self,
            command_queue: &ProtocolObject<dyn MTLCommandQueue>,
            inputs_array: &NSArray<MPSGraphTensorData>,
            results_array: Option<&NSArray<MPSGraphTensorData>>,
            execution_descriptor: Option<&MPSGraphExecutableExecutionDescriptor>,
        ) -> Retained<NSArray<MPSGraphTensorData>>;

        #[cfg(feature = "MPSGraphTensorData")]
        #[method_id(@__retain_semantics Other runAsyncWithMTLCommandQueue:inputsArray:resultsArray:executionDescriptor:)]
        pub unsafe fn runAsyncWithMTLCommandQueue_inputsArray_resultsArray_executionDescriptor(
            &self,
            command_queue: &ProtocolObject<dyn MTLCommandQueue>,
            inputs_array: &NSArray<MPSGraphTensorData>,
            results_array: Option<&NSArray<MPSGraphTensorData>>,
            execution_descriptor: Option<&MPSGraphExecutableExecutionDescriptor>,
        ) -> Retained<NSArray<MPSGraphTensorData>>;

        #[cfg(all(
            feature = "MPSGraphTensorData",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other encodeToCommandBuffer:inputsArray:resultsArray:executionDescriptor:)]
        pub unsafe fn encodeToCommandBuffer_inputsArray_resultsArray_executionDescriptor(
            &self,
            command_buffer: &MPSCommandBuffer,
            inputs_array: &NSArray<MPSGraphTensorData>,
            results_array: Option<&NSArray<MPSGraphTensorData>>,
            execution_descriptor: Option<&MPSGraphExecutableExecutionDescriptor>,
        ) -> Retained<NSArray<MPSGraphTensorData>>;

        #[method(serializeToMPSGraphPackageAtURL:descriptor:)]
        pub unsafe fn serializeToMPSGraphPackageAtURL_descriptor(
            &self,
            url: &NSURL,
            descriptor: Option<&MPSGraphExecutableSerializationDescriptor>,
        );

        #[cfg(feature = "MPSGraph")]
        #[method_id(@__retain_semantics Init initWithMPSGraphPackageAtURL:compilationDescriptor:)]
        pub unsafe fn initWithMPSGraphPackageAtURL_compilationDescriptor(
            this: Allocated<Self>,
            mpsgraph_package_url: &NSURL,
            compilation_descriptor: Option<&MPSGraphCompilationDescriptor>,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSGraph")]
        #[method_id(@__retain_semantics Init initWithCoreMLPackageAtURL:compilationDescriptor:)]
        pub unsafe fn initWithCoreMLPackageAtURL_compilationDescriptor(
            this: Allocated<Self>,
            core_ml_package_url: &NSURL,
            compilation_descriptor: Option<&MPSGraphCompilationDescriptor>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphExecutable {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
