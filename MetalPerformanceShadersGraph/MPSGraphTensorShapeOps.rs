//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-metal-performance-shaders")]
use objc2_metal_performance_shaders::*;

use crate::*;

extern_methods!(
    /// MPSGraphTensorShapeOps
    #[cfg(all(feature = "MPSGraph", feature = "MPSGraphCore"))]
    unsafe impl MPSGraph {
        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other reshapeTensor:withShape:name:)]
        pub unsafe fn reshapeTensor_withShape_name(
            &self,
            tensor: &MPSGraphTensor,
            shape: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other reshapeTensor:withShapeTensor:name:)]
        pub unsafe fn reshapeTensor_withShapeTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            shape_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other transposeTensor:dimension:withDimension:name:)]
        pub unsafe fn transposeTensor_dimension_withDimension_name(
            &self,
            tensor: &MPSGraphTensor,
            dimension_index: NSUInteger,
            dimension_index2: NSUInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other transposeTensor:permutation:name:)]
        pub unsafe fn transposeTensor_permutation_name(
            &self,
            tensor: &MPSGraphTensor,
            permutation: &NSArray<NSNumber>,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceTensor:dimension:start:length:name:)]
        pub unsafe fn sliceTensor_dimension_start_length_name(
            &self,
            tensor: &MPSGraphTensor,
            dimension_index: NSUInteger,
            start: NSInteger,
            length: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceTensor:starts:ends:strides:name:)]
        pub unsafe fn sliceTensor_starts_ends_strides_name(
            &self,
            tensor: &MPSGraphTensor,
            starts: &NSArray<NSNumber>,
            ends: &NSArray<NSNumber>,
            strides: &NSArray<NSNumber>,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceTensor:starts:ends:strides:startMask:endMask:squeezeMask:name:)]
        pub unsafe fn sliceTensor_starts_ends_strides_startMask_endMask_squeezeMask_name(
            &self,
            tensor: &MPSGraphTensor,
            starts: &NSArray<NSNumber>,
            ends: &NSArray<NSNumber>,
            strides: &NSArray<NSNumber>,
            start_mask: u32,
            end_mask: u32,
            squeeze_mask: u32,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceGradientTensor:fwdInShapeTensor:starts:ends:strides:name:)]
        pub unsafe fn sliceGradientTensor_fwdInShapeTensor_starts_ends_strides_name(
            &self,
            input_gradient_tensor: &MPSGraphTensor,
            fwd_in_shape_tensor: &MPSGraphTensor,
            starts: &NSArray<NSNumber>,
            ends: &NSArray<NSNumber>,
            strides: &NSArray<NSNumber>,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceGradientTensor:fwdInShapeTensor:starts:ends:strides:startMask:endMask:squeezeMask:name:)]
        pub unsafe fn sliceGradientTensor_fwdInShapeTensor_starts_ends_strides_startMask_endMask_squeezeMask_name(
            &self,
            input_gradient_tensor: &MPSGraphTensor,
            fwd_in_shape_tensor: &MPSGraphTensor,
            starts: &NSArray<NSNumber>,
            ends: &NSArray<NSNumber>,
            strides: &NSArray<NSNumber>,
            start_mask: u32,
            end_mask: u32,
            squeeze_mask: u32,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceUpdateDataTensor:updateTensor:startsTensor:endsTensor:stridesTensor:startMask:endMask:squeezeMask:name:)]
        pub unsafe fn sliceUpdateDataTensor_updateTensor_startsTensor_endsTensor_stridesTensor_startMask_endMask_squeezeMask_name(
            &self,
            data_tensor: &MPSGraphTensor,
            update_tensor: &MPSGraphTensor,
            starts_tensor: &MPSGraphTensor,
            ends_tensor: &MPSGraphTensor,
            strides_tensor: &MPSGraphTensor,
            start_mask: u32,
            end_mask: u32,
            squeeze_mask: u32,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceUpdateDataTensor:updateTensor:starts:ends:strides:startMask:endMask:squeezeMask:name:)]
        pub unsafe fn sliceUpdateDataTensor_updateTensor_starts_ends_strides_startMask_endMask_squeezeMask_name(
            &self,
            data_tensor: &MPSGraphTensor,
            update_tensor: &MPSGraphTensor,
            starts: &NSArray<NSNumber>,
            ends: &NSArray<NSNumber>,
            strides: &NSArray<NSNumber>,
            start_mask: u32,
            end_mask: u32,
            squeeze_mask: u32,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceUpdateDataTensor:updateTensor:startsTensor:endsTensor:stridesTensor:name:)]
        pub unsafe fn sliceUpdateDataTensor_updateTensor_startsTensor_endsTensor_stridesTensor_name(
            &self,
            data_tensor: &MPSGraphTensor,
            update_tensor: &MPSGraphTensor,
            starts_tensor: &MPSGraphTensor,
            ends_tensor: &MPSGraphTensor,
            strides_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other sliceUpdateDataTensor:updateTensor:starts:ends:strides:name:)]
        pub unsafe fn sliceUpdateDataTensor_updateTensor_starts_ends_strides_name(
            &self,
            data_tensor: &MPSGraphTensor,
            update_tensor: &MPSGraphTensor,
            starts: &NSArray<NSNumber>,
            ends: &NSArray<NSNumber>,
            strides: &NSArray<NSNumber>,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other concatTensor:withTensor:dimension:name:)]
        pub unsafe fn concatTensor_withTensor_dimension_name(
            &self,
            tensor: &MPSGraphTensor,
            tensor2: &MPSGraphTensor,
            dimension_index: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other concatTensors:dimension:name:)]
        pub unsafe fn concatTensors_dimension_name(
            &self,
            tensors: &NSArray<MPSGraphTensor>,
            dimension_index: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other concatTensors:dimension:interleave:name:)]
        pub unsafe fn concatTensors_dimension_interleave_name(
            &self,
            tensors: &NSArray<MPSGraphTensor>,
            dimension_index: NSInteger,
            interleave: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other tileTensor:withMultiplier:name:)]
        pub unsafe fn tileTensor_withMultiplier_name(
            &self,
            tensor: &MPSGraphTensor,
            multiplier: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other tileGradientWithIncomingGradientTensor:sourceTensor:withMultiplier:name:)]
        pub unsafe fn tileGradientWithIncomingGradientTensor_sourceTensor_withMultiplier_name(
            &self,
            incoming_gradient_tensor: &MPSGraphTensor,
            source_tensor: &MPSGraphTensor,
            multiplier: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other padTensor:withPaddingMode:leftPadding:rightPadding:constantValue:name:)]
        pub unsafe fn padTensor_withPaddingMode_leftPadding_rightPadding_constantValue_name(
            &self,
            tensor: &MPSGraphTensor,
            padding_mode: MPSGraphPaddingMode,
            left_padding: &MPSShape,
            right_padding: &MPSShape,
            constant_value: c_double,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other padGradientWithIncomingGradientTensor:sourceTensor:paddingMode:leftPadding:rightPadding:name:)]
        pub unsafe fn padGradientWithIncomingGradientTensor_sourceTensor_paddingMode_leftPadding_rightPadding_name(
            &self,
            incoming_gradient_tensor: &MPSGraphTensor,
            source_tensor: &MPSGraphTensor,
            padding_mode: MPSGraphPaddingMode,
            left_padding: &MPSShape,
            right_padding: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other spaceToDepth2DTensor:widthAxis:heightAxis:depthAxis:blockSize:usePixelShuffleOrder:name:)]
        pub unsafe fn spaceToDepth2DTensor_widthAxis_heightAxis_depthAxis_blockSize_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            width_axis: NSUInteger,
            height_axis: NSUInteger,
            depth_axis: NSUInteger,
            block_size: NSUInteger,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other spaceToDepth2DTensor:widthAxisTensor:heightAxisTensor:depthAxisTensor:blockSize:usePixelShuffleOrder:name:)]
        pub unsafe fn spaceToDepth2DTensor_widthAxisTensor_heightAxisTensor_depthAxisTensor_blockSize_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            width_axis_tensor: &MPSGraphTensor,
            height_axis_tensor: &MPSGraphTensor,
            depth_axis_tensor: &MPSGraphTensor,
            block_size: NSUInteger,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other depthToSpace2DTensor:widthAxis:heightAxis:depthAxis:blockSize:usePixelShuffleOrder:name:)]
        pub unsafe fn depthToSpace2DTensor_widthAxis_heightAxis_depthAxis_blockSize_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            width_axis: NSUInteger,
            height_axis: NSUInteger,
            depth_axis: NSUInteger,
            block_size: NSUInteger,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other depthToSpace2DTensor:widthAxisTensor:heightAxisTensor:depthAxisTensor:blockSize:usePixelShuffleOrder:name:)]
        pub unsafe fn depthToSpace2DTensor_widthAxisTensor_heightAxisTensor_depthAxisTensor_blockSize_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            width_axis_tensor: &MPSGraphTensor,
            height_axis_tensor: &MPSGraphTensor,
            depth_axis_tensor: &MPSGraphTensor,
            block_size: NSUInteger,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other spaceToBatchTensor:spatialAxes:batchAxis:blockDimensions:usePixelShuffleOrder:name:)]
        pub unsafe fn spaceToBatchTensor_spatialAxes_batchAxis_blockDimensions_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            spatial_axes: &NSArray<NSNumber>,
            batch_axis: NSInteger,
            block_dimensions: &NSArray<NSNumber>,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other spaceToBatchTensor:spatialAxesTensor:batchAxisTensor:blockDimensionsTensor:usePixelShuffleOrder:name:)]
        pub unsafe fn spaceToBatchTensor_spatialAxesTensor_batchAxisTensor_blockDimensionsTensor_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            spatial_axes_tensor: &MPSGraphTensor,
            batch_axis_tensor: &MPSGraphTensor,
            block_dimensions_tensor: &MPSGraphTensor,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other batchToSpaceTensor:spatialAxes:batchAxis:blockDimensions:usePixelShuffleOrder:name:)]
        pub unsafe fn batchToSpaceTensor_spatialAxes_batchAxis_blockDimensions_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            spatial_axes: &NSArray<NSNumber>,
            batch_axis: NSInteger,
            block_dimensions: &NSArray<NSNumber>,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other batchToSpaceTensor:spatialAxesTensor:batchAxisTensor:blockDimensionsTensor:usePixelShuffleOrder:name:)]
        pub unsafe fn batchToSpaceTensor_spatialAxesTensor_batchAxisTensor_blockDimensionsTensor_usePixelShuffleOrder_name(
            &self,
            tensor: &MPSGraphTensor,
            spatial_axes_tensor: &MPSGraphTensor,
            batch_axis_tensor: &MPSGraphTensor,
            block_dimensions_tensor: &MPSGraphTensor,
            use_pixel_shuffle_order: bool,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other reverseTensor:axesTensor:name:)]
        pub unsafe fn reverseTensor_axesTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            axes_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other reverseTensor:axes:name:)]
        pub unsafe fn reverseTensor_axes_name(
            &self,
            tensor: &MPSGraphTensor,
            axes: &NSArray<NSNumber>,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other reverseTensor:name:)]
        pub unsafe fn reverseTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other flatten2DTensor:axis:name:)]
        pub unsafe fn flatten2DTensor_axis_name(
            &self,
            tensor: &MPSGraphTensor,
            axis: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other flatten2DTensor:axisTensor:name:)]
        pub unsafe fn flatten2DTensor_axisTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            axis_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other broadcastTensor:toShape:name:)]
        pub unsafe fn broadcastTensor_toShape_name(
            &self,
            tensor: &MPSGraphTensor,
            shape: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other broadcastTensor:toShapeTensor:name:)]
        pub unsafe fn broadcastTensor_toShapeTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            shape_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other shapeOfTensor:name:)]
        pub unsafe fn shapeOfTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other castTensor:toType:name:)]
        pub unsafe fn castTensor_toType_name(
            &self,
            tensor: &MPSGraphTensor,
            r#type: MPSDataType,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other reinterpretCastTensor:toType:name:)]
        pub unsafe fn reinterpretCastTensor_toType_name(
            &self,
            tensor: &MPSGraphTensor,
            r#type: MPSDataType,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other stackTensors:axis:name:)]
        pub unsafe fn stackTensors_axis_name(
            &self,
            input_tensors: &NSArray<MPSGraphTensor>,
            axis: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other splitTensor:splitSizes:axis:name:)]
        pub unsafe fn splitTensor_splitSizes_axis_name(
            &self,
            tensor: &MPSGraphTensor,
            split_sizes: &NSArray<NSNumber>,
            axis: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<NSArray<MPSGraphTensor>>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other splitTensor:splitSizesTensor:axis:name:)]
        pub unsafe fn splitTensor_splitSizesTensor_axis_name(
            &self,
            tensor: &MPSGraphTensor,
            split_sizes_tensor: &MPSGraphTensor,
            axis: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<NSArray<MPSGraphTensor>>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other splitTensor:numSplits:axis:name:)]
        pub unsafe fn splitTensor_numSplits_axis_name(
            &self,
            tensor: &MPSGraphTensor,
            num_splits: NSUInteger,
            axis: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<NSArray<MPSGraphTensor>>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other squeezeTensor:name:)]
        pub unsafe fn squeezeTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other squeezeTensor:axis:name:)]
        pub unsafe fn squeezeTensor_axis_name(
            &self,
            tensor: &MPSGraphTensor,
            axis: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other squeezeTensor:axes:name:)]
        pub unsafe fn squeezeTensor_axes_name(
            &self,
            tensor: &MPSGraphTensor,
            axes: &NSArray<NSNumber>,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other squeezeTensor:axesTensor:name:)]
        pub unsafe fn squeezeTensor_axesTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            axes_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other expandDimsOfTensor:axis:name:)]
        pub unsafe fn expandDimsOfTensor_axis_name(
            &self,
            tensor: &MPSGraphTensor,
            axis: NSInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other expandDimsOfTensor:axes:name:)]
        pub unsafe fn expandDimsOfTensor_axes_name(
            &self,
            tensor: &MPSGraphTensor,
            axes: &NSArray<NSNumber>,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other expandDimsOfTensor:axesTensor:name:)]
        pub unsafe fn expandDimsOfTensor_axesTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            axes_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other coordinateAlongAxis:withShape:name:)]
        pub unsafe fn coordinateAlongAxis_withShape_name(
            &self,
            axis: NSInteger,
            shape: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other coordinateAlongAxisTensor:withShape:name:)]
        pub unsafe fn coordinateAlongAxisTensor_withShape_name(
            &self,
            axis_tensor: &MPSGraphTensor,
            shape: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other coordinateAlongAxis:withShapeTensor:name:)]
        pub unsafe fn coordinateAlongAxis_withShapeTensor_name(
            &self,
            axis: NSInteger,
            shape_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other coordinateAlongAxisTensor:withShapeTensor:name:)]
        pub unsafe fn coordinateAlongAxisTensor_withShapeTensor_name(
            &self,
            axis_tensor: &MPSGraphTensor,
            shape_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;
    }
);
