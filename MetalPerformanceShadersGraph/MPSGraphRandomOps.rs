//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-metal-performance-shaders")]
use objc2_metal_performance_shaders::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphrandomdistribution?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSGraphRandomDistribution(pub u64);
impl MPSGraphRandomDistribution {
    #[doc(alias = "MPSGraphRandomDistributionUniform")]
    pub const Uniform: Self = Self(0);
    #[doc(alias = "MPSGraphRandomDistributionNormal")]
    pub const Normal: Self = Self(1);
    #[doc(alias = "MPSGraphRandomDistributionTruncatedNormal")]
    pub const TruncatedNormal: Self = Self(2);
}

unsafe impl Encode for MPSGraphRandomDistribution {
    const ENCODING: Encoding = u64::ENCODING;
}

unsafe impl RefEncode for MPSGraphRandomDistribution {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphrandomnormalsamplingmethod?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSGraphRandomNormalSamplingMethod(pub u64);
impl MPSGraphRandomNormalSamplingMethod {
    pub const MPSGraphRandomNormalSamplingInvCDF: Self = Self(0);
    pub const MPSGraphRandomNormalSamplingBoxMuller: Self = Self(1);
}

unsafe impl Encode for MPSGraphRandomNormalSamplingMethod {
    const ENCODING: Encoding = u64::ENCODING;
}

unsafe impl RefEncode for MPSGraphRandomNormalSamplingMethod {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphrandomopdescriptor?language=objc)
    #[unsafe(super(MPSGraphObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSGraphCore")]
    pub struct MPSGraphRandomOpDescriptor;
);

#[cfg(feature = "MPSGraphCore")]
unsafe impl NSCopying for MPSGraphRandomOpDescriptor {}

#[cfg(feature = "MPSGraphCore")]
unsafe impl CopyingHelper for MPSGraphRandomOpDescriptor {
    type Result = Self;
}

#[cfg(feature = "MPSGraphCore")]
unsafe impl NSObjectProtocol for MPSGraphRandomOpDescriptor {}

extern_methods!(
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphRandomOpDescriptor {
        #[method(distribution)]
        pub unsafe fn distribution(&self) -> MPSGraphRandomDistribution;

        #[method(setDistribution:)]
        pub unsafe fn setDistribution(&self, distribution: MPSGraphRandomDistribution);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        #[method(dataType)]
        pub unsafe fn dataType(&self) -> MPSDataType;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        #[method(setDataType:)]
        pub unsafe fn setDataType(&self, data_type: MPSDataType);

        #[method(min)]
        pub unsafe fn min(&self) -> c_float;

        #[method(setMin:)]
        pub unsafe fn setMin(&self, min: c_float);

        #[method(max)]
        pub unsafe fn max(&self) -> c_float;

        #[method(setMax:)]
        pub unsafe fn setMax(&self, max: c_float);

        #[method(minInteger)]
        pub unsafe fn minInteger(&self) -> NSInteger;

        #[method(setMinInteger:)]
        pub unsafe fn setMinInteger(&self, min_integer: NSInteger);

        #[method(maxInteger)]
        pub unsafe fn maxInteger(&self) -> NSInteger;

        #[method(setMaxInteger:)]
        pub unsafe fn setMaxInteger(&self, max_integer: NSInteger);

        #[method(mean)]
        pub unsafe fn mean(&self) -> c_float;

        #[method(setMean:)]
        pub unsafe fn setMean(&self, mean: c_float);

        #[method(standardDeviation)]
        pub unsafe fn standardDeviation(&self) -> c_float;

        #[method(setStandardDeviation:)]
        pub unsafe fn setStandardDeviation(&self, standard_deviation: c_float);

        #[method(samplingMethod)]
        pub unsafe fn samplingMethod(&self) -> MPSGraphRandomNormalSamplingMethod;

        #[method(setSamplingMethod:)]
        pub unsafe fn setSamplingMethod(&self, sampling_method: MPSGraphRandomNormalSamplingMethod);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        #[method_id(@__retain_semantics Other descriptorWithDistribution:dataType:)]
        pub unsafe fn descriptorWithDistribution_dataType(
            distribution: MPSGraphRandomDistribution,
            data_type: MPSDataType,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSGraphCore")]
    unsafe impl MPSGraphRandomOpDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// MPSGraphRandomOps
    #[cfg(all(feature = "MPSGraph", feature = "MPSGraphCore"))]
    unsafe impl MPSGraph {
        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomPhiloxStateTensorWithSeed:name:)]
        pub unsafe fn randomPhiloxStateTensorWithSeed_name(
            &self,
            seed: NSUInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomPhiloxStateTensorWithCounterLow:counterHigh:key:name:)]
        pub unsafe fn randomPhiloxStateTensorWithCounterLow_counterHigh_key_name(
            &self,
            counter_low: NSUInteger,
            counter_high: NSUInteger,
            key: NSUInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other randomTensorWithShape:descriptor:name:)]
        pub unsafe fn randomTensorWithShape_descriptor_name(
            &self,
            shape: &MPSShape,
            descriptor: &MPSGraphRandomOpDescriptor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomTensorWithShapeTensor:descriptor:name:)]
        pub unsafe fn randomTensorWithShapeTensor_descriptor_name(
            &self,
            shape_tensor: &MPSGraphTensor,
            descriptor: &MPSGraphRandomOpDescriptor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other randomTensorWithShape:descriptor:seed:name:)]
        pub unsafe fn randomTensorWithShape_descriptor_seed_name(
            &self,
            shape: &MPSShape,
            descriptor: &MPSGraphRandomOpDescriptor,
            seed: NSUInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomTensorWithShapeTensor:descriptor:seed:name:)]
        pub unsafe fn randomTensorWithShapeTensor_descriptor_seed_name(
            &self,
            shape_tensor: &MPSGraphTensor,
            descriptor: &MPSGraphRandomOpDescriptor,
            seed: NSUInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other randomTensorWithShape:descriptor:stateTensor:name:)]
        pub unsafe fn randomTensorWithShape_descriptor_stateTensor_name(
            &self,
            shape: &MPSShape,
            descriptor: &MPSGraphRandomOpDescriptor,
            state: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<NSArray<MPSGraphTensor>>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomTensorWithShapeTensor:descriptor:stateTensor:name:)]
        pub unsafe fn randomTensorWithShapeTensor_descriptor_stateTensor_name(
            &self,
            shape_tensor: &MPSGraphTensor,
            descriptor: &MPSGraphRandomOpDescriptor,
            state: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<NSArray<MPSGraphTensor>>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other randomUniformTensorWithShape:name:)]
        pub unsafe fn randomUniformTensorWithShape_name(
            &self,
            shape: &MPSShape,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomUniformTensorWithShapeTensor:name:)]
        pub unsafe fn randomUniformTensorWithShapeTensor_name(
            &self,
            shape_tensor: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other randomUniformTensorWithShape:seed:name:)]
        pub unsafe fn randomUniformTensorWithShape_seed_name(
            &self,
            shape: &MPSShape,
            seed: NSUInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomUniformTensorWithShapeTensor:seed:name:)]
        pub unsafe fn randomUniformTensorWithShapeTensor_seed_name(
            &self,
            shape_tensor: &MPSGraphTensor,
            seed: NSUInteger,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(
            feature = "MPSGraphTensor",
            feature = "objc2-metal-performance-shaders"
        ))]
        #[method_id(@__retain_semantics Other randomUniformTensorWithShape:stateTensor:name:)]
        pub unsafe fn randomUniformTensorWithShape_stateTensor_name(
            &self,
            shape: &MPSShape,
            state: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<NSArray<MPSGraphTensor>>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other randomUniformTensorWithShapeTensor:stateTensor:name:)]
        pub unsafe fn randomUniformTensorWithShapeTensor_stateTensor_name(
            &self,
            shape_tensor: &MPSGraphTensor,
            state: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<NSArray<MPSGraphTensor>>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other dropoutTensor:rate:name:)]
        pub unsafe fn dropoutTensor_rate_name(
            &self,
            tensor: &MPSGraphTensor,
            rate: c_double,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(feature = "MPSGraphTensor")]
        #[method_id(@__retain_semantics Other dropoutTensor:rateTensor:name:)]
        pub unsafe fn dropoutTensor_rateTensor_name(
            &self,
            tensor: &MPSGraphTensor,
            rate: &MPSGraphTensor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;
    }
);
