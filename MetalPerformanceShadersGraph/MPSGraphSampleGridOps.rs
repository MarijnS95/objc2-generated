//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_methods!(
    /// MPSGraphSampleGrid
    #[cfg(all(feature = "MPSGraph", feature = "MPSGraphCore"))]
    unsafe impl MPSGraph {
        #[cfg(all(feature = "MPSGraphResizeOps", feature = "MPSGraphTensor"))]
        /// Samples a tensor using the coordinates provided.
        ///
        /// Given an input tensor (N, H1, W1, C) or (N, C, H1, W1) and coordinates tensor (N, H2, W2, 2) this operation outputs a tensor of
        /// size (N, H2, W2, C) or (N, C, H2, W2) by sampling the input tensor at the coordinates provided by the coordinates tensor.
        ///
        /// - Parameters:
        /// - source: Tensor containing source data
        /// - coordinates: a tensor (N, Hout, Wout, 2) that contains the coordinates of the samples in the source tensor that constitute the output tensor.
        /// - layout: Specifies what layout the provided tensor is in. The returned tensor will follow the same layout. Valid layouts are NHWC and NCHW.
        /// - normalizeCoordinates: If true, coordinates are within [-1, 1] x [-1, 1] otherwise they are in pixels in the input tensor.
        /// - relativeCoordinates: If true, coordinates are relative to the postion of the pixel in the output tensor and scaled back to the input tensor size
        /// - alignCorners: If true, coordinate extrema are equal to the center of edge pixels, otherwise extrema are equal to outer edge of edge pixels
        /// - paddingMode: determines how samples outside the inputTensor are evaluated (only constant, reflect, symmetric and clampToEdge are supported)
        /// - samplingMode: Can be either MPSGraphResizeNearest or MPSGraphResizeBilinear. Nearest sampling will use roundPreferCeil.
        /// - constantValue: If paddingMode is MPSGraphPaddingModeConstant, then this constant is used for samples outside the input tensor.
        /// - name: The name for the operation.
        /// - Returns: A valid MPSGraphTensor object
        #[method(sampleGridWithSourceTensor:coordinateTensor:layout:normalizeCoordinates:relativeCoordinates:alignCorners:paddingMode:samplingMode:constantValue:name:)]
        #[unsafe(method_family = none)]
        pub unsafe fn sampleGridWithSourceTensor_coordinateTensor_layout_normalizeCoordinates_relativeCoordinates_alignCorners_paddingMode_samplingMode_constantValue_name(
            &self,
            source: &MPSGraphTensor,
            coordinates: &MPSGraphTensor,
            layout: MPSGraphTensorNamedDataLayout,
            normalize_coordinates: bool,
            relative_coordinates: bool,
            align_corners: bool,
            padding_mode: MPSGraphPaddingMode,
            sampling_mode: MPSGraphResizeMode,
            constant_value: c_double,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;

        #[cfg(all(feature = "MPSGraphResizeOps", feature = "MPSGraphTensor"))]
        /// Samples a tensor using the coordinates provided, using nearest neighbor sampling with specified rounding mode.
        ///
        /// Given an input tensor (N, H1, W1, C) or (N, C, H1, W1) and coordinates tensor (N, H2, W2, 2) this operation outputs a tensor of
        /// size (N, H2, W2, C) or (N, C, H2, W2) by sampling the input tensor at the coordinates provided by the coordinates tensor.
        ///
        /// - Parameters:
        /// - source: Tensor containing source data
        /// - coordinates: a tensor (N, Hout, Wout, 2) that contains the coordinates of the samples in the source tensor that constitute the output tensor.
        /// - layout: Specifies what layout the provided tensor is in. The returned tensor will follow the same layout. Valid layouts are NHWC and NCHW.
        /// - normalizeCoordinates: If true, coordinates are within [-1, 1] x [-1, 1] otherwise they are in pixels in the input tensor.
        /// - relativeCoordinates: If true, coordinates are relative to the postion of the pixel in the output tensor and scaled back to the input tensor size
        /// - alignCorners: If true, coordinate extrema are equal to the center of edge pixels, otherwise extrema are equal to outer edge of edge pixels
        /// - paddingMode: determines how samples outside the inputTensor are evaluated (only constant, reflect, symmetric and clampToEdge are supported)
        /// - nearestRoundingMode: The rounding mode to use for determining the nearest neighbor. Valid modes are roundPreferCeil, roundPreferFloor, ceil, and floor.
        /// - constantValue: If paddingMode is MPSGraphPaddingModeConstant, then this constant is used for samples outside the input tensor.
        /// - name: The name for the operation.
        /// - Returns: A valid MPSGraphTensor object
        #[method(sampleGridWithSourceTensor:coordinateTensor:layout:normalizeCoordinates:relativeCoordinates:alignCorners:paddingMode:nearestRoundingMode:constantValue:name:)]
        #[unsafe(method_family = none)]
        pub unsafe fn sampleGridWithSourceTensor_coordinateTensor_layout_normalizeCoordinates_relativeCoordinates_alignCorners_paddingMode_nearestRoundingMode_constantValue_name(
            &self,
            source: &MPSGraphTensor,
            coordinates: &MPSGraphTensor,
            layout: MPSGraphTensorNamedDataLayout,
            normalize_coordinates: bool,
            relative_coordinates: bool,
            align_corners: bool,
            padding_mode: MPSGraphPaddingMode,
            nearest_rounding_mode: MPSGraphResizeNearestRoundingMode,
            constant_value: c_double,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;
    }
);
