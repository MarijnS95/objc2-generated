//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/browserenginekit/begesturetype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct BEGestureType(pub NSInteger);
impl BEGestureType {
    #[doc(alias = "BEGestureTypeLoupe")]
    pub const Loupe: Self = Self(0);
    #[doc(alias = "BEGestureTypeOneFingerTap")]
    pub const OneFingerTap: Self = Self(1);
    #[doc(alias = "BEGestureTypeDoubleTapAndHold")]
    pub const DoubleTapAndHold: Self = Self(2);
    #[doc(alias = "BEGestureTypeDoubleTap")]
    pub const DoubleTap: Self = Self(3);
    #[doc(alias = "BEGestureTypeOneFingerDoubleTap")]
    pub const OneFingerDoubleTap: Self = Self(8);
    #[doc(alias = "BEGestureTypeOneFingerTripleTap")]
    pub const OneFingerTripleTap: Self = Self(9);
    #[doc(alias = "BEGestureTypeTwoFingerSingleTap")]
    pub const TwoFingerSingleTap: Self = Self(10);
    #[doc(alias = "BEGestureTypeTwoFingerRangedSelectGesture")]
    pub const TwoFingerRangedSelectGesture: Self = Self(11);
    #[doc(alias = "BEGestureTypeIMPhraseBoundaryDrag")]
    pub const IMPhraseBoundaryDrag: Self = Self(14);
    #[doc(alias = "BEGestureTypeForceTouch")]
    pub const ForceTouch: Self = Self(15);
}

unsafe impl Encode for BEGestureType {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for BEGestureType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/browserenginekit/beselectiontouchphase?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct BESelectionTouchPhase(pub NSInteger);
impl BESelectionTouchPhase {
    #[doc(alias = "BESelectionTouchPhaseStarted")]
    pub const Started: Self = Self(0);
    #[doc(alias = "BESelectionTouchPhaseMoved")]
    pub const Moved: Self = Self(1);
    #[doc(alias = "BESelectionTouchPhaseEnded")]
    pub const Ended: Self = Self(2);
    #[doc(alias = "BESelectionTouchPhaseEndedMovingForward")]
    pub const EndedMovingForward: Self = Self(3);
    #[doc(alias = "BESelectionTouchPhaseEndedMovingBackward")]
    pub const EndedMovingBackward: Self = Self(4);
    #[doc(alias = "BESelectionTouchPhaseEndedNotMoving")]
    pub const EndedNotMoving: Self = Self(5);
}

unsafe impl Encode for BESelectionTouchPhase {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for BESelectionTouchPhase {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/browserenginekit/beselectionflags?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct BESelectionFlags(pub NSUInteger);
bitflags::bitflags! {
    impl BESelectionFlags: NSUInteger {
        #[doc(alias = "BESelectionFlagsNone")]
        const SelectionFlagsNone = 0;
        #[doc(alias = "BEWordIsNearTap")]
        const WordIsNearTap = 1<<0;
        #[doc(alias = "BESelectionFlipped")]
        const SelectionFlipped = 1<<1;
        #[doc(alias = "BEPhraseBoundaryChanged")]
        const PhraseBoundaryChanged = 1<<2;
    }
}

unsafe impl Encode for BESelectionFlags {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for BESelectionFlags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
