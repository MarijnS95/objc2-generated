//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::*;

/// Option set indicating the type of planes to detect.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/arkit/arplanedetection?language=objc)
// NS_OPTIONS
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ARPlaneDetection(pub NSUInteger);
#[cfg(feature = "objc2")]
bitflags::bitflags! {
    impl ARPlaneDetection: NSUInteger {
/// No plane detection is run.
        #[doc(alias = "ARPlaneDetectionNone")]
        const None = 0;
/// Plane detection determines horizontal planes in the scene.
        #[doc(alias = "ARPlaneDetectionHorizontal")]
        const Horizontal = 1<<0;
/// Plane detection determines vertical planes in the scene.
        #[doc(alias = "ARPlaneDetectionVertical")]
        const Vertical = 1<<1;
    }
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ARPlaneDetection {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ARPlaneDetection {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
