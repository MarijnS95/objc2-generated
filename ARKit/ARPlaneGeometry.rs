//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-foundation")]
use objc2_foundation::*;

use crate::*;

#[cfg(feature = "objc2")]
extern_class!(
    /// Object representing the geometry of a plane.
    ///
    /// The plane geometry will have a growing number of triangles
    /// and vertices updated from frame to frame.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/arkit/arplanegeometry?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    pub struct ARPlaneGeometry;
);

#[cfg(feature = "objc2")]
unsafe impl Send for ARPlaneGeometry {}

#[cfg(feature = "objc2")]
unsafe impl Sync for ARPlaneGeometry {}

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSCoding for ARPlaneGeometry {}

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for ARPlaneGeometry {}

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSSecureCoding for ARPlaneGeometry {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl ARPlaneGeometry {
        /// The number of mesh vertices of the geometry.
        #[method(vertexCount)]
        pub unsafe fn vertexCount(&self) -> NSUInteger;

        /// The number of texture coordinates of the geometry.
        #[method(textureCoordinateCount)]
        pub unsafe fn textureCoordinateCount(&self) -> NSUInteger;

        /// The number of triangles of the geometry.
        #[method(triangleCount)]
        pub unsafe fn triangleCount(&self) -> NSUInteger;

        /// The triangle indices of the geometry.
        #[method(triangleIndices)]
        pub unsafe fn triangleIndices(&self) -> NonNull<i16>;

        /// The number of boundary vertices of the geometry.
        #[method(boundaryVertexCount)]
        pub unsafe fn boundaryVertexCount(&self) -> NSUInteger;

        /// Unavailable
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
