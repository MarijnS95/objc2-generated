//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-video")]
use objc2_core_video::*;

use crate::*;

/// Constants indicating the confidence level of per-pixel depth data.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/arkit/arconfidencelevel?language=objc)
// NS_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ARConfidenceLevel(pub NSInteger);
#[cfg(feature = "objc2")]
impl ARConfidenceLevel {
    #[doc(alias = "ARConfidenceLevelLow")]
    pub const Low: Self = Self(0);
    #[doc(alias = "ARConfidenceLevelMedium")]
    pub const Medium: Self = Self(1);
    #[doc(alias = "ARConfidenceLevelHigh")]
    pub const High: Self = Self(2);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ARConfidenceLevel {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ARConfidenceLevel {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

#[cfg(feature = "objc2")]
extern_class!(
    /// A container for depth data and its associated confidence.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/arkit/ardepthdata?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    pub struct ARDepthData;
);

#[cfg(feature = "objc2")]
unsafe impl Send for ARDepthData {}

#[cfg(feature = "objc2")]
unsafe impl Sync for ARDepthData {}

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for ARDepthData {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl ARDepthData {
        #[cfg(feature = "objc2-core-video")]
        /// A pixel buffer that contains per-pixel depth data (in meters).
        #[method_id(@__retain_semantics Other depthMap)]
        pub unsafe fn depthMap(&self) -> Retained<CVPixelBuffer>;

        #[cfg(feature = "objc2-core-video")]
        /// A pixel buffer containing the confidence level for each depth value in the `depthMap`.
        ///
        /// See: ARConfidenceLevel
        #[method_id(@__retain_semantics Other confidenceMap)]
        pub unsafe fn confidenceMap(&self) -> Option<Retained<CVPixelBuffer>>;
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl ARDepthData {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
