//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-av-foundation")]
use objc2_av_foundation::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-foundation")]
use objc2_foundation::*;

use crate::*;

#[cfg(feature = "objc2")]
extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/arkit/arvideoformat?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    pub struct ARVideoFormat;
);

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSCopying for ARVideoFormat {}

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl CopyingHelper for ARVideoFormat {
    type Result = Self;
}

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for ARVideoFormat {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl ARVideoFormat {
        #[cfg(feature = "objc2-av-foundation")]
        /// Indicates the physical position of an AVCaptureDevice's hardware on the system.
        #[method(captureDevicePosition)]
        pub unsafe fn captureDevicePosition(&self) -> AVCaptureDevicePosition;

        #[cfg(all(feature = "objc2-av-foundation", feature = "objc2-foundation"))]
        /// Indicates the type of AVCaptureDevice.
        #[method_id(@__retain_semantics Other captureDeviceType)]
        pub unsafe fn captureDeviceType(&self) -> Retained<AVCaptureDeviceType>;

        #[cfg(feature = "objc2-core-foundation")]
        /// Image resolution.
        #[method(imageResolution)]
        pub unsafe fn imageResolution(&self) -> CGSize;

        /// Frame rate.
        #[method(framesPerSecond)]
        pub unsafe fn framesPerSecond(&self) -> NSInteger;

        /// Indicates if the video format is recommended for capturing high resolution frames.
        #[method(isRecommendedForHighResolutionFrameCapturing)]
        pub unsafe fn isRecommendedForHighResolutionFrameCapturing(&self) -> bool;

        /// Indicates if the video format supports high dynamic range (HDR) streaming.
        #[method(isVideoHDRSupported)]
        pub unsafe fn isVideoHDRSupported(&self) -> bool;

        /// Unavailable
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
