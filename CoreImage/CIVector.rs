//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/civector?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIVector;
);

unsafe impl NSCoding for CIVector {}

unsafe impl NSCopying for CIVector {}

unsafe impl CopyingHelper for CIVector {
    type Result = Self;
}

unsafe impl NSObjectProtocol for CIVector {}

unsafe impl NSSecureCoding for CIVector {}

extern_methods!(
    unsafe impl CIVector {
        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithValues:count:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithValues_count(
            values: NonNull<CGFloat>,
            count: usize,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithX:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithX(x: CGFloat) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithX:Y:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithX_Y(x: CGFloat, y: CGFloat) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithX:Y:Z:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithX_Y_Z(x: CGFloat, y: CGFloat, z: CGFloat) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithX:Y:Z:W:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithX_Y_Z_W(
            x: CGFloat,
            y: CGFloat,
            z: CGFloat,
            w: CGFloat,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithCGPoint:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithCGPoint(p: CGPoint) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithCGRect:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithCGRect(r: CGRect) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(vectorWithCGAffineTransform:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithCGAffineTransform(t: CGAffineTransform) -> Retained<Self>;

        #[method(vectorWithString:)]
        #[unsafe(method_family = none)]
        pub unsafe fn vectorWithString(representation: &NSString) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithValues:count:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithValues_count(
            this: Allocated<Self>,
            values: NonNull<CGFloat>,
            count: usize,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithX:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithX(this: Allocated<Self>, x: CGFloat) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithX:Y:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithX_Y(this: Allocated<Self>, x: CGFloat, y: CGFloat) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithX:Y:Z:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithX_Y_Z(
            this: Allocated<Self>,
            x: CGFloat,
            y: CGFloat,
            z: CGFloat,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithX:Y:Z:W:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithX_Y_Z_W(
            this: Allocated<Self>,
            x: CGFloat,
            y: CGFloat,
            z: CGFloat,
            w: CGFloat,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithCGPoint:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCGPoint(this: Allocated<Self>, p: CGPoint) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithCGRect:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCGRect(this: Allocated<Self>, r: CGRect) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(initWithCGAffineTransform:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCGAffineTransform(
            this: Allocated<Self>,
            r: CGAffineTransform,
        ) -> Retained<Self>;

        #[method(initWithString:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithString(
            this: Allocated<Self>,
            representation: &NSString,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(valueAtIndex:)]
        #[unsafe(method_family = none)]
        pub unsafe fn valueAtIndex(&self, index: usize) -> CGFloat;

        #[method(count)]
        #[unsafe(method_family = none)]
        pub unsafe fn count(&self) -> usize;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(X)]
        #[unsafe(method_family = none)]
        pub unsafe fn X(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(Y)]
        #[unsafe(method_family = none)]
        pub unsafe fn Y(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(Z)]
        #[unsafe(method_family = none)]
        pub unsafe fn Z(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(W)]
        #[unsafe(method_family = none)]
        pub unsafe fn W(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(CGPointValue)]
        #[unsafe(method_family = none)]
        pub unsafe fn CGPointValue(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(CGRectValue)]
        #[unsafe(method_family = none)]
        pub unsafe fn CGRectValue(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(CGAffineTransformValue)]
        #[unsafe(method_family = none)]
        pub unsafe fn CGAffineTransformValue(&self) -> CGAffineTransform;

        #[method(stringRepresentation)]
        #[unsafe(method_family = none)]
        pub unsafe fn stringRepresentation(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CIVector {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
