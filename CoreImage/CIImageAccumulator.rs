//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/ciimageaccumulator?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIImageAccumulator;
);

unsafe impl NSObjectProtocol for CIImageAccumulator {}

extern_methods!(
    unsafe impl CIImageAccumulator {
        #[cfg(all(feature = "CIImage", feature = "objc2-core-foundation"))]
        #[unsafe(method_family(none))]
        #[method_id(imageAccumulatorWithExtent:format:)]
        pub unsafe fn imageAccumulatorWithExtent_format(
            extent: CGRect,
            format: CIFormat,
        ) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "CIImage",
            feature = "objc2-core-foundation",
            feature = "objc2-core-graphics"
        ))]
        #[unsafe(method_family(none))]
        #[method_id(imageAccumulatorWithExtent:format:colorSpace:)]
        pub unsafe fn imageAccumulatorWithExtent_format_colorSpace(
            extent: CGRect,
            format: CIFormat,
            color_space: &CGColorSpace,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "CIImage", feature = "objc2-core-foundation"))]
        #[unsafe(method_family(init))]
        #[method_id(initWithExtent:format:)]
        pub unsafe fn initWithExtent_format(
            this: Allocated<Self>,
            extent: CGRect,
            format: CIFormat,
        ) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "CIImage",
            feature = "objc2-core-foundation",
            feature = "objc2-core-graphics"
        ))]
        #[unsafe(method_family(init))]
        #[method_id(initWithExtent:format:colorSpace:)]
        pub unsafe fn initWithExtent_format_colorSpace(
            this: Allocated<Self>,
            extent: CGRect,
            format: CIFormat,
            color_space: &CGColorSpace,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(extent)]
        pub unsafe fn extent(&self) -> CGRect;

        #[cfg(feature = "CIImage")]
        #[method(format)]
        pub unsafe fn format(&self) -> CIFormat;

        #[cfg(feature = "CIImage")]
        #[unsafe(method_family(none))]
        #[method_id(image)]
        pub unsafe fn image(&self) -> Retained<CIImage>;

        #[cfg(feature = "CIImage")]
        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: &CIImage);

        #[cfg(all(feature = "CIImage", feature = "objc2-core-foundation"))]
        #[method(setImage:dirtyRect:)]
        pub unsafe fn setImage_dirtyRect(&self, image: &CIImage, dirty_rect: CGRect);

        #[method(clear)]
        pub unsafe fn clear(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CIImageAccumulator {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
