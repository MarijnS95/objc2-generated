//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/cicolor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIColor;
);

unsafe impl NSCoding for CIColor {}

unsafe impl NSCopying for CIColor {}

unsafe impl CopyingHelper for CIColor {
    type Result = Self;
}

unsafe impl NSObjectProtocol for CIColor {}

unsafe impl NSSecureCoding for CIColor {}

extern_methods!(
    unsafe impl CIColor {
        #[cfg(feature = "objc2-core-graphics")]
        #[unsafe(method_family(none))]
        #[method_id(colorWithCGColor:)]
        pub unsafe fn colorWithCGColor(c: &CGColor) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method_family(none))]
        #[method_id(colorWithRed:green:blue:alpha:)]
        pub unsafe fn colorWithRed_green_blue_alpha(
            r: CGFloat,
            g: CGFloat,
            b: CGFloat,
            a: CGFloat,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method_family(none))]
        #[method_id(colorWithRed:green:blue:)]
        pub unsafe fn colorWithRed_green_blue(r: CGFloat, g: CGFloat, b: CGFloat)
            -> Retained<Self>;

        #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
        #[unsafe(method_family(none))]
        #[method_id(colorWithRed:green:blue:alpha:colorSpace:)]
        pub unsafe fn colorWithRed_green_blue_alpha_colorSpace(
            r: CGFloat,
            g: CGFloat,
            b: CGFloat,
            a: CGFloat,
            color_space: &CGColorSpace,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
        #[unsafe(method_family(none))]
        #[method_id(colorWithRed:green:blue:colorSpace:)]
        pub unsafe fn colorWithRed_green_blue_colorSpace(
            r: CGFloat,
            g: CGFloat,
            b: CGFloat,
            color_space: &CGColorSpace,
        ) -> Option<Retained<Self>>;

        #[unsafe(method_family(none))]
        #[method_id(colorWithString:)]
        pub unsafe fn colorWithString(representation: &NSString) -> Retained<Self>;

        #[cfg(feature = "objc2-core-graphics")]
        #[unsafe(method_family(init))]
        #[method_id(initWithCGColor:)]
        pub unsafe fn initWithCGColor(this: Allocated<Self>, c: &CGColor) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method_family(init))]
        #[method_id(initWithRed:green:blue:alpha:)]
        pub unsafe fn initWithRed_green_blue_alpha(
            this: Allocated<Self>,
            r: CGFloat,
            g: CGFloat,
            b: CGFloat,
            a: CGFloat,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method_family(init))]
        #[method_id(initWithRed:green:blue:)]
        pub unsafe fn initWithRed_green_blue(
            this: Allocated<Self>,
            r: CGFloat,
            g: CGFloat,
            b: CGFloat,
        ) -> Retained<Self>;

        #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
        #[unsafe(method_family(init))]
        #[method_id(initWithRed:green:blue:alpha:colorSpace:)]
        pub unsafe fn initWithRed_green_blue_alpha_colorSpace(
            this: Allocated<Self>,
            r: CGFloat,
            g: CGFloat,
            b: CGFloat,
            a: CGFloat,
            color_space: &CGColorSpace,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
        #[unsafe(method_family(init))]
        #[method_id(initWithRed:green:blue:colorSpace:)]
        pub unsafe fn initWithRed_green_blue_colorSpace(
            this: Allocated<Self>,
            r: CGFloat,
            g: CGFloat,
            b: CGFloat,
            color_space: &CGColorSpace,
        ) -> Option<Retained<Self>>;

        #[method(numberOfComponents)]
        pub unsafe fn numberOfComponents(&self) -> usize;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(components)]
        pub unsafe fn components(&self) -> NonNull<CGFloat>;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(alpha)]
        pub unsafe fn alpha(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(red)]
        pub unsafe fn red(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(green)]
        pub unsafe fn green(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(blue)]
        pub unsafe fn blue(&self) -> CGFloat;

        #[unsafe(method_family(none))]
        #[method_id(stringRepresentation)]
        pub unsafe fn stringRepresentation(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(blackColor)]
        pub unsafe fn blackColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(whiteColor)]
        pub unsafe fn whiteColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(grayColor)]
        pub unsafe fn grayColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(redColor)]
        pub unsafe fn redColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(greenColor)]
        pub unsafe fn greenColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(blueColor)]
        pub unsafe fn blueColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(cyanColor)]
        pub unsafe fn cyanColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(magentaColor)]
        pub unsafe fn magentaColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(yellowColor)]
        pub unsafe fn yellowColor() -> Retained<CIColor>;

        #[unsafe(method_family(none))]
        #[method_id(clearColor)]
        pub unsafe fn clearColor() -> Retained<CIColor>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CIColor {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
