//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coreimage/cikernelroicallback?language=objc)
#[cfg(all(feature = "block2", feature = "objc2-core-foundation"))]
pub type CIKernelROICallback = *mut block2::Block<dyn Fn(c_int, CGRect) -> CGRect>;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/cikernel?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIKernel;
);

unsafe impl NSObjectProtocol for CIKernel {}

extern_methods!(
    unsafe impl CIKernel {
        #[deprecated = "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)"]
        #[unsafe(method_family(none))]
        #[method_id(kernelsWithString:)]
        pub unsafe fn kernelsWithString(string: &NSString) -> Option<Retained<NSArray<CIKernel>>>;

        #[unsafe(method_family(none))]
        #[method_id(kernelsWithMetalString:error:_)]
        pub unsafe fn kernelsWithMetalString_error(
            source: &NSString,
        ) -> Result<Retained<NSArray<CIKernel>>, Retained<NSError>>;

        #[deprecated = "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)"]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithString:)]
        pub unsafe fn kernelWithString(string: &NSString) -> Option<Retained<Self>>;

        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_error(
            name: &NSString,
            data: &NSData,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[cfg(feature = "CIImage")]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_outputPixelFormat_error(
            name: &NSString,
            data: &NSData,
            format: CIFormat,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[unsafe(method_family(none))]
        #[method_id(kernelNamesFromMetalLibraryData:)]
        pub unsafe fn kernelNamesFromMetalLibraryData(data: &NSData)
            -> Retained<NSArray<NSString>>;

        #[unsafe(method_family(none))]
        #[method_id(name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[method(setROISelector:)]
        pub unsafe fn setROISelector(&self, method: Sel);

        #[cfg(all(
            feature = "CIImage",
            feature = "block2",
            feature = "objc2-core-foundation"
        ))]
        #[unsafe(method_family(none))]
        #[method_id(applyWithExtent:roiCallback:arguments:)]
        pub unsafe fn applyWithExtent_roiCallback_arguments(
            &self,
            extent: CGRect,
            callback: CIKernelROICallback,
            args: &NSArray<AnyObject>,
        ) -> Option<Retained<CIImage>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CIKernel {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/cicolorkernel?language=objc)
    #[unsafe(super(CIKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIColorKernel;
);

unsafe impl NSObjectProtocol for CIColorKernel {}

extern_methods!(
    unsafe impl CIColorKernel {
        #[deprecated = "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)"]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithString:)]
        pub unsafe fn kernelWithString(string: &NSString) -> Option<Retained<Self>>;

        #[cfg(all(feature = "CIImage", feature = "objc2-core-foundation"))]
        #[unsafe(method_family(none))]
        #[method_id(applyWithExtent:arguments:)]
        pub unsafe fn applyWithExtent_arguments(
            &self,
            extent: CGRect,
            args: &NSArray<AnyObject>,
        ) -> Option<Retained<CIImage>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CIKernel`
    unsafe impl CIColorKernel {
        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_error(
            name: &NSString,
            data: &NSData,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[cfg(feature = "CIImage")]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_outputPixelFormat_error(
            name: &NSString,
            data: &NSData,
            format: CIFormat,
        ) -> Result<Retained<Self>, Retained<NSError>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CIColorKernel {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/ciwarpkernel?language=objc)
    #[unsafe(super(CIKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIWarpKernel;
);

unsafe impl NSObjectProtocol for CIWarpKernel {}

extern_methods!(
    unsafe impl CIWarpKernel {
        #[deprecated = "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)"]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithString:)]
        pub unsafe fn kernelWithString(string: &NSString) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "CIImage",
            feature = "block2",
            feature = "objc2-core-foundation"
        ))]
        #[unsafe(method_family(none))]
        #[method_id(applyWithExtent:roiCallback:inputImage:arguments:)]
        pub unsafe fn applyWithExtent_roiCallback_inputImage_arguments(
            &self,
            extent: CGRect,
            callback: CIKernelROICallback,
            image: &CIImage,
            args: &NSArray<AnyObject>,
        ) -> Option<Retained<CIImage>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CIKernel`
    unsafe impl CIWarpKernel {
        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_error(
            name: &NSString,
            data: &NSData,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[cfg(feature = "CIImage")]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_outputPixelFormat_error(
            name: &NSString,
            data: &NSData,
            format: CIFormat,
        ) -> Result<Retained<Self>, Retained<NSError>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CIWarpKernel {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/ciblendkernel?language=objc)
    #[unsafe(super(CIColorKernel, CIKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIBlendKernel;
);

unsafe impl NSObjectProtocol for CIBlendKernel {}

extern_methods!(
    unsafe impl CIBlendKernel {
        #[deprecated = "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)"]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithString:)]
        pub unsafe fn kernelWithString(string: &NSString) -> Option<Retained<Self>>;

        #[cfg(feature = "CIImage")]
        #[unsafe(method_family(none))]
        #[method_id(applyWithForeground:background:)]
        pub unsafe fn applyWithForeground_background(
            &self,
            foreground: &CIImage,
            background: &CIImage,
        ) -> Option<Retained<CIImage>>;

        #[cfg(all(feature = "CIImage", feature = "objc2-core-graphics"))]
        #[unsafe(method_family(none))]
        #[method_id(applyWithForeground:background:colorSpace:)]
        pub unsafe fn applyWithForeground_background_colorSpace(
            &self,
            foreground: &CIImage,
            background: &CIImage,
            color_space: &CGColorSpace,
        ) -> Option<Retained<CIImage>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CIKernel`
    unsafe impl CIBlendKernel {
        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_error(
            name: &NSString,
            data: &NSData,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[cfg(feature = "CIImage")]
        #[unsafe(method_family(none))]
        #[method_id(kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:_)]
        pub unsafe fn kernelWithFunctionName_fromMetalLibraryData_outputPixelFormat_error(
            name: &NSString,
            data: &NSData,
            format: CIFormat,
        ) -> Result<Retained<Self>, Retained<NSError>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CIBlendKernel {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// BuiltIn
    unsafe impl CIBlendKernel {
        #[unsafe(method_family(none))]
        #[method_id(componentAdd)]
        pub unsafe fn componentAdd() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(componentMultiply)]
        pub unsafe fn componentMultiply() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(componentMin)]
        pub unsafe fn componentMin() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(componentMax)]
        pub unsafe fn componentMax() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(clear)]
        pub unsafe fn clear() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(source)]
        pub unsafe fn source() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(destination)]
        pub unsafe fn destination() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(sourceOver)]
        pub unsafe fn sourceOver() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(destinationOver)]
        pub unsafe fn destinationOver() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(sourceIn)]
        pub unsafe fn sourceIn() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(destinationIn)]
        pub unsafe fn destinationIn() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(sourceOut)]
        pub unsafe fn sourceOut() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(destinationOut)]
        pub unsafe fn destinationOut() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(sourceAtop)]
        pub unsafe fn sourceAtop() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(destinationAtop)]
        pub unsafe fn destinationAtop() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(exclusiveOr)]
        pub unsafe fn exclusiveOr() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(multiply)]
        pub unsafe fn multiply() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(screen)]
        pub unsafe fn screen() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(overlay)]
        pub unsafe fn overlay() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(darken)]
        pub unsafe fn darken() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(lighten)]
        pub unsafe fn lighten() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(colorDodge)]
        pub unsafe fn colorDodge() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(colorBurn)]
        pub unsafe fn colorBurn() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(hardLight)]
        pub unsafe fn hardLight() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(softLight)]
        pub unsafe fn softLight() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(difference)]
        pub unsafe fn difference() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(exclusion)]
        pub unsafe fn exclusion() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(hue)]
        pub unsafe fn hue() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(saturation)]
        pub unsafe fn saturation() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(color)]
        pub unsafe fn color() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(luminosity)]
        pub unsafe fn luminosity() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(subtract)]
        pub unsafe fn subtract() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(divide)]
        pub unsafe fn divide() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(linearBurn)]
        pub unsafe fn linearBurn() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(linearDodge)]
        pub unsafe fn linearDodge() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(vividLight)]
        pub unsafe fn vividLight() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(linearLight)]
        pub unsafe fn linearLight() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(pinLight)]
        pub unsafe fn pinLight() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(hardMix)]
        pub unsafe fn hardMix() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(darkerColor)]
        pub unsafe fn darkerColor() -> Retained<CIBlendKernel>;

        #[unsafe(method_family(none))]
        #[method_id(lighterColor)]
        pub unsafe fn lighterColor() -> Retained<CIBlendKernel>;
    }
);
