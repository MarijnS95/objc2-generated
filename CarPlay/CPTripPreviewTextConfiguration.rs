//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/carplay/cptrippreviewtextconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CPTripPreviewTextConfiguration;
);

extern_conformance!(
    unsafe impl NSCoding for CPTripPreviewTextConfiguration {}
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CPTripPreviewTextConfiguration {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for CPTripPreviewTextConfiguration {}
);

impl CPTripPreviewTextConfiguration {
    extern_methods!(
        #[unsafe(method(initWithStartButtonTitle:additionalRoutesButtonTitle:overviewButtonTitle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithStartButtonTitle_additionalRoutesButtonTitle_overviewButtonTitle(
            this: Allocated<Self>,
            start_button_title: Option<&NSString>,
            additional_routes_button_title: Option<&NSString>,
            overview_button_title: Option<&NSString>,
        ) -> Retained<Self>;

        #[unsafe(method(startButtonTitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn startButtonTitle(&self) -> Option<Retained<NSString>>;

        #[unsafe(method(additionalRoutesButtonTitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn additionalRoutesButtonTitle(&self) -> Option<Retained<NSString>>;

        #[unsafe(method(overviewButtonTitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn overviewButtonTitle(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl CPTripPreviewTextConfiguration {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
