//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    /// `CPListTemplateItem`describes common properties of list items that can be displayed
    /// in a
    /// `CPListTemplate.`
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/carplay/cplisttemplateitem?language=objc)
    pub unsafe trait CPListTemplateItem: NSObjectProtocol {
        /// The primary text shown in a cell displaying this list item.
        #[unsafe(method(text))]
        #[unsafe(method_family = none)]
        unsafe fn text(&self) -> Option<Retained<NSString>>;

        /// Any custom user info related to this item.
        #[unsafe(method(userInfo))]
        #[unsafe(method_family = none)]
        unsafe fn userInfo(&self) -> Option<Retained<AnyObject>>;

        /// Setter for [`userInfo`][Self::userInfo].
        #[unsafe(method(setUserInfo:))]
        #[unsafe(method_family = none)]
        unsafe fn setUserInfo(&self, user_info: Option<&AnyObject>);

        /// A Boolean value indicating whether the button is enabled.
        ///
        ///
        /// Set the value of this property to
        /// `YES`to enable the button or
        /// `NO`to disable it. The default value of this property is
        /// `YES.`
        #[unsafe(method(isEnabled))]
        #[unsafe(method_family = none)]
        unsafe fn isEnabled(&self) -> bool;

        /// Setter for [`isEnabled`][Self::isEnabled].
        #[unsafe(method(setEnabled:))]
        #[unsafe(method_family = none)]
        unsafe fn setEnabled(&self, enabled: bool);
    }
);

extern_protocol!(
    /// `CPListSelectable`describes list items that accept a list item handler, called when
    /// the user selects this list item.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/carplay/cpselectablelistitem?language=objc)
    pub unsafe trait CPSelectableListItem: CPListTemplateItem {}
);
