//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domhtmlanchorelement?language=objc)
    #[unsafe(super(
        DOMHTMLElement,
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    #[deprecated]
    pub struct DOMHTMLAnchorElement;
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMEventTarget",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl DOMEventTarget for DOMHTMLAnchorElement {}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl NSCopying for DOMHTMLAnchorElement {}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl CopyingHelper for DOMHTMLAnchorElement {
    type Result = Self;
}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl NSObjectProtocol for DOMHTMLAnchorElement {}

extern_methods!(
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAnchorElement {
        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(charset)]
        pub unsafe fn charset(&self) -> Retained<NSString>;

        /// Setter for [`charset`][Self::charset].
        #[deprecated]
        #[method(setCharset:)]
        pub unsafe fn setCharset(&self, charset: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(coords)]
        pub unsafe fn coords(&self) -> Retained<NSString>;

        /// Setter for [`coords`][Self::coords].
        #[deprecated]
        #[method(setCoords:)]
        pub unsafe fn setCoords(&self, coords: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(hreflang)]
        pub unsafe fn hreflang(&self) -> Retained<NSString>;

        /// Setter for [`hreflang`][Self::hreflang].
        #[deprecated]
        #[method(setHreflang:)]
        pub unsafe fn setHreflang(&self, hreflang: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        /// Setter for [`name`][Self::name].
        #[deprecated]
        #[method(setName:)]
        pub unsafe fn setName(&self, name: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(rel)]
        pub unsafe fn rel(&self) -> Retained<NSString>;

        /// Setter for [`rel`][Self::rel].
        #[deprecated]
        #[method(setRel:)]
        pub unsafe fn setRel(&self, rel: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(rev)]
        pub unsafe fn rev(&self) -> Retained<NSString>;

        /// Setter for [`rev`][Self::rev].
        #[deprecated]
        #[method(setRev:)]
        pub unsafe fn setRev(&self, rev: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(shape)]
        pub unsafe fn shape(&self) -> Retained<NSString>;

        /// Setter for [`shape`][Self::shape].
        #[deprecated]
        #[method(setShape:)]
        pub unsafe fn setShape(&self, shape: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(target)]
        pub unsafe fn target(&self) -> Retained<NSString>;

        /// Setter for [`target`][Self::target].
        #[deprecated]
        #[method(setTarget:)]
        pub unsafe fn setTarget(&self, target: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(type)]
        pub unsafe fn r#type(&self) -> Retained<NSString>;

        /// Setter for [`type`][Self::type].
        #[deprecated]
        #[method(setType:)]
        pub unsafe fn setType(&self, r#type: Option<&NSString>);

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(accessKey)]
        pub unsafe fn accessKey(&self) -> Retained<NSString>;

        /// Setter for [`accessKey`][Self::accessKey].
        #[deprecated]
        #[method(setAccessKey:)]
        pub unsafe fn setAccessKey(&self, access_key: Option<&NSString>);

        #[unsafe(method_family(none))]
        #[method_id(text)]
        pub unsafe fn text(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(absoluteLinkURL)]
        pub unsafe fn absoluteLinkURL(&self) -> Retained<NSURL>;

        #[deprecated]
        #[unsafe(method_family(none))]
        #[method_id(href)]
        pub unsafe fn href(&self) -> Retained<NSString>;

        /// Setter for [`href`][Self::href].
        #[deprecated]
        #[method(setHref:)]
        pub unsafe fn setHref(&self, href: Option<&NSString>);

        #[unsafe(method_family(none))]
        #[method_id(protocol)]
        pub unsafe fn protocol(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(host)]
        pub unsafe fn host(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(hostname)]
        pub unsafe fn hostname(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(port)]
        pub unsafe fn port(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(pathname)]
        pub unsafe fn pathname(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(search)]
        pub unsafe fn search(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(hashName)]
        pub unsafe fn hashName(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `DOMObject`
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAnchorElement {
        #[deprecated]
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAnchorElement {
        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
