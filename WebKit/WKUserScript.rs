//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct WKUserScriptInjectionTime(pub NSInteger);
impl WKUserScriptInjectionTime {
    #[doc(alias = "WKUserScriptInjectionTimeAtDocumentStart")]
    pub const AtDocumentStart: Self = Self(0);
    #[doc(alias = "WKUserScriptInjectionTimeAtDocumentEnd")]
    pub const AtDocumentEnd: Self = Self(1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for WKUserScriptInjectionTime {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for WKUserScriptInjectionTime {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WKUserScript;

    unsafe impl ClassType for WKUserScript {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCopying for WKUserScript {}

unsafe impl NSObjectProtocol for WKUserScript {}

extern_methods!(
    unsafe impl WKUserScript {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other source)]
        pub unsafe fn source(&self) -> Id<NSString>;

        #[method(injectionTime)]
        pub unsafe fn injectionTime(&self) -> WKUserScriptInjectionTime;

        #[method(isForMainFrameOnly)]
        pub unsafe fn isForMainFrameOnly(&self) -> bool;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithSource:injectionTime:forMainFrameOnly:)]
        pub unsafe fn initWithSource_injectionTime_forMainFrameOnly(
            this: Allocated<Self>,
            source: &NSString,
            injection_time: WKUserScriptInjectionTime,
            for_main_frame_only: bool,
        ) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_WKContentWorld"))]
        #[method_id(@__retain_semantics Init initWithSource:injectionTime:forMainFrameOnly:inContentWorld:)]
        pub unsafe fn initWithSource_injectionTime_forMainFrameOnly_inContentWorld(
            this: Allocated<Self>,
            source: &NSString,
            injection_time: WKUserScriptInjectionTime,
            for_main_frame_only: bool,
            content_world: &WKContentWorld,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WKUserScript {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
