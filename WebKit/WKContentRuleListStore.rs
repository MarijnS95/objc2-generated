//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkcontentruleliststore?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WKContentRuleListStore;
);

unsafe impl NSObjectProtocol for WKContentRuleListStore {}

extern_methods!(
    unsafe impl WKContentRuleListStore {
        #[unsafe(method_family(none))]
        #[method_id(defaultStore)]
        pub unsafe fn defaultStore(mtm: MainThreadMarker) -> Option<Retained<Self>>;

        #[unsafe(method_family(none))]
        #[method_id(storeWithURL:)]
        pub unsafe fn storeWithURL(
            url: Option<&NSURL>,
            mtm: MainThreadMarker,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "WKContentRuleList", feature = "block2"))]
        #[method(compileContentRuleListForIdentifier:encodedContentRuleList:completionHandler:)]
        pub unsafe fn compileContentRuleListForIdentifier_encodedContentRuleList_completionHandler(
            &self,
            identifier: Option<&NSString>,
            encoded_content_rule_list: Option<&NSString>,
            completion_handler: Option<
                &block2::Block<dyn Fn(*mut WKContentRuleList, *mut NSError)>,
            >,
        );

        #[cfg(all(feature = "WKContentRuleList", feature = "block2"))]
        #[method(lookUpContentRuleListForIdentifier:completionHandler:)]
        pub unsafe fn lookUpContentRuleListForIdentifier_completionHandler(
            &self,
            identifier: Option<&NSString>,
            completion_handler: Option<
                &block2::Block<dyn Fn(*mut WKContentRuleList, *mut NSError)>,
            >,
        );

        #[cfg(feature = "block2")]
        #[method(removeContentRuleListForIdentifier:completionHandler:)]
        pub unsafe fn removeContentRuleListForIdentifier_completionHandler(
            &self,
            identifier: Option<&NSString>,
            completion_handler: Option<&block2::Block<dyn Fn(*mut NSError)>>,
        );

        #[cfg(feature = "block2")]
        #[method(getAvailableContentRuleListIdentifiers:)]
        pub unsafe fn getAvailableContentRuleListIdentifiers(
            &self,
            completion_handler: Option<&block2::Block<dyn Fn(*mut NSArray<NSString>)>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WKContentRuleListStore {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
