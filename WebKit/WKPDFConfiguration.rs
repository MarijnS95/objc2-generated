//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkpdfconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WKPDFConfiguration;
);

unsafe impl NSCopying for WKPDFConfiguration {}

unsafe impl CopyingHelper for WKPDFConfiguration {
    type Result = Self;
}

unsafe impl NSObjectProtocol for WKPDFConfiguration {}

extern_methods!(
    unsafe impl WKPDFConfiguration {
        #[cfg(feature = "objc2-core-foundation")]
        /// The rect to capture in web page coordinates
        ///
        /// If the rect is set to the null rect, the bounds of the currently displayed web page will be used.
        /// The initial value is the null rect.
        #[method(rect)]
        pub unsafe fn rect(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`rect`][Self::rect].
        #[method(setRect:)]
        pub unsafe fn setRect(&self, rect: CGRect);

        /// A Boolean value indicating whether the PDF should allow transparent backgrounds.
        ///
        /// The default value is `NO`.
        #[method(allowTransparentBackground)]
        pub unsafe fn allowTransparentBackground(&self) -> bool;

        /// Setter for [`allowTransparentBackground`][Self::allowTransparentBackground].
        #[method(setAllowTransparentBackground:)]
        pub unsafe fn setAllowTransparentBackground(&self, allow_transparent_background: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WKPDFConfiguration {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
