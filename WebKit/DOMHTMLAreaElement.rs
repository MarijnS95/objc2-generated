//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domhtmlareaelement?language=objc)
    #[unsafe(super(
        DOMHTMLElement,
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    #[deprecated]
    pub struct DOMHTMLAreaElement;
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMEventTarget",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl DOMEventTarget for DOMHTMLAreaElement {}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl NSCopying for DOMHTMLAreaElement {}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl CopyingHelper for DOMHTMLAreaElement {
    type Result = Self;
}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl NSObjectProtocol for DOMHTMLAreaElement {}

extern_methods!(
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAreaElement {
        #[deprecated]
        #[method_id(alt)]
        #[unsafe(method_family = none)]
        pub unsafe fn alt(&self) -> Retained<NSString>;

        /// Setter for [`alt`][Self::alt].
        #[deprecated]
        #[method(setAlt:)]
        pub unsafe fn setAlt(&self, alt: Option<&NSString>);

        #[deprecated]
        #[method_id(coords)]
        #[unsafe(method_family = none)]
        pub unsafe fn coords(&self) -> Retained<NSString>;

        /// Setter for [`coords`][Self::coords].
        #[deprecated]
        #[method(setCoords:)]
        pub unsafe fn setCoords(&self, coords: Option<&NSString>);

        #[deprecated]
        #[method(noHref)]
        pub unsafe fn noHref(&self) -> bool;

        /// Setter for [`noHref`][Self::noHref].
        #[deprecated]
        #[method(setNoHref:)]
        pub unsafe fn setNoHref(&self, no_href: bool);

        #[deprecated]
        #[method_id(shape)]
        #[unsafe(method_family = none)]
        pub unsafe fn shape(&self) -> Retained<NSString>;

        /// Setter for [`shape`][Self::shape].
        #[deprecated]
        #[method(setShape:)]
        pub unsafe fn setShape(&self, shape: Option<&NSString>);

        #[deprecated]
        #[method_id(target)]
        #[unsafe(method_family = none)]
        pub unsafe fn target(&self) -> Retained<NSString>;

        /// Setter for [`target`][Self::target].
        #[deprecated]
        #[method(setTarget:)]
        pub unsafe fn setTarget(&self, target: Option<&NSString>);

        #[deprecated]
        #[method_id(accessKey)]
        #[unsafe(method_family = none)]
        pub unsafe fn accessKey(&self) -> Retained<NSString>;

        /// Setter for [`accessKey`][Self::accessKey].
        #[deprecated]
        #[method(setAccessKey:)]
        pub unsafe fn setAccessKey(&self, access_key: Option<&NSString>);

        #[method_id(absoluteLinkURL)]
        #[unsafe(method_family = none)]
        pub unsafe fn absoluteLinkURL(&self) -> Retained<NSURL>;

        #[deprecated]
        #[method_id(href)]
        #[unsafe(method_family = none)]
        pub unsafe fn href(&self) -> Retained<NSString>;

        /// Setter for [`href`][Self::href].
        #[deprecated]
        #[method(setHref:)]
        pub unsafe fn setHref(&self, href: Option<&NSString>);

        #[method_id(protocol)]
        #[unsafe(method_family = none)]
        pub unsafe fn protocol(&self) -> Retained<NSString>;

        #[method_id(host)]
        #[unsafe(method_family = none)]
        pub unsafe fn host(&self) -> Retained<NSString>;

        #[method_id(hostname)]
        #[unsafe(method_family = none)]
        pub unsafe fn hostname(&self) -> Retained<NSString>;

        #[method_id(port)]
        #[unsafe(method_family = none)]
        pub unsafe fn port(&self) -> Retained<NSString>;

        #[method_id(pathname)]
        #[unsafe(method_family = none)]
        pub unsafe fn pathname(&self) -> Retained<NSString>;

        #[method_id(search)]
        #[unsafe(method_family = none)]
        pub unsafe fn search(&self) -> Retained<NSString>;

        #[method_id(hashName)]
        #[unsafe(method_family = none)]
        pub unsafe fn hashName(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `DOMObject`
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAreaElement {
        #[deprecated]
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAreaElement {
        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
