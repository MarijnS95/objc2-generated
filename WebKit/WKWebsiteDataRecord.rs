//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypefetchcache?language=objc)
    pub static WKWebsiteDataTypeFetchCache: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypediskcache?language=objc)
    pub static WKWebsiteDataTypeDiskCache: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypememorycache?language=objc)
    pub static WKWebsiteDataTypeMemoryCache: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypeofflinewebapplicationcache?language=objc)
    pub static WKWebsiteDataTypeOfflineWebApplicationCache: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypecookies?language=objc)
    pub static WKWebsiteDataTypeCookies: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypesessionstorage?language=objc)
    pub static WKWebsiteDataTypeSessionStorage: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypelocalstorage?language=objc)
    pub static WKWebsiteDataTypeLocalStorage: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypewebsqldatabases?language=objc)
    pub static WKWebsiteDataTypeWebSQLDatabases: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypeindexeddbdatabases?language=objc)
    pub static WKWebsiteDataTypeIndexedDBDatabases: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypeserviceworkerregistrations?language=objc)
    pub static WKWebsiteDataTypeServiceWorkerRegistrations: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypefilesystem?language=objc)
    pub static WKWebsiteDataTypeFileSystem: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypesearchfieldrecentsearches?language=objc)
    pub static WKWebsiteDataTypeSearchFieldRecentSearches: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypemediakeys?language=objc)
    pub static WKWebsiteDataTypeMediaKeys: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatatypehashsalt?language=objc)
    pub static WKWebsiteDataTypeHashSalt: &'static NSString;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkwebsitedatarecord?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WKWebsiteDataRecord;
);

unsafe impl NSObjectProtocol for WKWebsiteDataRecord {}

extern_methods!(
    unsafe impl WKWebsiteDataRecord {
        #[method_id(@__retain_semantics Other displayName)]
        pub unsafe fn displayName(&self) -> Retained<NSString>;

        #[method_id(@__retain_semantics Other dataTypes)]
        pub unsafe fn dataTypes(&self) -> Retained<NSSet<NSString>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WKWebsiteDataRecord {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
