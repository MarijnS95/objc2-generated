//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domhtmlappletelement?language=objc)
    #[unsafe(super(
        DOMHTMLElement,
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    #[deprecated]
    pub struct DOMHTMLAppletElement;
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMEventTarget",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl DOMEventTarget for DOMHTMLAppletElement {}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl NSCopying for DOMHTMLAppletElement {}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl CopyingHelper for DOMHTMLAppletElement {
    type Result = Self;
}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl NSObjectProtocol for DOMHTMLAppletElement {}

extern_methods!(
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAppletElement {
        #[deprecated]
        #[method_id(align)]
        #[unsafe(method_family = none)]
        pub unsafe fn align(&self) -> Retained<NSString>;

        /// Setter for [`align`][Self::align].
        #[deprecated]
        #[method(setAlign:)]
        pub unsafe fn setAlign(&self, align: Option<&NSString>);

        #[deprecated]
        #[method_id(alt)]
        #[unsafe(method_family = none)]
        pub unsafe fn alt(&self) -> Retained<NSString>;

        /// Setter for [`alt`][Self::alt].
        #[deprecated]
        #[method(setAlt:)]
        pub unsafe fn setAlt(&self, alt: Option<&NSString>);

        #[deprecated]
        #[method_id(archive)]
        #[unsafe(method_family = none)]
        pub unsafe fn archive(&self) -> Retained<NSString>;

        /// Setter for [`archive`][Self::archive].
        #[deprecated]
        #[method(setArchive:)]
        pub unsafe fn setArchive(&self, archive: Option<&NSString>);

        #[deprecated]
        #[method_id(code)]
        #[unsafe(method_family = none)]
        pub unsafe fn code(&self) -> Retained<NSString>;

        /// Setter for [`code`][Self::code].
        #[deprecated]
        #[method(setCode:)]
        pub unsafe fn setCode(&self, code: Option<&NSString>);

        #[deprecated]
        #[method_id(codeBase)]
        #[unsafe(method_family = none)]
        pub unsafe fn codeBase(&self) -> Retained<NSString>;

        /// Setter for [`codeBase`][Self::codeBase].
        #[deprecated]
        #[method(setCodeBase:)]
        pub unsafe fn setCodeBase(&self, code_base: Option<&NSString>);

        #[deprecated]
        #[method_id(height)]
        #[unsafe(method_family = none)]
        pub unsafe fn height(&self) -> Retained<NSString>;

        /// Setter for [`height`][Self::height].
        #[deprecated]
        #[method(setHeight:)]
        pub unsafe fn setHeight(&self, height: Option<&NSString>);

        #[deprecated]
        #[method(hspace)]
        pub unsafe fn hspace(&self) -> c_int;

        /// Setter for [`hspace`][Self::hspace].
        #[deprecated]
        #[method(setHspace:)]
        pub unsafe fn setHspace(&self, hspace: c_int);

        #[deprecated]
        #[method_id(name)]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        /// Setter for [`name`][Self::name].
        #[deprecated]
        #[method(setName:)]
        pub unsafe fn setName(&self, name: Option<&NSString>);

        #[deprecated]
        #[method_id(object)]
        #[unsafe(method_family = none)]
        pub unsafe fn object(&self) -> Retained<NSString>;

        /// Setter for [`object`][Self::object].
        #[deprecated]
        #[method(setObject:)]
        pub unsafe fn setObject(&self, object: Option<&NSString>);

        #[deprecated]
        #[method(vspace)]
        pub unsafe fn vspace(&self) -> c_int;

        /// Setter for [`vspace`][Self::vspace].
        #[deprecated]
        #[method(setVspace:)]
        pub unsafe fn setVspace(&self, vspace: c_int);

        #[deprecated]
        #[method_id(width)]
        #[unsafe(method_family = none)]
        pub unsafe fn width(&self) -> Retained<NSString>;

        /// Setter for [`width`][Self::width].
        #[deprecated]
        #[method(setWidth:)]
        pub unsafe fn setWidth(&self, width: Option<&NSString>);
    }
);

extern_methods!(
    /// Methods declared on superclass `DOMObject`
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAppletElement {
        #[deprecated]
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    unsafe impl DOMHTMLAppletElement {
        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
