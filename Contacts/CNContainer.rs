//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/contacts/cncontainertype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CNContainerType(pub NSInteger);
impl CNContainerType {
    #[doc(alias = "CNContainerTypeUnassigned")]
    pub const Unassigned: Self = Self(0);
    #[doc(alias = "CNContainerTypeLocal")]
    pub const Local: Self = Self(1);
    #[doc(alias = "CNContainerTypeExchange")]
    pub const Exchange: Self = Self(2);
    #[doc(alias = "CNContainerTypeCardDAV")]
    pub const CardDAV: Self = Self(3);
}

unsafe impl Encode for CNContainerType {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for CNContainerType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// An immutable value object representing a container.
    ///
    ///
    /// CNContainer is thread safe.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/contacts/cncontainer?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CNContainer;
);

unsafe impl NSCoding for CNContainer {}

unsafe impl NSCopying for CNContainer {}

unsafe impl CopyingHelper for CNContainer {
    type Result = Self;
}

unsafe impl NSObjectProtocol for CNContainer {}

unsafe impl NSSecureCoding for CNContainer {}

extern_methods!(
    unsafe impl CNContainer {
        /// The identifier is unique among containers on the device. It can be saved and used for fetching containers next application launch.
        #[method(identifier)]
        #[unsafe(method_family = none)]
        pub unsafe fn identifier(&self) -> Retained<NSString>;

        #[method(name)]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[method(type)]
        #[unsafe(method_family = none)]
        pub unsafe fn r#type(&self) -> CNContainerType;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CNContainer {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/contacts/cncontaineridentifierkey?language=objc)
    pub static CNContainerIdentifierKey: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/contacts/cncontainernamekey?language=objc)
    pub static CNContainerNameKey: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/contacts/cncontainertypekey?language=objc)
    pub static CNContainerTypeKey: &'static NSString;
}
