//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CNInstantMessageAddress;

    unsafe impl ClassType for CNInstantMessageAddress {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCoding for CNInstantMessageAddress {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCopying for CNInstantMessageAddress {}

unsafe impl NSObjectProtocol for CNInstantMessageAddress {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSSecureCoding for CNInstantMessageAddress {}

extern_methods!(
    unsafe impl CNInstantMessageAddress {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other username)]
        pub unsafe fn username(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other service)]
        pub unsafe fn service(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithUsername:service:)]
        pub unsafe fn initWithUsername_service(
            this: Allocated<Self>,
            username: &NSString,
            service: &NSString,
        ) -> Id<Self>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other localizedStringForKey:)]
        pub unsafe fn localizedStringForKey(key: &NSString) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other localizedStringForService:)]
        pub unsafe fn localizedStringForService(service: &NSString) -> Id<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CNInstantMessageAddress {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageAddressUsernameKey: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageAddressServiceKey: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceAIM: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceFacebook: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceGaduGadu: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceGoogleTalk: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceICQ: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceJabber: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceMSN: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceQQ: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceSkype: &'static NSString;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static CNInstantMessageServiceYahoo: &'static NSString;
}
