//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;
#[cfg(feature = "objc2-core-image")]
use objc2_core_image::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
#[cfg(feature = "objc2-core-video")]
use objc2_core_video::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A request that requires an initial image as a starting point for its work.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/vision/vntargetedimagerequest?language=objc)
    #[unsafe(super(VNImageBasedRequest, VNRequest, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VNRequest")]
    pub struct VNTargetedImageRequest;
);

#[cfg(feature = "VNRequest")]
extern_conformance!(
    unsafe impl NSCopying for VNTargetedImageRequest {}
);

#[cfg(feature = "VNRequest")]
unsafe impl CopyingHelper for VNTargetedImageRequest {
    type Result = Self;
}

#[cfg(feature = "VNRequest")]
extern_conformance!(
    unsafe impl NSObjectProtocol for VNTargetedImageRequest {}
);

#[cfg(feature = "VNRequest")]
impl VNTargetedImageRequest {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "block2")]
        #[unsafe(method(initWithCompletionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCompletionHandler(
            this: Allocated<Self>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "VNRequestHandler", feature = "objc2-core-video"))]
        /// Create a new request that targets an image in a pixel buffer.
        ///
        ///
        /// Parameter `pixelBuffer`: The pixel buffer containing the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        #[unsafe(method(initWithTargetedCVPixelBuffer:options:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCVPixelBuffer_options(
            this: Allocated<Self>,
            pixel_buffer: &CVPixelBuffer,
            options: &NSDictionary<VNImageOption, AnyObject>,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "VNRequestHandler",
            feature = "block2",
            feature = "objc2-core-video"
        ))]
        /// Create a new request that targets an image in a pixel buffer.
        ///
        ///
        /// Parameter `pixelBuffer`: The pixel buffer containing the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        ///
        /// Parameter `completionHandler`: The block that is invoked when the request has been performed.
        #[unsafe(method(initWithTargetedCVPixelBuffer:options:completionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCVPixelBuffer_options_completionHandler(
            this: Allocated<Self>,
            pixel_buffer: &CVPixelBuffer,
            options: &NSDictionary<VNImageOption, AnyObject>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "VNRequestHandler", feature = "objc2-core-graphics"))]
        /// Create a new request with a targeted CGImage.
        ///
        ///
        /// Parameter `cgImage`: The CGImageRef of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        #[unsafe(method(initWithTargetedCGImage:options:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCGImage_options(
            this: Allocated<Self>,
            cg_image: &CGImage,
            options: &NSDictionary<VNImageOption, AnyObject>,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "VNRequestHandler",
            feature = "block2",
            feature = "objc2-core-graphics"
        ))]
        /// Create a new request with a targeted CGImage.
        ///
        ///
        /// Parameter `cgImage`: The CGImageRef of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        ///
        /// Parameter `completionHandler`: The block that is invoked when the request has been performed.
        #[unsafe(method(initWithTargetedCGImage:options:completionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCGImage_options_completionHandler(
            this: Allocated<Self>,
            cg_image: &CGImage,
            options: &NSDictionary<VNImageOption, AnyObject>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "VNRequestHandler", feature = "objc2-core-image"))]
        /// Create a new request with a targeted CIImage.
        ///
        ///
        /// Parameter `ciImage`: The CIImage of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        #[unsafe(method(initWithTargetedCIImage:options:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCIImage_options(
            this: Allocated<Self>,
            ci_image: &CIImage,
            options: &NSDictionary<VNImageOption, AnyObject>,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "VNRequestHandler",
            feature = "block2",
            feature = "objc2-core-image"
        ))]
        /// Create a new request with a targeted CIImage.
        ///
        ///
        /// Parameter `ciImage`: The CIImage of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        ///
        /// Parameter `completionHandler`: The block that is invoked when the request has been performed.
        #[unsafe(method(initWithTargetedCIImage:options:completionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCIImage_options_completionHandler(
            this: Allocated<Self>,
            ci_image: &CIImage,
            options: &NSDictionary<VNImageOption, AnyObject>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;

        #[cfg(feature = "VNRequestHandler")]
        /// Create a new request with a targeted image URL.
        ///
        ///
        /// Parameter `imageURL`: The URL of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        #[unsafe(method(initWithTargetedImageURL:options:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedImageURL_options(
            this: Allocated<Self>,
            image_url: &NSURL,
            options: &NSDictionary<VNImageOption, AnyObject>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "VNRequestHandler", feature = "block2"))]
        /// Create a new request with a targeted image URL.
        ///
        ///
        /// Parameter `imageURL`: The URL of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        ///
        /// Parameter `completionHandler`: The block that is invoked when the request has been performed.
        #[unsafe(method(initWithTargetedImageURL:options:completionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedImageURL_options_completionHandler(
            this: Allocated<Self>,
            image_url: &NSURL,
            options: &NSDictionary<VNImageOption, AnyObject>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;

        #[cfg(feature = "VNRequestHandler")]
        /// Create a new request with a targeted image data.
        ///
        ///
        /// Parameter `imageData`: The data of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        #[unsafe(method(initWithTargetedImageData:options:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedImageData_options(
            this: Allocated<Self>,
            image_data: &NSData,
            options: &NSDictionary<VNImageOption, AnyObject>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "VNRequestHandler", feature = "block2"))]
        /// Create a new request with a targeted image data.
        ///
        ///
        /// Parameter `imageData`: The data of the targeted image.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        ///
        /// Parameter `completionHandler`: The block that is invoked when the request has been performed.
        #[unsafe(method(initWithTargetedImageData:options:completionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedImageData_options_completionHandler(
            this: Allocated<Self>,
            image_data: &NSData,
            options: &NSDictionary<VNImageOption, AnyObject>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "VNRequestHandler", feature = "objc2-core-media"))]
        /// Create a new request with a targeted CMSampleBuffer.
        ///
        ///
        /// Parameter `sampleBuffer`: The CMSampleBuffer containing the CVImageBuffer to be used by the request.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        #[unsafe(method(initWithTargetedCMSampleBuffer:options:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCMSampleBuffer_options(
            this: Allocated<Self>,
            sample_buffer: &CMSampleBuffer,
            options: &NSDictionary<VNImageOption, AnyObject>,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "VNRequestHandler",
            feature = "block2",
            feature = "objc2-core-media"
        ))]
        /// Create a new request with a targeted CMSampleBuffer.
        ///
        ///
        /// Parameter `sampleBuffer`: The CMSampleBuffer containing the CVImageBuffer to be used by the request.
        ///
        /// Parameter `options`: A dictionary with options specifying auxiliary information for the image.
        ///
        /// Parameter `completionHandler`: The block that is invoked after the request has been performed.
        #[unsafe(method(initWithTargetedCMSampleBuffer:options:completionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTargetedCMSampleBuffer_options_completionHandler(
            this: Allocated<Self>,
            sample_buffer: &CMSampleBuffer,
            options: &NSDictionary<VNImageOption, AnyObject>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "VNRequest")]
impl VNTargetedImageRequest {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
