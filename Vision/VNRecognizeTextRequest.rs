//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/vision/vnrequesttextrecognitionlevel?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct VNRequestTextRecognitionLevel(pub NSInteger);
impl VNRequestTextRecognitionLevel {
    #[doc(alias = "VNRequestTextRecognitionLevelAccurate")]
    pub const Accurate: Self = Self(0);
    #[doc(alias = "VNRequestTextRecognitionLevelFast")]
    pub const Fast: Self = Self(1);
}

unsafe impl Encode for VNRequestTextRecognitionLevel {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for VNRequestTextRecognitionLevel {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/vision/vnrecognizetextrequest?language=objc)
    #[unsafe(super(VNImageBasedRequest, VNRequest, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VNRequest")]
    pub struct VNRecognizeTextRequest;
);

#[cfg(feature = "VNRequest")]
unsafe impl NSCopying for VNRecognizeTextRequest {}

#[cfg(feature = "VNRequest")]
unsafe impl CopyingHelper for VNRecognizeTextRequest {
    type Result = Self;
}

#[cfg(feature = "VNRequest")]
unsafe impl NSObjectProtocol for VNRecognizeTextRequest {}

#[cfg(feature = "VNRequest")]
unsafe impl VNRequestProgressProviding for VNRecognizeTextRequest {}

extern_methods!(
    #[cfg(feature = "VNRequest")]
    unsafe impl VNRecognizeTextRequest {
        #[deprecated]
        #[method_id(@__retain_semantics Other supportedRecognitionLanguagesForTextRecognitionLevel:revision:error:_)]
        pub unsafe fn supportedRecognitionLanguagesForTextRecognitionLevel_revision_error(
            recognition_level: VNRequestTextRecognitionLevel,
            request_revision: NSUInteger,
        ) -> Result<Retained<NSArray<NSString>>, Retained<NSError>>;

        #[method_id(@__retain_semantics Other supportedRecognitionLanguagesAndReturnError:_)]
        pub unsafe fn supportedRecognitionLanguagesAndReturnError(
            &self,
        ) -> Result<Retained<NSArray<NSString>>, Retained<NSError>>;

        #[method_id(@__retain_semantics Other recognitionLanguages)]
        pub unsafe fn recognitionLanguages(&self) -> Retained<NSArray<NSString>>;

        #[method(setRecognitionLanguages:)]
        pub fn setRecognitionLanguages(&self, recognition_languages: &NSArray<NSString>);

        #[method_id(@__retain_semantics Other customWords)]
        pub fn customWords(&self) -> Retained<NSArray<NSString>>;

        #[method(setCustomWords:)]
        pub fn setCustomWords(&self, custom_words: &NSArray<NSString>);

        #[method(recognitionLevel)]
        pub fn recognitionLevel(&self) -> VNRequestTextRecognitionLevel;

        #[method(setRecognitionLevel:)]
        pub fn setRecognitionLevel(&self, recognition_level: VNRequestTextRecognitionLevel);

        #[method(usesLanguageCorrection)]
        pub fn usesLanguageCorrection(&self) -> bool;

        #[method(setUsesLanguageCorrection:)]
        pub fn setUsesLanguageCorrection(&self, uses_language_correction: bool);

        #[method(automaticallyDetectsLanguage)]
        pub fn automaticallyDetectsLanguage(&self) -> bool;

        #[method(setAutomaticallyDetectsLanguage:)]
        pub fn setAutomaticallyDetectsLanguage(&self, automatically_detects_language: bool);

        #[method(minimumTextHeight)]
        pub fn minimumTextHeight(&self) -> c_float;

        #[method(setMinimumTextHeight:)]
        pub fn setMinimumTextHeight(&self, minimum_text_height: c_float);

        #[cfg(feature = "VNObservation")]
        #[method_id(@__retain_semantics Other results)]
        pub fn results(&self) -> Option<Retained<NSArray<VNRecognizedTextObservation>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `VNRequest`
    #[cfg(feature = "VNRequest")]
    unsafe impl VNRecognizeTextRequest {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "block2")]
        #[method_id(@__retain_semantics Init initWithCompletionHandler:)]
        pub unsafe fn initWithCompletionHandler(
            this: Allocated<Self>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "VNRequest")]
    unsafe impl VNRecognizeTextRequest {
        #[method_id(@__retain_semantics New new)]
        pub fn new() -> Retained<Self>;
    }
);

#[cfg(feature = "VNRequest")]
impl DefaultRetained for VNRecognizeTextRequest {
    #[inline]
    fn default_retained() -> Retained<Self> {
        Self::new()
    }
}

/// [Apple's documentation](https://developer.apple.com/documentation/vision/vnrecognizetextrequestrevision1?language=objc)
pub static VNRecognizeTextRequestRevision1: NSUInteger = 1;

/// [Apple's documentation](https://developer.apple.com/documentation/vision/vnrecognizetextrequestrevision2?language=objc)
pub static VNRecognizeTextRequestRevision2: NSUInteger = 2;

/// [Apple's documentation](https://developer.apple.com/documentation/vision/vnrecognizetextrequestrevision3?language=objc)
pub static VNRecognizeTextRequestRevision3: NSUInteger = 3;
