//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapeoption?language=objc)
// NS_TYPED_ENUM
pub type SCNPhysicsShapeOption = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapetypekey?language=objc)
    pub static SCNPhysicsShapeTypeKey: &'static SCNPhysicsShapeOption;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapekeepascompoundkey?language=objc)
    pub static SCNPhysicsShapeKeepAsCompoundKey: &'static SCNPhysicsShapeOption;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapescalekey?language=objc)
    pub static SCNPhysicsShapeScaleKey: &'static SCNPhysicsShapeOption;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapeoptioncollisionmargin?language=objc)
    pub static SCNPhysicsShapeOptionCollisionMargin: &'static SCNPhysicsShapeOption;
}

/// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapetype?language=objc)
// NS_TYPED_ENUM
pub type SCNPhysicsShapeType = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapetypeboundingbox?language=objc)
    pub static SCNPhysicsShapeTypeBoundingBox: &'static SCNPhysicsShapeType;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapetypeconvexhull?language=objc)
    pub static SCNPhysicsShapeTypeConvexHull: &'static SCNPhysicsShapeType;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshapetypeconcavepolyhedron?language=objc)
    pub static SCNPhysicsShapeTypeConcavePolyhedron: &'static SCNPhysicsShapeType;
}

extern_class!(
    /// SCNPhysicsShape represents the shape of a physics body.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnphysicsshape?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SCNPhysicsShape;
);

unsafe impl NSCoding for SCNPhysicsShape {}

unsafe impl NSCopying for SCNPhysicsShape {}

unsafe impl CopyingHelper for SCNPhysicsShape {
    type Result = Self;
}

unsafe impl NSObjectProtocol for SCNPhysicsShape {}

unsafe impl NSSecureCoding for SCNPhysicsShape {}

extern_methods!(
    unsafe impl SCNPhysicsShape {
        #[cfg(feature = "SCNGeometry")]
        #[unsafe(method_family(none))]
        #[method_id(shapeWithGeometry:options:)]
        pub unsafe fn shapeWithGeometry_options(
            geometry: &SCNGeometry,
            options: Option<&NSDictionary<SCNPhysicsShapeOption, AnyObject>>,
        ) -> Retained<Self>;

        #[cfg(feature = "SCNNode")]
        #[unsafe(method_family(none))]
        #[method_id(shapeWithNode:options:)]
        pub unsafe fn shapeWithNode_options(
            node: &SCNNode,
            options: Option<&NSDictionary<SCNPhysicsShapeOption, AnyObject>>,
        ) -> Retained<Self>;

        #[unsafe(method_family(none))]
        #[method_id(shapeWithShapes:transforms:)]
        pub unsafe fn shapeWithShapes_transforms(
            shapes: &NSArray<SCNPhysicsShape>,
            transforms: Option<&NSArray<NSValue>>,
        ) -> Retained<Self>;

        #[unsafe(method_family(none))]
        #[method_id(options)]
        pub unsafe fn options(
            &self,
        ) -> Option<Retained<NSDictionary<SCNPhysicsShapeOption, AnyObject>>>;

        #[unsafe(method_family(none))]
        #[method_id(sourceObject)]
        pub unsafe fn sourceObject(&self) -> Retained<AnyObject>;

        #[unsafe(method_family(none))]
        #[method_id(transforms)]
        pub unsafe fn transforms(&self) -> Option<Retained<NSArray<NSValue>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SCNPhysicsShape {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
