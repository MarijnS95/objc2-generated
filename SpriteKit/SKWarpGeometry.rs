//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/spritekit/skwarpable?language=objc)
    pub unsafe trait SKWarpable: NSObjectProtocol {
        #[method_id(@__retain_semantics Other warpGeometry)]
        unsafe fn warpGeometry(&self) -> Option<Retained<SKWarpGeometry>>;

        /// Setter for [`warpGeometry`][Self::warpGeometry].
        #[method(setWarpGeometry:)]
        unsafe fn setWarpGeometry(&self, warp_geometry: Option<&SKWarpGeometry>);

        #[method(subdivisionLevels)]
        unsafe fn subdivisionLevels(&self) -> NSInteger;

        /// Setter for [`subdivisionLevels`][Self::subdivisionLevels].
        #[method(setSubdivisionLevels:)]
        unsafe fn setSubdivisionLevels(&self, subdivision_levels: NSInteger);
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/spritekit/skwarpgeometry?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SKWarpGeometry;
);

unsafe impl NSCoding for SKWarpGeometry {}

unsafe impl NSCopying for SKWarpGeometry {}

unsafe impl CopyingHelper for SKWarpGeometry {
    type Result = Self;
}

unsafe impl NSObjectProtocol for SKWarpGeometry {}

unsafe impl NSSecureCoding for SKWarpGeometry {}

extern_methods!(
    unsafe impl SKWarpGeometry {}
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SKWarpGeometry {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/spritekit/skwarpgeometrygrid?language=objc)
    #[unsafe(super(SKWarpGeometry, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SKWarpGeometryGrid;
);

unsafe impl NSCoding for SKWarpGeometryGrid {}

unsafe impl NSCopying for SKWarpGeometryGrid {}

unsafe impl CopyingHelper for SKWarpGeometryGrid {
    type Result = Self;
}

unsafe impl NSObjectProtocol for SKWarpGeometryGrid {}

unsafe impl NSSecureCoding for SKWarpGeometryGrid {}

extern_methods!(
    unsafe impl SKWarpGeometryGrid {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Other grid)]
        pub unsafe fn grid() -> Retained<Self>;

        #[method_id(@__retain_semantics Other gridWithColumns:rows:)]
        pub unsafe fn gridWithColumns_rows(cols: NSInteger, rows: NSInteger) -> Retained<Self>;

        #[method(numberOfColumns)]
        pub unsafe fn numberOfColumns(&self) -> NSInteger;

        #[method(numberOfRows)]
        pub unsafe fn numberOfRows(&self) -> NSInteger;

        #[method(vertexCount)]
        pub unsafe fn vertexCount(&self) -> NSInteger;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SKWarpGeometryGrid {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// SKWarpable
    #[cfg(feature = "SKAction")]
    unsafe impl SKAction {
        #[method_id(@__retain_semantics Other warpTo:duration:)]
        pub unsafe fn warpTo_duration(
            warp: &SKWarpGeometry,
            duration: NSTimeInterval,
        ) -> Option<Retained<SKAction>>;

        #[method_id(@__retain_semantics Other animateWithWarps:times:)]
        pub unsafe fn animateWithWarps_times(
            warps: &NSArray<SKWarpGeometry>,
            times: &NSArray<NSNumber>,
        ) -> Option<Retained<SKAction>>;

        #[method_id(@__retain_semantics Other animateWithWarps:times:restore:)]
        pub unsafe fn animateWithWarps_times_restore(
            warps: &NSArray<SKWarpGeometry>,
            times: &NSArray<NSNumber>,
            restore: bool,
        ) -> Option<Retained<SKAction>>;
    }
);
