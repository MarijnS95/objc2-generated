//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/spritekit/skreachconstraints?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SKReachConstraints;
);

unsafe impl NSCoding for SKReachConstraints {}

unsafe impl NSObjectProtocol for SKReachConstraints {}

unsafe impl NSSecureCoding for SKReachConstraints {}

extern_methods!(
    unsafe impl SKReachConstraints {
        #[cfg(feature = "objc2-core-foundation")]
        /// Lower angle limit in radians
        #[unsafe(method(lowerAngleLimit))]
        #[unsafe(method_family = none)]
        pub unsafe fn lowerAngleLimit(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`lowerAngleLimit`][Self::lowerAngleLimit].
        #[unsafe(method(setLowerAngleLimit:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLowerAngleLimit(&self, lower_angle_limit: CGFloat);

        #[cfg(feature = "objc2-core-foundation")]
        /// Upper angle limit in radians
        #[unsafe(method(upperAngleLimit))]
        #[unsafe(method_family = none)]
        pub unsafe fn upperAngleLimit(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`upperAngleLimit`][Self::upperAngleLimit].
        #[unsafe(method(setUpperAngleLimit:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setUpperAngleLimit(&self, upper_angle_limit: CGFloat);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(initWithLowerAngleLimit:upperAngleLimit:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLowerAngleLimit_upperAngleLimit(
            this: Allocated<Self>,
            lower_angle_limit: CGFloat,
            upper_angle_limit: CGFloat,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SKReachConstraints {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
