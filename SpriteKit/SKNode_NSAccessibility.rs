//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_methods!(
    /// NSAccessibility
    #[cfg(all(feature = "SKNode", feature = "objc2-app-kit"))]
    #[cfg(target_os = "macos")]
    unsafe impl SKNode {
        #[unsafe(method(isAccessibilityElement))]
        #[unsafe(method_family = none)]
        pub unsafe fn isAccessibilityElement(&self) -> bool;

        /// Setter for [`isAccessibilityElement`][Self::isAccessibilityElement].
        #[unsafe(method(setAccessibilityElement:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityElement(&self, accessibility_element: bool);

        #[unsafe(method(accessibilityRole))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityRole(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilityRole`][Self::accessibilityRole].
        #[unsafe(method(setAccessibilityRole:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityRole(&self, accessibility_role: Option<&NSString>);

        #[unsafe(method(accessibilityRoleDescription))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityRoleDescription(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilityRoleDescription`][Self::accessibilityRoleDescription].
        #[unsafe(method(setAccessibilityRoleDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityRoleDescription(
            &self,
            accessibility_role_description: Option<&NSString>,
        );

        #[unsafe(method(accessibilitySubrole))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilitySubrole(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilitySubrole`][Self::accessibilitySubrole].
        #[unsafe(method(setAccessibilitySubrole:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilitySubrole(&self, accessibility_subrole: Option<&NSString>);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(accessibilityFrame))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityFrame(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`accessibilityFrame`][Self::accessibilityFrame].
        #[unsafe(method(setAccessibilityFrame:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityFrame(&self, accessibility_frame: CGRect);

        #[unsafe(method(accessibilityParent))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityParent(&self) -> Option<Retained<AnyObject>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`accessibilityParent`][Self::accessibilityParent].
        #[unsafe(method(setAccessibilityParent:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityParent(&self, accessibility_parent: Option<&AnyObject>);

        #[unsafe(method(accessibilityChildren))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityChildren(&self) -> Option<Retained<NSArray>>;

        /// Setter for [`accessibilityChildren`][Self::accessibilityChildren].
        #[unsafe(method(setAccessibilityChildren:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityChildren(&self, accessibility_children: Option<&NSArray>);

        #[unsafe(method(accessibilityHelp))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityHelp(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilityHelp`][Self::accessibilityHelp].
        #[unsafe(method(setAccessibilityHelp:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityHelp(&self, accessibility_help: Option<&NSString>);

        #[unsafe(method(accessibilityLabel))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityLabel(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accessibilityLabel`][Self::accessibilityLabel].
        #[unsafe(method(setAccessibilityLabel:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityLabel(&self, accessibility_label: Option<&NSString>);

        #[unsafe(method(isAccessibilityEnabled))]
        #[unsafe(method_family = none)]
        pub unsafe fn isAccessibilityEnabled(&self) -> bool;

        /// Setter for [`isAccessibilityEnabled`][Self::isAccessibilityEnabled].
        #[unsafe(method(setAccessibilityEnabled:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessibilityEnabled(&self, accessibility_enabled: bool);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(accessibilityHitTest:))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessibilityHitTest(&self, point: CGPoint) -> Option<Retained<AnyObject>>;
    }
);
