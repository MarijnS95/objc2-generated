//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Contains file information, such as the file's location and optional user info
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/watchconnectivity/wcsessionfile?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WCSessionFile;
);

unsafe impl NSObjectProtocol for WCSessionFile {}

extern_methods!(
    unsafe impl WCSessionFile {
        #[unsafe(method(fileURL))]
        #[unsafe(method_family = none)]
        pub unsafe fn fileURL(&self) -> Retained<NSURL>;

        #[unsafe(method(metadata))]
        #[unsafe(method_family = none)]
        pub unsafe fn metadata(&self) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WCSessionFile {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Used to track a file being transferred.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/watchconnectivity/wcsessionfiletransfer?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WCSessionFileTransfer;
);

unsafe impl NSObjectProtocol for WCSessionFileTransfer {}

extern_methods!(
    unsafe impl WCSessionFileTransfer {
        #[unsafe(method(file))]
        #[unsafe(method_family = none)]
        pub unsafe fn file(&self) -> Retained<WCSessionFile>;

        #[unsafe(method(progress))]
        #[unsafe(method_family = none)]
        pub unsafe fn progress(&self) -> Retained<NSProgress>;

        #[unsafe(method(isTransferring))]
        #[unsafe(method_family = none)]
        pub unsafe fn isTransferring(&self) -> bool;

        #[unsafe(method(cancel))]
        #[unsafe(method_family = none)]
        pub unsafe fn cancel(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WCSessionFileTransfer {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
