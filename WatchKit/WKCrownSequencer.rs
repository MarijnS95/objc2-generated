//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/watchkit/wkcrownsequencer?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WKCrownSequencer;
);

unsafe impl NSObjectProtocol for WKCrownSequencer {}

extern_methods!(
    unsafe impl WKCrownSequencer {
        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(&self) -> Option<Retained<ProtocolObject<dyn WKCrownDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`delegate`][Self::delegate].
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(&self, delegate: Option<&ProtocolObject<dyn WKCrownDelegate>>);

        #[method(rotationsPerSecond)]
        pub unsafe fn rotationsPerSecond(&self) -> c_double;

        #[method(isIdle)]
        pub unsafe fn isIdle(&self) -> bool;

        #[method(isHapticFeedbackEnabled)]
        pub unsafe fn isHapticFeedbackEnabled(&self) -> bool;

        /// Setter for [`isHapticFeedbackEnabled`][Self::isHapticFeedbackEnabled].
        #[method(setHapticFeedbackEnabled:)]
        pub unsafe fn setHapticFeedbackEnabled(&self, haptic_feedback_enabled: bool);

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(focus)]
        pub unsafe fn focus(&self);

        #[method(resignFocus)]
        pub unsafe fn resignFocus(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WKCrownSequencer {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/watchkit/wkcrowndelegate?language=objc)
    pub unsafe trait WKCrownDelegate: NSObjectProtocol {
        #[optional]
        #[method(crownDidRotate:rotationalDelta:)]
        unsafe fn crownDidRotate_rotationalDelta(
            &self,
            crown_sequencer: Option<&WKCrownSequencer>,
            rotational_delta: c_double,
        );

        #[optional]
        #[method(crownDidBecomeIdle:)]
        unsafe fn crownDidBecomeIdle(&self, crown_sequencer: Option<&WKCrownSequencer>);
    }
);
