//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-map-kit")]
use objc2_map_kit::*;
#[cfg(feature = "objc2-ui-kit")]
use objc2_ui_kit::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/watchkit/wkinterfacemappincolor?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct WKInterfaceMapPinColor(pub NSInteger);
impl WKInterfaceMapPinColor {
    #[doc(alias = "WKInterfaceMapPinColorRed")]
    pub const Red: Self = Self(0);
    #[doc(alias = "WKInterfaceMapPinColorGreen")]
    pub const Green: Self = Self(1);
    #[doc(alias = "WKInterfaceMapPinColorPurple")]
    pub const Purple: Self = Self(2);
}

unsafe impl Encode for WKInterfaceMapPinColor {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for WKInterfaceMapPinColor {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/watchkit/wkinterfacemapusertrackingmode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct WKInterfaceMapUserTrackingMode(pub NSInteger);
impl WKInterfaceMapUserTrackingMode {
    #[doc(alias = "WKInterfaceMapUserTrackingModeNone")]
    pub const None: Self = Self(0);
    #[doc(alias = "WKInterfaceMapUserTrackingModeFollow")]
    pub const Follow: Self = Self(1);
}

unsafe impl Encode for WKInterfaceMapUserTrackingMode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for WKInterfaceMapUserTrackingMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/watchkit/wkinterfacemap?language=objc)
    #[unsafe(super(WKInterfaceObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "WKInterfaceObject")]
    pub struct WKInterfaceMap;
);

#[cfg(feature = "WKInterfaceObject")]
unsafe impl NSObjectProtocol for WKInterfaceMap {}

extern_methods!(
    #[cfg(feature = "WKInterfaceObject")]
    unsafe impl WKInterfaceMap {
        #[deprecated = "Use MapKit.MapView instead."]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(setShowsUserLocation:)]
        pub unsafe fn setShowsUserLocation(&self, shows_user_location: bool);

        #[method(setShowsUserHeading:)]
        pub unsafe fn setShowsUserHeading(&self, shows_user_heading: bool);

        #[method(setUserTrackingMode:animated:)]
        pub unsafe fn setUserTrackingMode_animated(
            &self,
            mode: WKInterfaceMapUserTrackingMode,
            animated: bool,
        );

        #[cfg(feature = "objc2-map-kit")]
        #[method(setVisibleMapRect:)]
        pub unsafe fn setVisibleMapRect(&self, map_rect: MKMapRect);

        #[cfg(all(feature = "objc2-core-location", feature = "objc2-map-kit"))]
        #[method(setRegion:)]
        pub unsafe fn setRegion(&self, coordinate_region: MKCoordinateRegion);

        #[cfg(all(
            feature = "objc2-core-foundation",
            feature = "objc2-core-location",
            feature = "objc2-ui-kit"
        ))]
        #[method(addAnnotation:withImage:centerOffset:)]
        pub unsafe fn addAnnotation_withImage_centerOffset(
            &self,
            location: CLLocationCoordinate2D,
            image: Option<&UIImage>,
            offset: CGPoint,
        );

        #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-location"))]
        #[method(addAnnotation:withImageNamed:centerOffset:)]
        pub unsafe fn addAnnotation_withImageNamed_centerOffset(
            &self,
            location: CLLocationCoordinate2D,
            name: Option<&NSString>,
            offset: CGPoint,
        );

        #[cfg(feature = "objc2-core-location")]
        #[method(addAnnotation:withPinColor:)]
        pub unsafe fn addAnnotation_withPinColor(
            &self,
            location: CLLocationCoordinate2D,
            pin_color: WKInterfaceMapPinColor,
        );

        #[method(removeAllAnnotations)]
        pub unsafe fn removeAllAnnotations(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "WKInterfaceObject")]
    unsafe impl WKInterfaceMap {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
