//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// EAWiFiUnconfiguredAccessoryProperties
///
///
/// Represents the properties of an EAWiFiUnconfiguredAccessory.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/externalaccessory/eawifiunconfiguredaccessoryproperties?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct EAWiFiUnconfiguredAccessoryProperties(pub NSUInteger);
bitflags::bitflags! {
    impl EAWiFiUnconfiguredAccessoryProperties: NSUInteger {
        #[doc(alias = "EAWiFiUnconfiguredAccessoryPropertySupportsAirPlay")]
        const SupportsAirPlay = 1<<0;
        #[doc(alias = "EAWiFiUnconfiguredAccessoryPropertySupportsAirPrint")]
        const SupportsAirPrint = 1<<1;
        #[doc(alias = "EAWiFiUnconfiguredAccessoryPropertySupportsHomeKit")]
        const SupportsHomeKit = 1<<2;
    }
}

unsafe impl Encode for EAWiFiUnconfiguredAccessoryProperties {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for EAWiFiUnconfiguredAccessoryProperties {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// Object representing an unconfigured MFi Wireless Accessory Configuration (WAC) accessory.
    ///
    ///
    /// This class models an unconfigured MFi Wireless Accessory Configuration accessory
    /// discovered via a EAWiFiUnconfiguredAccessoryBrowser search.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/externalaccessory/eawifiunconfiguredaccessory?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct EAWiFiUnconfiguredAccessory;
);

unsafe impl NSObjectProtocol for EAWiFiUnconfiguredAccessory {}

extern_methods!(
    unsafe impl EAWiFiUnconfiguredAccessory {
        /// The name of the accessory.
        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        /// The name of the accessory's manufacturer.
        #[method_id(@__retain_semantics Other manufacturer)]
        pub unsafe fn manufacturer(&self) -> Retained<NSString>;

        /// The model name of accessory.
        #[method_id(@__retain_semantics Other model)]
        pub unsafe fn model(&self) -> Retained<NSString>;

        /// The Wi-Fi SSID of the accessory.
        #[method_id(@__retain_semantics Other ssid)]
        pub unsafe fn ssid(&self) -> Retained<NSString>;

        /// The primary MAC address of the accessory.
        #[method_id(@__retain_semantics Other macAddress)]
        pub unsafe fn macAddress(&self) -> Retained<NSString>;

        /// The properties the accessory supports.
        #[method(properties)]
        pub unsafe fn properties(&self) -> EAWiFiUnconfiguredAccessoryProperties;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl EAWiFiUnconfiguredAccessory {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
