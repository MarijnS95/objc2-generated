//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-foundation")]
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykey?language=objc)
// NS_TYPED_ENUM
#[cfg(feature = "objc2-foundation")]
pub type IOSurfacePropertyKey = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyallocsize?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyAllocSize: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeywidth?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyWidth: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyheight?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyHeight: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeybytesperrow?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyBytesPerRow: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeybytesperelement?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyBytesPerElement: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyelementwidth?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyElementWidth: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyelementheight?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyElementHeight: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyoffset?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyOffset: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplaneinfo?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneInfo: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplanewidth?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneWidth: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplaneheight?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneHeight: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplanebytesperrow?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneBytesPerRow: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplaneoffset?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneOffset: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplanesize?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneSize: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplanebase?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneBase: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplanebytesperelement?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneBytesPerElement: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplaneelementwidth?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneElementWidth: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyplaneelementheight?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPlaneElementHeight: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeycachemode?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyCacheMode: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeypixelformat?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPixelFormat: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeypixelsizecastingallowed?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyPixelSizeCastingAllowed: &'static IOSurfacePropertyKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertykeyname?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyKeyName: &'static IOSurfacePropertyKey;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurface?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct IOSurface;
);

#[cfg(feature = "objc2-foundation")]
unsafe impl NSCoding for IOSurface {}

unsafe impl NSObjectProtocol for IOSurface {}

#[cfg(feature = "objc2-foundation")]
unsafe impl NSSecureCoding for IOSurface {}

extern_methods!(
    unsafe impl IOSurface {
        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__retain_semantics Init initWithProperties:)]
        pub unsafe fn initWithProperties(
            this: Allocated<Self>,
            properties: &NSDictionary<IOSurfacePropertyKey, AnyObject>,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "IOSurfaceTypes", feature = "libc"))]
        #[method(lockWithOptions:seed:)]
        pub unsafe fn lockWithOptions_seed(
            &self,
            options: IOSurfaceLockOptions,
            seed: *mut u32,
        ) -> libc::kern_return_t;

        #[cfg(all(feature = "IOSurfaceTypes", feature = "libc"))]
        #[method(unlockWithOptions:seed:)]
        pub unsafe fn unlockWithOptions_seed(
            &self,
            options: IOSurfaceLockOptions,
            seed: *mut u32,
        ) -> libc::kern_return_t;

        #[method(allocationSize)]
        pub unsafe fn allocationSize(&self) -> NSInteger;

        #[method(width)]
        pub unsafe fn width(&self) -> NSInteger;

        #[method(height)]
        pub unsafe fn height(&self) -> NSInteger;

        #[method(baseAddress)]
        pub unsafe fn baseAddress(&self) -> NonNull<c_void>;

        #[method(pixelFormat)]
        pub unsafe fn pixelFormat(&self) -> OSType;

        #[method(bytesPerRow)]
        pub unsafe fn bytesPerRow(&self) -> NSInteger;

        #[method(bytesPerElement)]
        pub unsafe fn bytesPerElement(&self) -> NSInteger;

        #[method(elementWidth)]
        pub unsafe fn elementWidth(&self) -> NSInteger;

        #[method(elementHeight)]
        pub unsafe fn elementHeight(&self) -> NSInteger;

        #[method(surfaceID)]
        pub unsafe fn surfaceID(&self) -> u32;

        #[method(seed)]
        pub unsafe fn seed(&self) -> u32;

        #[method(planeCount)]
        pub unsafe fn planeCount(&self) -> NSUInteger;

        #[method(widthOfPlaneAtIndex:)]
        pub unsafe fn widthOfPlaneAtIndex(&self, plane_index: NSUInteger) -> NSInteger;

        #[method(heightOfPlaneAtIndex:)]
        pub unsafe fn heightOfPlaneAtIndex(&self, plane_index: NSUInteger) -> NSInteger;

        #[method(bytesPerRowOfPlaneAtIndex:)]
        pub unsafe fn bytesPerRowOfPlaneAtIndex(&self, plane_index: NSUInteger) -> NSInteger;

        #[method(bytesPerElementOfPlaneAtIndex:)]
        pub unsafe fn bytesPerElementOfPlaneAtIndex(&self, plane_index: NSUInteger) -> NSInteger;

        #[method(elementWidthOfPlaneAtIndex:)]
        pub unsafe fn elementWidthOfPlaneAtIndex(&self, plane_index: NSUInteger) -> NSInteger;

        #[method(elementHeightOfPlaneAtIndex:)]
        pub unsafe fn elementHeightOfPlaneAtIndex(&self, plane_index: NSUInteger) -> NSInteger;

        #[method(baseAddressOfPlaneAtIndex:)]
        pub unsafe fn baseAddressOfPlaneAtIndex(&self, plane_index: NSUInteger) -> NonNull<c_void>;

        #[cfg(feature = "objc2-foundation")]
        #[method(setAttachment:forKey:)]
        pub unsafe fn setAttachment_forKey(&self, an_object: &AnyObject, key: &NSString);

        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__retain_semantics Other attachmentForKey:)]
        pub unsafe fn attachmentForKey(&self, key: &NSString) -> Option<Retained<AnyObject>>;

        #[cfg(feature = "objc2-foundation")]
        #[method(removeAttachmentForKey:)]
        pub unsafe fn removeAttachmentForKey(&self, key: &NSString);

        #[cfg(feature = "objc2-foundation")]
        #[method(setAllAttachments:)]
        pub unsafe fn setAllAttachments(&self, dict: &NSDictionary<NSString, AnyObject>);

        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__retain_semantics Other allAttachments)]
        pub unsafe fn allAttachments(&self) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[method(removeAllAttachments)]
        pub unsafe fn removeAllAttachments(&self);

        #[method(isInUse)]
        pub unsafe fn isInUse(&self) -> bool;

        #[method(incrementUseCount)]
        pub unsafe fn incrementUseCount(&self);

        #[method(decrementUseCount)]
        pub unsafe fn decrementUseCount(&self);

        #[method(localUseCount)]
        pub unsafe fn localUseCount(&self) -> i32;

        #[method(allowsPixelSizeCasting)]
        pub unsafe fn allowsPixelSizeCasting(&self) -> bool;

        #[cfg(all(feature = "IOSurfaceTypes", feature = "libc"))]
        #[method(setPurgeable:oldState:)]
        pub unsafe fn setPurgeable_oldState(
            &self,
            new_state: IOSurfacePurgeabilityState,
            old_state: *mut IOSurfacePurgeabilityState,
        ) -> libc::kern_return_t;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl IOSurface {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacepropertyallocsizekey?language=objc)
    #[cfg(feature = "objc2-foundation")]
    pub static IOSurfacePropertyAllocSizeKey: &'static IOSurfacePropertyKey;
}
