//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceallocsize?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceAllocSize: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacewidth?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceWidth: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceheight?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceHeight: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacebytesperrow?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceBytesPerRow: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacebytesperelement?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceBytesPerElement: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceelementwidth?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceElementWidth: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceelementheight?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceElementHeight: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceoffset?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceOffset: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplaneinfo?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneInfo: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanewidth?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneWidth: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplaneheight?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneHeight: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanebytesperrow?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneBytesPerRow: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplaneoffset?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneOffset: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanesize?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneSize: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanebase?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneBase: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanebitsperelement?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneBitsPerElement: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanebytesperelement?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneBytesPerElement: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplaneelementwidth?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneElementWidth: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplaneelementheight?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneElementHeight: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacecachemode?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceCacheMode: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceisglobal?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceIsGlobal: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacepixelformat?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePixelFormat: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacepixelsizecastingallowed?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePixelSizeCastingAllowed: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanecomponentbitdepths?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneComponentBitDepths: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanecomponentbitoffsets?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneComponentBitOffsets: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacename?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceName: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacecomponentname?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct IOSurfaceComponentName(pub i32);
impl IOSurfaceComponentName {
    pub const kIOSurfaceComponentNameUnknown: Self = Self(0);
    pub const kIOSurfaceComponentNameAlpha: Self = Self(1);
    pub const kIOSurfaceComponentNameRed: Self = Self(2);
    pub const kIOSurfaceComponentNameGreen: Self = Self(3);
    pub const kIOSurfaceComponentNameBlue: Self = Self(4);
    pub const kIOSurfaceComponentNameLuma: Self = Self(5);
    pub const kIOSurfaceComponentNameChromaRed: Self = Self(6);
    pub const kIOSurfaceComponentNameChromaBlue: Self = Self(7);
}

unsafe impl Encode for IOSurfaceComponentName {
    const ENCODING: Encoding = i32::ENCODING;
}

unsafe impl RefEncode for IOSurfaceComponentName {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanecomponentnames?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneComponentNames: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacecomponenttype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct IOSurfaceComponentType(pub i32);
impl IOSurfaceComponentType {
    pub const kIOSurfaceComponentTypeUnknown: Self = Self(0);
    pub const kIOSurfaceComponentTypeUnsignedInteger: Self = Self(1);
    pub const kIOSurfaceComponentTypeSignedInteger: Self = Self(2);
    pub const kIOSurfaceComponentTypeFloat: Self = Self(3);
    pub const kIOSurfaceComponentTypeSignedNormalized: Self = Self(4);
}

unsafe impl Encode for IOSurfaceComponentType {
    const ENCODING: Encoding = i32::ENCODING;
}

unsafe impl RefEncode for IOSurfaceComponentType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanecomponenttypes?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneComponentTypes: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacecomponentrange?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct IOSurfaceComponentRange(pub i32);
impl IOSurfaceComponentRange {
    pub const kIOSurfaceComponentRangeUnknown: Self = Self(0);
    pub const kIOSurfaceComponentRangeFullRange: Self = Self(1);
    pub const kIOSurfaceComponentRangeVideoRange: Self = Self(2);
    pub const kIOSurfaceComponentRangeWideRange: Self = Self(3);
}

unsafe impl Encode for IOSurfaceComponentRange {
    const ENCODING: Encoding = i32::ENCODING;
}

unsafe impl RefEncode for IOSurfaceComponentRange {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceplanecomponentranges?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfacePlaneComponentRanges: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacesubsampling?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct IOSurfaceSubsampling(pub i32);
impl IOSurfaceSubsampling {
    pub const kIOSurfaceSubsamplingUnknown: Self = Self(0);
    pub const kIOSurfaceSubsamplingNone: Self = Self(1);
    pub const kIOSurfaceSubsampling422: Self = Self(2);
    pub const kIOSurfaceSubsampling420: Self = Self(3);
    pub const kIOSurfaceSubsampling411: Self = Self(4);
}

unsafe impl Encode for IOSurfaceSubsampling {
    const ENCODING: Encoding = i32::ENCODING;
}

unsafe impl RefEncode for IOSurfaceSubsampling {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacesubsampling?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceSubsampling: CFStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceCreate(properties: CFDictionaryRef) -> IOSurfaceRef;
}

extern "C-unwind" {
    #[cfg(feature = "IOSurfaceTypes")]
    pub fn IOSurfaceLookup(csid: IOSurfaceID) -> IOSurfaceRef;
}

extern "C-unwind" {
    #[cfg(feature = "IOSurfaceTypes")]
    pub fn IOSurfaceGetID(buffer: IOSurfaceRef) -> IOSurfaceID;
}

extern "C-unwind" {
    #[cfg(all(feature = "IOSurfaceTypes", feature = "libc"))]
    pub fn IOSurfaceLock(
        buffer: IOSurfaceRef,
        options: IOSurfaceLockOptions,
        seed: *mut u32,
    ) -> libc::kern_return_t;
}

extern "C-unwind" {
    #[cfg(all(feature = "IOSurfaceTypes", feature = "libc"))]
    pub fn IOSurfaceUnlock(
        buffer: IOSurfaceRef,
        options: IOSurfaceLockOptions,
        seed: *mut u32,
    ) -> libc::kern_return_t;
}

extern "C-unwind" {
    pub fn IOSurfaceGetAllocSize(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetWidth(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetHeight(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBytesPerElement(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBytesPerRow(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBaseAddress(buffer: IOSurfaceRef) -> NonNull<c_void>;
}

extern "C-unwind" {
    pub fn IOSurfaceGetElementWidth(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetElementHeight(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetPixelFormat(buffer: IOSurfaceRef) -> OSType;
}

extern "C-unwind" {
    pub fn IOSurfaceGetSeed(buffer: IOSurfaceRef) -> u32;
}

extern "C-unwind" {
    pub fn IOSurfaceGetPlaneCount(buffer: IOSurfaceRef) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetWidthOfPlane(buffer: IOSurfaceRef, plane_index: usize) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetHeightOfPlane(buffer: IOSurfaceRef, plane_index: usize) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBytesPerElementOfPlane(buffer: IOSurfaceRef, plane_index: usize) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBytesPerRowOfPlane(buffer: IOSurfaceRef, plane_index: usize) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBaseAddressOfPlane(
        buffer: IOSurfaceRef,
        plane_index: usize,
    ) -> NonNull<c_void>;
}

extern "C-unwind" {
    pub fn IOSurfaceGetElementWidthOfPlane(buffer: IOSurfaceRef, plane_index: usize) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetElementHeightOfPlane(buffer: IOSurfaceRef, plane_index: usize) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetNumberOfComponentsOfPlane(buffer: IOSurfaceRef, plane_index: usize)
        -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetNameOfComponentOfPlane(
        buffer: IOSurfaceRef,
        plane_index: usize,
        component_index: usize,
    ) -> IOSurfaceComponentName;
}

extern "C-unwind" {
    pub fn IOSurfaceGetTypeOfComponentOfPlane(
        buffer: IOSurfaceRef,
        plane_index: usize,
        component_index: usize,
    ) -> IOSurfaceComponentType;
}

extern "C-unwind" {
    pub fn IOSurfaceGetRangeOfComponentOfPlane(
        buffer: IOSurfaceRef,
        plane_index: usize,
        component_index: usize,
    ) -> IOSurfaceComponentRange;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBitDepthOfComponentOfPlane(
        buffer: IOSurfaceRef,
        plane_index: usize,
        component_index: usize,
    ) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetBitOffsetOfComponentOfPlane(
        buffer: IOSurfaceRef,
        plane_index: usize,
        component_index: usize,
    ) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceGetSubsampling(buffer: IOSurfaceRef) -> IOSurfaceSubsampling;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacecolorspace?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceColorSpace: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfaceiccprofile?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceICCProfile: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/iosurface/kiosurfacecontentheadroom?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kIOSurfaceContentHeadroom: CFStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceSetValue(buffer: IOSurfaceRef, key: CFStringRef, value: CFTypeRef);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceCopyValue(buffer: IOSurfaceRef, key: CFStringRef) -> CFTypeRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceRemoveValue(buffer: IOSurfaceRef, key: CFStringRef);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceSetValues(buffer: IOSurfaceRef, keys_and_values: CFDictionaryRef);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceCopyAllValues(buffer: IOSurfaceRef) -> CFDictionaryRef;
}

extern "C-unwind" {
    pub fn IOSurfaceRemoveAllValues(buffer: IOSurfaceRef);
}

extern "C-unwind" {
    #[cfg(feature = "libc")]
    pub fn IOSurfaceCreateMachPort(buffer: IOSurfaceRef) -> libc::mach_port_t;
}

extern "C-unwind" {
    #[cfg(feature = "libc")]
    pub fn IOSurfaceLookupFromMachPort(port: libc::mach_port_t) -> IOSurfaceRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceGetPropertyMaximum(property: CFStringRef) -> usize;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceGetPropertyAlignment(property: CFStringRef) -> usize;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn IOSurfaceAlignProperty(property: CFStringRef, value: usize) -> usize;
}

extern "C-unwind" {
    pub fn IOSurfaceIncrementUseCount(buffer: IOSurfaceRef);
}

extern "C-unwind" {
    pub fn IOSurfaceDecrementUseCount(buffer: IOSurfaceRef);
}

extern "C-unwind" {
    pub fn IOSurfaceGetUseCount(buffer: IOSurfaceRef) -> i32;
}

extern "C-unwind" {
    pub fn IOSurfaceIsInUse(buffer: IOSurfaceRef) -> Boolean;
}

extern "C-unwind" {
    pub fn IOSurfaceAllowsPixelSizeCasting(buffer: IOSurfaceRef) -> Boolean;
}

extern "C-unwind" {
    #[cfg(feature = "libc")]
    pub fn IOSurfaceSetPurgeable(
        buffer: IOSurfaceRef,
        new_state: u32,
        old_state: *mut u32,
    ) -> libc::kern_return_t;
}

/// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacememoryledgertags?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct IOSurfaceMemoryLedgerTags(pub c_int);
impl IOSurfaceMemoryLedgerTags {
    pub const kIOSurfaceMemoryLedgerTagDefault: Self = Self(0x00000001);
    pub const kIOSurfaceMemoryLedgerTagNetwork: Self = Self(0x00000002);
    pub const kIOSurfaceMemoryLedgerTagMedia: Self = Self(0x00000003);
    pub const kIOSurfaceMemoryLedgerTagGraphics: Self = Self(0x00000004);
    pub const kIOSurfaceMemoryLedgerTagNeural: Self = Self(0x00000005);
}

unsafe impl Encode for IOSurfaceMemoryLedgerTags {
    const ENCODING: Encoding = c_int::ENCODING;
}

unsafe impl RefEncode for IOSurfaceMemoryLedgerTags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/iosurface/iosurfacememoryledgerflags?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct IOSurfaceMemoryLedgerFlags(pub u32);
bitflags::bitflags! {
    impl IOSurfaceMemoryLedgerFlags: u32 {
        const kIOSurfaceMemoryLedgerFlagNoFootprint = 1<<0;
    }
}

unsafe impl Encode for IOSurfaceMemoryLedgerFlags {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for IOSurfaceMemoryLedgerFlags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
