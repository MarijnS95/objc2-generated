//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-io-kit")]
use objc2_io_kit::*;

use crate::*;

/// Encapsulates descriptors for a single endpoint
///
/// The IOUSBHostIOSourceDescriptors struct is used to initialize and adjust
/// pipes in the system. The bcdUSB member must be initialized to the USB revision
/// supported by the device. Acceptable values are 0x0110, 0x0200, 0x0300, 0x0310. The
/// descriptor member must always be initialized with a valid endpoint descriptor. The
/// ssCompanionDescriptor and sspCompanionDescriptor members may be
/// required for bcdUSB versions 0x0300 and greater, depending on device operating
/// speed and values set in the descriptors.  See USB 3.1 ยง 9.5 for more information on
/// when these descriptors may be required.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/iousbhost/iousbhostiosourcedescriptors?language=objc)
#[cfg(feature = "objc2-io-kit")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct IOUSBHostIOSourceDescriptors {
    pub bcdUSB: u16,
    pub descriptor: IOUSBEndpointDescriptor,
    pub ssCompanionDescriptor: IOUSBSuperSpeedEndpointCompanionDescriptor,
    pub sspCompanionDescriptor: IOUSBSuperSpeedPlusIsochronousEndpointCompanionDescriptor,
}

#[cfg(feature = "objc2-io-kit")]
unsafe impl Encode for IOUSBHostIOSourceDescriptors {
    const ENCODING: Encoding = Encoding::Struct(
        "IOUSBHostIOSourceDescriptors",
        &[
            <u16>::ENCODING,
            <IOUSBEndpointDescriptor>::ENCODING,
            <IOUSBSuperSpeedEndpointCompanionDescriptor>::ENCODING,
            <IOUSBSuperSpeedPlusIsochronousEndpointCompanionDescriptor>::ENCODING,
        ],
    );
}

#[cfg(feature = "objc2-io-kit")]
unsafe impl RefEncode for IOUSBHostIOSourceDescriptors {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// The abstract class IOUSBHostPipe and IOUSBHostStream derive from.
    ///
    /// Defines common methods that are shared between IOUSBHostPipe and IOUSBHostStream.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/iousbhost/iousbhostiosource?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct IOUSBHostIOSource;
);

unsafe impl NSObjectProtocol for IOUSBHostIOSource {}

impl IOUSBHostIOSource {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "IOUSBHostInterface", feature = "IOUSBHostObject"))]
        /// Retrieve the source's IOUSBHostInterface
        ///
        /// Returns: IOUSBHostInterface pointer that the IOSource was created from.
        #[unsafe(method(hostInterface))]
        #[unsafe(method_family = none)]
        pub unsafe fn hostInterface(&self) -> Retained<IOUSBHostInterface>;

        /// Retrieve the device's address
        ///
        /// Returns: Current address of the device
        #[unsafe(method(deviceAddress))]
        #[unsafe(method_family = none)]
        pub unsafe fn deviceAddress(&self) -> NSUInteger;

        /// Retrieve the IOSource's endpoint address
        ///
        /// Returns: Current address of the endpoint
        #[unsafe(method(endpointAddress))]
        #[unsafe(method_family = none)]
        pub unsafe fn endpointAddress(&self) -> NSUInteger;
    );
}

/// Methods declared on superclass `NSObject`.
impl IOUSBHostIOSource {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
