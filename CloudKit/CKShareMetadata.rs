//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/cloudkit/cksharemetadata?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CKShareMetadata;
);

unsafe impl NSCoding for CKShareMetadata {}

unsafe impl NSCopying for CKShareMetadata {}

unsafe impl CopyingHelper for CKShareMetadata {
    type Result = Self;
}

unsafe impl NSObjectProtocol for CKShareMetadata {}

unsafe impl NSSecureCoding for CKShareMetadata {}

extern_methods!(
    unsafe impl CKShareMetadata {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__method_family Other containerIdentifier)]
        pub unsafe fn containerIdentifier(&self) -> Retained<NSString>;

        #[cfg(all(feature = "CKRecord", feature = "CKShare"))]
        #[method_id(@__method_family Other share)]
        pub unsafe fn share(&self) -> Retained<CKShare>;

        #[cfg(feature = "CKRecordID")]
        #[method_id(@__method_family Other hierarchicalRootRecordID)]
        pub unsafe fn hierarchicalRootRecordID(&self) -> Option<Retained<CKRecordID>>;

        #[cfg(feature = "CKShareParticipant")]
        /// These properties reflect the participant properties of the user invoking CKFetchShareMetadataOperation
        #[method(participantRole)]
        pub unsafe fn participantRole(&self) -> CKShareParticipantRole;

        #[cfg(feature = "CKShareParticipant")]
        #[method(participantStatus)]
        pub unsafe fn participantStatus(&self) -> CKShareParticipantAcceptanceStatus;

        #[cfg(feature = "CKShareParticipant")]
        #[method(participantPermission)]
        pub unsafe fn participantPermission(&self) -> CKShareParticipantPermission;

        #[cfg(feature = "CKUserIdentity")]
        #[method_id(@__method_family Other ownerIdentity)]
        pub unsafe fn ownerIdentity(&self) -> Retained<CKUserIdentity>;

        #[cfg(feature = "CKRecord")]
        /// This is only present if the share metadata was returned from a CKFetchShareMetadataOperation with shouldFetchRootRecord set to YES
        #[method_id(@__method_family Other rootRecord)]
        pub unsafe fn rootRecord(&self) -> Option<Retained<CKRecord>>;

        #[cfg(feature = "CKShareParticipant")]
        #[deprecated]
        #[method(participantType)]
        pub unsafe fn participantType(&self) -> CKShareParticipantType;

        #[cfg(feature = "CKRecordID")]
        #[deprecated]
        #[method_id(@__method_family Other rootRecordID)]
        pub unsafe fn rootRecordID(&self) -> Retained<CKRecordID>;
    }
);
