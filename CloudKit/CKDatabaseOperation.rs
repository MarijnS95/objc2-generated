//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/cloudkit/ckdatabaseoperation?language=objc)
    #[unsafe(super(CKOperation, NSOperation, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CKOperation")]
    pub struct CKDatabaseOperation;
);

#[cfg(feature = "CKOperation")]
unsafe impl NSObjectProtocol for CKDatabaseOperation {}

extern_methods!(
    #[cfg(feature = "CKOperation")]
    unsafe impl CKDatabaseOperation {
        #[cfg(feature = "CKDatabase")]
        /// The database on which to perform the operation.
        ///
        ///
        /// If no database is set,
        ///
        /// ```text
        ///  [self.container privateCloudDatabase]
        /// ```
        ///
        /// is used.
        /// This will also set the container property of the operation's configuration to match the container of the passed-in database.
        #[method_id(database)]
        #[unsafe(method_family = none)]
        pub unsafe fn database(&self) -> Option<Retained<CKDatabase>>;

        #[cfg(feature = "CKDatabase")]
        /// Setter for [`database`][Self::database].
        #[method(setDatabase:)]
        pub unsafe fn setDatabase(&self, database: Option<&CKDatabase>);
    }
);

extern_methods!(
    /// Methods declared on superclass `CKOperation`
    #[cfg(feature = "CKOperation")]
    unsafe impl CKDatabaseOperation {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CKOperation")]
    unsafe impl CKDatabaseOperation {
        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
