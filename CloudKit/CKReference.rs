//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CKReferenceAction(pub NSUInteger);
impl CKReferenceAction {
    #[doc(alias = "CKReferenceActionNone")]
    pub const None: Self = Self(0);
    #[doc(alias = "CKReferenceActionDeleteSelf")]
    pub const DeleteSelf: Self = Self(1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for CKReferenceAction {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for CKReferenceAction {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CKReference;

    unsafe impl ClassType for CKReference {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl Send for CKReference {}

unsafe impl Sync for CKReference {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCoding for CKReference {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCopying for CKReference {}

unsafe impl NSObjectProtocol for CKReference {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSSecureCoding for CKReference {}

extern_methods!(
    unsafe impl CKReference {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(feature = "CloudKit_CKRecordID")]
        #[method_id(@__retain_semantics Init initWithRecordID:action:)]
        pub unsafe fn initWithRecordID_action(
            this: Allocated<Self>,
            record_id: &CKRecordID,
            action: CKReferenceAction,
        ) -> Id<Self>;

        #[cfg(feature = "CloudKit_CKRecord")]
        #[method_id(@__retain_semantics Init initWithRecord:action:)]
        pub unsafe fn initWithRecord_action(
            this: Allocated<Self>,
            record: &CKRecord,
            action: CKReferenceAction,
        ) -> Id<Self>;

        #[method(referenceAction)]
        pub unsafe fn referenceAction(&self) -> CKReferenceAction;

        #[cfg(feature = "CloudKit_CKRecordID")]
        #[method_id(@__retain_semantics Other recordID)]
        pub unsafe fn recordID(&self) -> Id<CKRecordID>;
    }
);
