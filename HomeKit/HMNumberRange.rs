//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// This class describes a range of numbers: [min, max]
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/homekit/hmnumberrange?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HMNumberRange;
);

unsafe impl Send for HMNumberRange {}

unsafe impl Sync for HMNumberRange {}

unsafe impl NSObjectProtocol for HMNumberRange {}

extern_methods!(
    unsafe impl HMNumberRange {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// Initializes a new range of numbers
        ///
        ///
        /// Parameter `minValue`: The minimum value of the range.
        ///
        ///
        /// Parameter `maxValue`: The maximum value of the range.
        #[method_id(@__retain_semantics Other numberRangeWithMinValue:maxValue:)]
        pub unsafe fn numberRangeWithMinValue_maxValue(
            min_value: &NSNumber,
            max_value: &NSNumber,
        ) -> Retained<Self>;

        /// Initializes a new range of numbers. The maximum value is set to a large value.
        ///
        ///
        /// Parameter `minValue`: The minimum value of the range.
        #[method_id(@__retain_semantics Other numberRangeWithMinValue:)]
        pub unsafe fn numberRangeWithMinValue(min_value: &NSNumber) -> Retained<Self>;

        /// Initializes a new range of numbers. The minimum value is set to a small value.
        ///
        ///
        /// Parameter `maxValue`: The maximum value of the range.
        #[method_id(@__retain_semantics Other numberRangeWithMaxValue:)]
        pub unsafe fn numberRangeWithMaxValue(max_value: &NSNumber) -> Retained<Self>;

        /// The minimum value of the range.
        #[method_id(@__retain_semantics Other minValue)]
        pub unsafe fn minValue(&self) -> Option<Retained<NSNumber>>;

        /// The maximum value of the range.
        #[method_id(@__retain_semantics Other maxValue)]
        pub unsafe fn maxValue(&self) -> Option<Retained<NSNumber>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HMNumberRange {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
