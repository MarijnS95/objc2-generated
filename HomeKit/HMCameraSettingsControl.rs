//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// This class can be used to control the settings on a camera.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol?language=objc)
    #[unsafe(super(HMCameraControl, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HMCameraControl")]
    pub struct HMCameraSettingsControl;
);

#[cfg(feature = "HMCameraControl")]
unsafe impl Send for HMCameraSettingsControl {}

#[cfg(feature = "HMCameraControl")]
unsafe impl Sync for HMCameraSettingsControl {}

#[cfg(feature = "HMCameraControl")]
unsafe impl NSObjectProtocol for HMCameraSettingsControl {}

extern_methods!(
    #[cfg(feature = "HMCameraControl")]
    unsafe impl HMCameraSettingsControl {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to night vision setting on the camera.
        #[method(nightVision)]
        #[unsafe(method_family = none)]
        pub unsafe fn nightVision(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to current horizontal tilt setting on the camera.
        #[method(currentHorizontalTilt)]
        #[unsafe(method_family = none)]
        pub unsafe fn currentHorizontalTilt(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to target horizontal tilt setting on the camera.
        #[method(targetHorizontalTilt)]
        #[unsafe(method_family = none)]
        pub unsafe fn targetHorizontalTilt(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to current vertical tilt setting on the camera.
        #[method(currentVerticalTilt)]
        #[unsafe(method_family = none)]
        pub unsafe fn currentVerticalTilt(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to target vertical tilt setting on the camera.
        #[method(targetVerticalTilt)]
        #[unsafe(method_family = none)]
        pub unsafe fn targetVerticalTilt(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to optical zoom setting on the camera.
        #[method(opticalZoom)]
        #[unsafe(method_family = none)]
        pub unsafe fn opticalZoom(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to digital zoom setting on the camera.
        #[method(digitalZoom)]
        #[unsafe(method_family = none)]
        pub unsafe fn digitalZoom(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to image rotation setting on the camera.
        #[method(imageRotation)]
        #[unsafe(method_family = none)]
        pub unsafe fn imageRotation(&self) -> Option<Retained<HMCharacteristic>>;

        #[cfg(feature = "HMCharacteristic")]
        /// Characteristic corresponding to image mirroring setting on the camera.
        #[method(imageMirroring)]
        #[unsafe(method_family = none)]
        pub unsafe fn imageMirroring(&self) -> Option<Retained<HMCharacteristic>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "HMCameraControl")]
    unsafe impl HMCameraSettingsControl {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
