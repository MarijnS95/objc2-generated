//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A class that holds various parameters related to a passkey credential request.
    /// This class is provided by the system to the credential provider extension when there is an active passkey request as part of
    /// -[ASCredentialProviderViewController prepareCredentialListForServiceIdentifiers:requestParameters:] and should be used
    /// to construct a passkey credential response using the item selected by the user from the extension's UI.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/aspasskeycredentialrequestparameters?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASPasskeyCredentialRequestParameters;
);

unsafe impl Send for ASPasskeyCredentialRequestParameters {}

unsafe impl Sync for ASPasskeyCredentialRequestParameters {}

unsafe impl NSCoding for ASPasskeyCredentialRequestParameters {}

unsafe impl NSCopying for ASPasskeyCredentialRequestParameters {}

unsafe impl CopyingHelper for ASPasskeyCredentialRequestParameters {
    type Result = Self;
}

unsafe impl NSObjectProtocol for ASPasskeyCredentialRequestParameters {}

unsafe impl NSSecureCoding for ASPasskeyCredentialRequestParameters {}

extern_methods!(
    unsafe impl ASPasskeyCredentialRequestParameters {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// The relying party identifier for this request.
        #[unsafe(method_family(none))]
        #[method_id(relyingPartyIdentifier)]
        pub unsafe fn relyingPartyIdentifier(&self) -> Retained<NSString>;

        /// Hash of client data for credential provider to sign as part of the operation.
        #[unsafe(method_family(none))]
        #[method_id(clientDataHash)]
        pub unsafe fn clientDataHash(&self) -> Retained<NSData>;

        #[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
        /// A preference for whether the authenticator should attempt to verify that it is being used by its owner, such as through a PIN or biometrics.
        #[unsafe(method_family(none))]
        #[method_id(userVerificationPreference)]
        pub unsafe fn userVerificationPreference(
            &self,
        ) -> Retained<ASAuthorizationPublicKeyCredentialUserVerificationPreference>;

        /// A list of allowed credential IDs for this request. An empty list means all credentials are allowed.
        #[unsafe(method_family(none))]
        #[method_id(allowedCredentials)]
        pub unsafe fn allowedCredentials(&self) -> Retained<NSArray<NSData>>;

        #[cfg(feature = "ASPasskeyAssertionCredentialExtensionInput")]
        /// Inputs for WebAuthn extensions used for passkey assertion.
        #[unsafe(method_family(none))]
        #[method_id(extensionInput)]
        pub unsafe fn extensionInput(
            &self,
        ) -> Option<Retained<ASPasskeyAssertionCredentialExtensionInput>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl ASPasskeyCredentialRequestParameters {
        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
