//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest?language=objc)
    #[unsafe(super(ASAuthorizationRequest, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "ASAuthorizationRequest")]
    pub struct ASAuthorizationPlatformPublicKeyCredentialAssertionRequest;
);

#[cfg(all(
    feature = "ASAuthorizationPublicKeyCredentialAssertionRequest",
    feature = "ASAuthorizationRequest"
))]
unsafe impl ASAuthorizationPublicKeyCredentialAssertionRequest
    for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest
{
}

#[cfg(feature = "ASAuthorizationRequest")]
unsafe impl NSCoding for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {}

#[cfg(feature = "ASAuthorizationRequest")]
unsafe impl NSCopying for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {}

#[cfg(feature = "ASAuthorizationRequest")]
unsafe impl CopyingHelper for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {
    type Result = Self;
}

#[cfg(feature = "ASAuthorizationRequest")]
unsafe impl NSObjectProtocol for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {}

#[cfg(feature = "ASAuthorizationRequest")]
unsafe impl NSSecureCoding for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {}

extern_methods!(
    #[cfg(feature = "ASAuthorizationRequest")]
    unsafe impl ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {
        #[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialDescriptor")]
        /// A list of credentials to allow for this request. If this ilist is nonempty, only credentials matching the provided descriptors can be used to sign in.
        #[method_id(@__retain_semantics Other allowedCredentials)]
        pub unsafe fn allowedCredentials(
            &self,
        ) -> Retained<NSArray<ASAuthorizationPlatformPublicKeyCredentialDescriptor>>;

        #[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialDescriptor")]
        /// Setter for [`allowedCredentials`][Self::allowedCredentials].
        #[method(setAllowedCredentials:)]
        pub unsafe fn setAllowedCredentials(
            &self,
            allowed_credentials: &NSArray<ASAuthorizationPlatformPublicKeyCredentialDescriptor>,
        );

        #[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput")]
        #[method_id(@__retain_semantics Other largeBlob)]
        pub unsafe fn largeBlob(
            &self,
        ) -> Option<Retained<ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput>>;

        #[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput")]
        /// Setter for [`largeBlob`][Self::largeBlob].
        #[method(setLargeBlob:)]
        pub unsafe fn setLargeBlob(
            &self,
            large_blob: Option<&ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput>,
        );

        #[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFAssertionInput")]
        #[method_id(@__retain_semantics Other prf)]
        pub unsafe fn prf(
            &self,
        ) -> Option<Retained<ASAuthorizationPublicKeyCredentialPRFAssertionInput>>;

        #[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFAssertionInput")]
        /// Setter for [`prf`][Self::prf].
        #[method(setPrf:)]
        pub unsafe fn setPrf(
            &self,
            prf: Option<&ASAuthorizationPublicKeyCredentialPRFAssertionInput>,
        );

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    #[cfg(feature = "ASAuthorizationRequest")]
    unsafe impl ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {}
);

#[cfg(all(
    feature = "ASAuthorizationRequest",
    feature = "ASAuthorizationWebBrowserExternallyAuthenticatableRequest"
))]
unsafe impl ASAuthorizationWebBrowserExternallyAuthenticatableRequest
    for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest
{
}

extern_methods!(
    #[cfg(feature = "ASAuthorizationRequest")]
    unsafe impl ASAuthorizationPlatformPublicKeyCredentialAssertionRequest {}
);

#[cfg(all(
    feature = "ASAuthorizationRequest",
    feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest"
))]
unsafe impl ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest
    for ASAuthorizationPlatformPublicKeyCredentialAssertionRequest
{
}
