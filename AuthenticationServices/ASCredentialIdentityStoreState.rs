//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/ascredentialidentitystorestate?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASCredentialIdentityStoreState;
);

unsafe impl NSObjectProtocol for ASCredentialIdentityStoreState {}

extern_methods!(
    unsafe impl ASCredentialIdentityStoreState {
        /// Get the enabled state of the credential identity store.
        ///
        /// Returns: YES if the credential identity store is enabled.
        ///
        /// You can only modify the credential identity store when it is enabled.
        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        /// Get whether the credential identity store supports incremental updates.
        ///
        /// Returns: YES if the credential identity store supports incremental updates.
        ///
        /// You should examine the value returned by this property to find out if
        /// the credential identity store can accept incremental updates. If incremental updates
        /// are supported, you can update the credential identity store with only the new changes
        /// since the last time it was updated. Otherwise, you should update the credential identity
        /// store by adding all credential identities.
        #[method(supportsIncrementalUpdates)]
        pub unsafe fn supportsIncrementalUpdates(&self) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl ASCredentialIdentityStoreState {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
