//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertion?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASAuthorizationSecurityKeyPublicKeyCredentialAssertion;
);

#[cfg(feature = "ASAuthorizationCredential")]
extern_conformance!(
    unsafe impl ASAuthorizationCredential for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {}
);

#[cfg(all(
    feature = "ASAuthorizationCredential",
    feature = "ASAuthorizationPublicKeyCredentialAssertion",
    feature = "ASPublicKeyCredential"
))]
extern_conformance!(
    unsafe impl ASAuthorizationPublicKeyCredentialAssertion
        for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
    {
    }
);

#[cfg(all(
    feature = "ASAuthorizationCredential",
    feature = "ASPublicKeyCredential"
))]
extern_conformance!(
    unsafe impl ASPublicKeyCredential for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {}
);

extern_conformance!(
    unsafe impl NSCoding for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {}
);

extern_conformance!(
    unsafe impl NSCopying for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {}
);

unsafe impl CopyingHelper for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {}
);

impl ASAuthorizationSecurityKeyPublicKeyCredentialAssertion {
    extern_methods!(
        /// Indicates that this assertion used the appid WebAuthn extension.
        /// This can only happen if the requesting app is a web browser and requested to use this extension.
        #[unsafe(method(appID))]
        #[unsafe(method_family = none)]
        pub unsafe fn appID(&self) -> bool;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}
