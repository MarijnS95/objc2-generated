//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "block2")]
use block2::*;
use objc2::__framework_prelude::*;
use objc2_app_kit::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASAccountAuthenticationModificationExtensionContext;

    unsafe impl ClassType for ASAccountAuthenticationModificationExtensionContext {
        #[inherits(NSObject)]
        type Super = NSExtensionContext;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for ASAccountAuthenticationModificationExtensionContext {}

extern_methods!(
    unsafe impl ASAccountAuthenticationModificationExtensionContext {
        #[cfg(all(feature = "ASAuthorizationAppleIDCredential", feature = "block2"))]
        #[method(getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:)]
        pub unsafe fn getSignInWithAppleUpgradeAuthorizationWithState_nonce_completionHandler(
            &self,
            state: Option<&NSString>,
            nonce: Option<&NSString>,
            completion_handler: &Block<dyn Fn(*mut ASAuthorizationAppleIDCredential, *mut NSError)>,
        );

        #[method(completeUpgradeToSignInWithAppleWithUserInfo:)]
        pub unsafe fn completeUpgradeToSignInWithAppleWithUserInfo(
            &self,
            user_info: Option<&NSDictionary>,
        );

        #[cfg(feature = "ASPasswordCredential")]
        #[method(completeChangePasswordRequestWithUpdatedCredential:userInfo:)]
        pub unsafe fn completeChangePasswordRequestWithUpdatedCredential_userInfo(
            &self,
            updated_credential: &ASPasswordCredential,
            user_info: Option<&NSDictionary>,
        );

        #[method(cancelRequestWithError:)]
        pub unsafe fn cancelRequestWithError(&self, error: &NSError);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl ASAccountAuthenticationModificationExtensionContext {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
