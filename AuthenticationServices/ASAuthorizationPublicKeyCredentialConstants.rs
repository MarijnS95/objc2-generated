//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

// NS_TYPED_EXTENSIBLE_ENUM
#[cfg(feature = "Foundation_NSString")]
pub type ASAuthorizationPublicKeyCredentialUserVerificationPreference = NSString;

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialUserVerificationPreferencePreferred:
        Option<&'static ASAuthorizationPublicKeyCredentialUserVerificationPreference>;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialUserVerificationPreferenceRequired:
        Option<&'static ASAuthorizationPublicKeyCredentialUserVerificationPreference>;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialUserVerificationPreferenceDiscouraged:
        Option<&'static ASAuthorizationPublicKeyCredentialUserVerificationPreference>;
}

// NS_TYPED_EXTENSIBLE_ENUM
#[cfg(feature = "Foundation_NSString")]
pub type ASAuthorizationPublicKeyCredentialAttestationKind = NSString;

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialAttestationKindNone:
        Option<&'static ASAuthorizationPublicKeyCredentialAttestationKind>;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialAttestationKindDirect:
        Option<&'static ASAuthorizationPublicKeyCredentialAttestationKind>;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialAttestationKindIndirect:
        Option<&'static ASAuthorizationPublicKeyCredentialAttestationKind>;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialAttestationKindEnterprise:
        Option<&'static ASAuthorizationPublicKeyCredentialAttestationKind>;
}

// NS_TYPED_EXTENSIBLE_ENUM
#[cfg(feature = "Foundation_NSString")]
pub type ASAuthorizationPublicKeyCredentialResidentKeyPreference = NSString;

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialResidentKeyPreferenceDiscouraged:
        Option<&'static ASAuthorizationPublicKeyCredentialResidentKeyPreference>;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred:
        Option<&'static ASAuthorizationPublicKeyCredentialResidentKeyPreference>;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static ASAuthorizationPublicKeyCredentialResidentKeyPreferenceRequired:
        Option<&'static ASAuthorizationPublicKeyCredentialResidentKeyPreference>;
}

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ASAuthorizationPublicKeyCredentialAttachment(pub NSInteger);
impl ASAuthorizationPublicKeyCredentialAttachment {
    #[doc(alias = "ASAuthorizationPublicKeyCredentialAttachmentPlatform")]
    pub const Platform: Self = Self(0);
    #[doc(alias = "ASAuthorizationPublicKeyCredentialAttachmentCrossPlatform")]
    pub const CrossPlatform: Self = Self(1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ASAuthorizationPublicKeyCredentialAttachment {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ASAuthorizationPublicKeyCredentialAttachment {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
