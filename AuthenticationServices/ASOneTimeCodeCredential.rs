//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/asonetimecodecredential?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASOneTimeCodeCredential;
);

#[cfg(feature = "ASAuthorizationCredential")]
unsafe impl ASAuthorizationCredential for ASOneTimeCodeCredential {}

unsafe impl NSCoding for ASOneTimeCodeCredential {}

unsafe impl NSCopying for ASOneTimeCodeCredential {}

unsafe impl CopyingHelper for ASOneTimeCodeCredential {
    type Result = Self;
}

unsafe impl NSObjectProtocol for ASOneTimeCodeCredential {}

unsafe impl NSSecureCoding for ASOneTimeCodeCredential {}

extern_methods!(
    unsafe impl ASOneTimeCodeCredential {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// Creates and initializes a new ASOneTimeCodeCredential object.
        ///
        /// Parameter `code`: the one time code.
        #[unsafe(method_family(none))]
        #[method_id(credentialWithCode:)]
        pub unsafe fn credentialWithCode(code: &NSString) -> Retained<Self>;

        /// Initializes an ASOneTimeCodeCredential object.
        ///
        /// Parameter `code`: the one time code.
        #[unsafe(method_family(init))]
        #[method_id(initWithCode:)]
        pub unsafe fn initWithCode(this: Allocated<Self>, code: &NSString) -> Retained<Self>;

        /// The code of this credential.
        ///
        /// Returns: The code string.
        #[unsafe(method_family(none))]
        #[method_id(code)]
        pub unsafe fn code(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl ASOneTimeCodeCredential {
        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
