//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement(pub NSInteger);
impl ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement {
    #[doc(alias = "ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirementRequired")]
    pub const Required: Self = Self(0);
    #[doc(alias = "ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirementPreferred")]
    pub const Preferred: Self = Self(1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput;

    unsafe impl ClassType for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput {}

extern_methods!(
    unsafe impl ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput {
        #[method_id(@__retain_semantics Init initWithSupportRequirement:)]
        pub unsafe fn initWithSupportRequirement(
            this: Allocated<Self>,
            requirement: ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method(supportRequirement)]
        pub unsafe fn supportRequirement(
            &self,
        ) -> ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement;

        #[method(setSupportRequirement:)]
        pub unsafe fn setSupportRequirement(
            &self,
            support_requirement: ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement,
        );
    }
);
