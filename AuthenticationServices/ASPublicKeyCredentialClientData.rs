//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ASPublicKeyCredentialClientDataCrossOriginValue(pub NSInteger);
impl ASPublicKeyCredentialClientDataCrossOriginValue {
    #[doc(alias = "ASPublicKeyCredentialClientDataCrossOriginValueNotSet")]
    pub const NotSet: Self = Self(0);
    #[doc(alias = "ASPublicKeyCredentialClientDataCrossOriginValueCrossOrigin")]
    pub const CrossOrigin: Self = Self(1);
    #[doc(alias = "ASPublicKeyCredentialClientDataCrossOriginValueSameOriginWithAncestors")]
    pub const SameOriginWithAncestors: Self = Self(2);
}

unsafe impl Encode for ASPublicKeyCredentialClientDataCrossOriginValue {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for ASPublicKeyCredentialClientDataCrossOriginValue {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASPublicKeyCredentialClientData;

    unsafe impl ClassType for ASPublicKeyCredentialClientData {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for ASPublicKeyCredentialClientData {}

extern_methods!(
    unsafe impl ASPublicKeyCredentialClientData {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithChallenge:origin:)]
        pub unsafe fn initWithChallenge_origin(
            this: Allocated<Self>,
            challenge: &NSData,
            origin: &NSString,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other challenge)]
        pub unsafe fn challenge(&self) -> Retained<NSData>;

        #[method(setChallenge:)]
        pub unsafe fn setChallenge(&self, challenge: &NSData);

        #[method_id(@__retain_semantics Other origin)]
        pub unsafe fn origin(&self) -> Retained<NSString>;

        #[method(setOrigin:)]
        pub unsafe fn setOrigin(&self, origin: &NSString);

        #[method_id(@__retain_semantics Other topOrigin)]
        pub unsafe fn topOrigin(&self) -> Option<Retained<NSString>>;

        #[method(setTopOrigin:)]
        pub unsafe fn setTopOrigin(&self, top_origin: Option<&NSString>);

        #[method(crossOrigin)]
        pub unsafe fn crossOrigin(&self) -> ASPublicKeyCredentialClientDataCrossOriginValue;

        #[method(setCrossOrigin:)]
        pub unsafe fn setCrossOrigin(
            &self,
            cross_origin: ASPublicKeyCredentialClientDataCrossOriginValue,
        );
    }
);
