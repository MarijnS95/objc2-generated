//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

#[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
extern_static!(ASCredentialIdentityStoreErrorDomain: &'static NSErrorDomain);

ns_error_enum!(
    #[underlying(NSInteger)]
    pub enum ASCredentialIdentityStoreErrorCode {
        #[doc(alias = "ASCredentialIdentityStoreErrorCodeInternalError")]
        InternalError = 0,
        #[doc(alias = "ASCredentialIdentityStoreErrorCodeStoreDisabled")]
        StoreDisabled = 1,
        #[doc(alias = "ASCredentialIdentityStoreErrorCodeStoreBusy")]
        StoreBusy = 2,
    }
);

ns_options!(
    #[underlying(NSUInteger)]
    pub enum ASCredentialIdentityTypes {
        #[doc(alias = "ASCredentialIdentityTypesAll")]
        All = 0,
        #[doc(alias = "ASCredentialIdentityTypesPassword")]
        Password = 1,
        #[doc(alias = "ASCredentialIdentityTypesPasskey")]
        Passkey = 1 << 1,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASCredentialIdentityStore;

    unsafe impl ClassType for ASCredentialIdentityStore {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for ASCredentialIdentityStore {}

extern_methods!(
    unsafe impl ASCredentialIdentityStore {
        #[method_id(@__retain_semantics Other sharedStore)]
        pub unsafe fn sharedStore() -> Id<ASCredentialIdentityStore>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[cfg(feature = "AuthenticationServices_ASCredentialIdentityStoreState")]
        #[method(getCredentialIdentityStoreStateWithCompletion:)]
        pub unsafe fn getCredentialIdentityStoreStateWithCompletion(
            &self,
            completion: &Block<dyn Fn(NonNull<ASCredentialIdentityStoreState>)>,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASCredentialIdentity",
            feature = "AuthenticationServices_ASCredentialServiceIdentifier",
            feature = "Foundation_NSArray"
        ))]
        #[method(getCredentialIdentitiesForService:credentialIdentityTypes:completionHandler:)]
        pub unsafe fn getCredentialIdentitiesForService_credentialIdentityTypes_completionHandler(
            &self,
            service_identifier: Option<&ASCredentialServiceIdentifier>,
            credential_identity_types: ASCredentialIdentityTypes,
            completion_handler: &Block<
                dyn Fn(NonNull<NSArray<ProtocolObject<dyn ASCredentialIdentity>>>),
            >,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASPasswordCredentialIdentity",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSError"
        ))]
        #[deprecated]
        #[method(saveCredentialIdentities:completion:)]
        pub unsafe fn saveCredentialIdentities_completion(
            &self,
            credential_identities: &NSArray<ASPasswordCredentialIdentity>,
            completion: Option<&Block<dyn Fn(Bool, *mut NSError)>>,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASCredentialIdentity",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSError"
        ))]
        #[method(saveCredentialIdentityEntries:completion:)]
        pub unsafe fn saveCredentialIdentityEntries_completion(
            &self,
            credential_identities: &NSArray<ProtocolObject<dyn ASCredentialIdentity>>,
            completion: Option<&Block<dyn Fn(Bool, *mut NSError)>>,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASPasswordCredentialIdentity",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSError"
        ))]
        #[deprecated]
        #[method(removeCredentialIdentities:completion:)]
        pub unsafe fn removeCredentialIdentities_completion(
            &self,
            credential_identities: &NSArray<ASPasswordCredentialIdentity>,
            completion: Option<&Block<dyn Fn(Bool, *mut NSError)>>,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASCredentialIdentity",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSError"
        ))]
        #[method(removeCredentialIdentityEntries:completion:)]
        pub unsafe fn removeCredentialIdentityEntries_completion(
            &self,
            credential_identities: &NSArray<ProtocolObject<dyn ASCredentialIdentity>>,
            completion: Option<&Block<dyn Fn(Bool, *mut NSError)>>,
        );

        #[cfg(feature = "Foundation_NSError")]
        #[method(removeAllCredentialIdentitiesWithCompletion:)]
        pub unsafe fn removeAllCredentialIdentitiesWithCompletion(
            &self,
            completion: Option<&Block<dyn Fn(Bool, *mut NSError)>>,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASPasswordCredentialIdentity",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSError"
        ))]
        #[deprecated]
        #[method(replaceCredentialIdentitiesWithIdentities:completion:)]
        pub unsafe fn replaceCredentialIdentitiesWithIdentities_completion(
            &self,
            new_credential_identities: &NSArray<ASPasswordCredentialIdentity>,
            completion: Option<&Block<dyn Fn(Bool, *mut NSError)>>,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASCredentialIdentity",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSError"
        ))]
        #[method(replaceCredentialIdentityEntries:completion:)]
        pub unsafe fn replaceCredentialIdentityEntries_completion(
            &self,
            new_credential_identities: &NSArray<ProtocolObject<dyn ASCredentialIdentity>>,
            completion: Option<&Block<dyn Fn(Bool, *mut NSError)>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl ASCredentialIdentityStore {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
