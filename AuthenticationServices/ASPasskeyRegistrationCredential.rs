//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_app_kit::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASPasskeyRegistrationCredential;

    unsafe impl ClassType for ASPasskeyRegistrationCredential {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "AuthenticationServices_ASAuthorizationCredential")]
unsafe impl ASAuthorizationCredential for ASPasskeyRegistrationCredential {}

unsafe impl NSCoding for ASPasskeyRegistrationCredential {}

unsafe impl NSCopying for ASPasskeyRegistrationCredential {}

unsafe impl NSObjectProtocol for ASPasskeyRegistrationCredential {}

unsafe impl NSSecureCoding for ASPasskeyRegistrationCredential {}

extern_methods!(
    unsafe impl ASPasskeyRegistrationCredential {
        #[method_id(@__retain_semantics Init initWithRelyingParty:clientDataHash:credentialID:attestationObject:)]
        pub unsafe fn initWithRelyingParty_clientDataHash_credentialID_attestationObject(
            this: Allocated<Self>,
            relying_party: &NSString,
            client_data_hash: &NSData,
            credential_id: &NSData,
            attestation_object: &NSData,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Other credentialWithRelyingParty:clientDataHash:credentialID:attestationObject:)]
        pub unsafe fn credentialWithRelyingParty_clientDataHash_credentialID_attestationObject(
            relying_party: &NSString,
            client_data_hash: &NSData,
            credential_id: &NSData,
            attestation_object: &NSData,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Other relyingParty)]
        pub unsafe fn relyingParty(&self) -> Id<NSString>;

        #[method_id(@__retain_semantics Other clientDataHash)]
        pub unsafe fn clientDataHash(&self) -> Id<NSData>;

        #[method_id(@__retain_semantics Other credentialID)]
        pub unsafe fn credentialID(&self) -> Id<NSData>;

        #[method_id(@__retain_semantics Other attestationObject)]
        pub unsafe fn attestationObject(&self) -> Id<NSData>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl ASPasskeyRegistrationCredential {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
