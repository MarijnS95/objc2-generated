//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

extern "C" {
    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
    pub static ASExtensionErrorDomain: Option<&'static NSErrorDomain>;
}

// NS_ERROR_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ASExtensionErrorCode(pub NSInteger);
impl ASExtensionErrorCode {
    #[doc(alias = "ASExtensionErrorCodeFailed")]
    pub const Failed: Self = Self(0);
    #[doc(alias = "ASExtensionErrorCodeUserCanceled")]
    pub const UserCanceled: Self = Self(1);
    #[doc(alias = "ASExtensionErrorCodeUserInteractionRequired")]
    pub const UserInteractionRequired: Self = Self(100);
    #[doc(alias = "ASExtensionErrorCodeCredentialIdentityNotFound")]
    pub const CredentialIdentityNotFound: Self = Self(101);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ASExtensionErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ASExtensionErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
    pub static ASExtensionLocalizedFailureReasonErrorKey: Option<&'static NSErrorUserInfoKey>;
}
