//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformoprotationorder?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MDLTransformOpRotationOrder(pub NSUInteger);
impl MDLTransformOpRotationOrder {
    #[doc(alias = "MDLTransformOpRotationOrderXYZ")]
    pub const XYZ: Self = Self(1);
    #[doc(alias = "MDLTransformOpRotationOrderXZY")]
    pub const XZY: Self = Self(2);
    #[doc(alias = "MDLTransformOpRotationOrderYXZ")]
    pub const YXZ: Self = Self(3);
    #[doc(alias = "MDLTransformOpRotationOrderYZX")]
    pub const YZX: Self = Self(4);
    #[doc(alias = "MDLTransformOpRotationOrderZXY")]
    pub const ZXY: Self = Self(5);
    #[doc(alias = "MDLTransformOpRotationOrderZYX")]
    pub const ZYX: Self = Self(6);
}

unsafe impl Encode for MDLTransformOpRotationOrder {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MDLTransformOpRotationOrder {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformop?language=objc)
    pub unsafe trait MDLTransformOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        unsafe fn name(&self) -> Retained<NSString>;

        #[unsafe(method(IsInverseOp))]
        #[unsafe(method_family = none)]
        unsafe fn IsInverseOp(&self) -> bool;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformrotatexop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformRotateXOp;
);

unsafe impl MDLTransformOp for MDLTransformRotateXOp {}

unsafe impl NSObjectProtocol for MDLTransformRotateXOp {}

extern_methods!(
    unsafe impl MDLTransformRotateXOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedScalar>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformRotateXOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformrotateyop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformRotateYOp;
);

unsafe impl MDLTransformOp for MDLTransformRotateYOp {}

unsafe impl NSObjectProtocol for MDLTransformRotateYOp {}

extern_methods!(
    unsafe impl MDLTransformRotateYOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedScalar>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformRotateYOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformrotatezop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformRotateZOp;
);

unsafe impl MDLTransformOp for MDLTransformRotateZOp {}

unsafe impl NSObjectProtocol for MDLTransformRotateZOp {}

extern_methods!(
    unsafe impl MDLTransformRotateZOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedScalar>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformRotateZOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformrotateop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformRotateOp;
);

unsafe impl MDLTransformOp for MDLTransformRotateOp {}

unsafe impl NSObjectProtocol for MDLTransformRotateOp {}

extern_methods!(
    unsafe impl MDLTransformRotateOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedVector3>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformRotateOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformtranslateop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformTranslateOp;
);

unsafe impl MDLTransformOp for MDLTransformTranslateOp {}

unsafe impl NSObjectProtocol for MDLTransformTranslateOp {}

extern_methods!(
    unsafe impl MDLTransformTranslateOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedVector3>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformTranslateOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformscaleop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformScaleOp;
);

unsafe impl MDLTransformOp for MDLTransformScaleOp {}

unsafe impl NSObjectProtocol for MDLTransformScaleOp {}

extern_methods!(
    unsafe impl MDLTransformScaleOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedVector3>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformScaleOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformmatrixop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformMatrixOp;
);

unsafe impl MDLTransformOp for MDLTransformMatrixOp {}

unsafe impl NSObjectProtocol for MDLTransformMatrixOp {}

extern_methods!(
    unsafe impl MDLTransformMatrixOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedMatrix4x4>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformMatrixOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformorientop?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformOrientOp;
);

unsafe impl MDLTransformOp for MDLTransformOrientOp {}

unsafe impl NSObjectProtocol for MDLTransformOrientOp {}

extern_methods!(
    unsafe impl MDLTransformOrientOp {
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValue(&self) -> Retained<MDLAnimatedQuaternion>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformOrientOp {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdltransformstack?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLTransformStack;
);

#[cfg(feature = "MDLTypes")]
unsafe impl MDLComponent for MDLTransformStack {}

#[cfg(all(feature = "MDLTransform", feature = "MDLTypes"))]
unsafe impl MDLTransformComponent for MDLTransformStack {}

unsafe impl NSCopying for MDLTransformStack {}

unsafe impl CopyingHelper for MDLTransformStack {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MDLTransformStack {}

extern_methods!(
    unsafe impl MDLTransformStack {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(addTranslateOp:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addTranslateOp_inverse(
            &self,
            animated_value_name: &NSString,
            inverse: bool,
        ) -> Retained<MDLTransformTranslateOp>;

        #[unsafe(method(addRotateXOp:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addRotateXOp_inverse(
            &self,
            animated_value_name: &NSString,
            inverse: bool,
        ) -> Retained<MDLTransformRotateXOp>;

        #[unsafe(method(addRotateYOp:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addRotateYOp_inverse(
            &self,
            animated_value_name: &NSString,
            inverse: bool,
        ) -> Retained<MDLTransformRotateYOp>;

        #[unsafe(method(addRotateZOp:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addRotateZOp_inverse(
            &self,
            animated_value_name: &NSString,
            inverse: bool,
        ) -> Retained<MDLTransformRotateZOp>;

        #[unsafe(method(addRotateOp:order:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addRotateOp_order_inverse(
            &self,
            animated_value_name: &NSString,
            order: MDLTransformOpRotationOrder,
            inverse: bool,
        ) -> Retained<MDLTransformRotateOp>;

        #[unsafe(method(addScaleOp:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addScaleOp_inverse(
            &self,
            animated_value_name: &NSString,
            inverse: bool,
        ) -> Retained<MDLTransformScaleOp>;

        #[unsafe(method(addMatrixOp:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addMatrixOp_inverse(
            &self,
            animated_value_name: &NSString,
            inverse: bool,
        ) -> Retained<MDLTransformMatrixOp>;

        #[unsafe(method(addOrientOp:inverse:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addOrientOp_inverse(
            &self,
            animated_value_name: &NSString,
            inverse: bool,
        ) -> Retained<MDLTransformOrientOp>;

        #[cfg(feature = "MDLAnimatedValueTypes")]
        #[unsafe(method(animatedValueWithName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn animatedValueWithName(&self, name: &NSString) -> Retained<MDLAnimatedValue>;

        #[unsafe(method(count))]
        #[unsafe(method_family = none)]
        pub unsafe fn count(&self) -> NSUInteger;

        #[unsafe(method(keyTimes))]
        #[unsafe(method_family = none)]
        pub unsafe fn keyTimes(&self) -> Retained<NSArray<NSNumber>>;

        #[unsafe(method(transformOps))]
        #[unsafe(method_family = none)]
        pub unsafe fn transformOps(&self) -> Retained<NSArray<ProtocolObject<dyn MDLTransformOp>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLTransformStack {
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
