//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdlassetresolver?language=objc)
    pub unsafe trait MDLAssetResolver: NSObjectProtocol {
        #[method(canResolveAssetNamed:)]
        unsafe fn canResolveAssetNamed(&self, name: &NSString) -> bool;

        #[method_id(@__retain_semantics Other resolveAssetNamed:)]
        unsafe fn resolveAssetNamed(&self, name: &NSString) -> Retained<NSURL>;
    }
);

extern_class!(
    /// The relative asset resolver searches for referenced files
    /// by checking the location of the asset for sibling files
    /// satisfying the requested name.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/modelio/mdlrelativeassetresolver?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLRelativeAssetResolver;
);

unsafe impl MDLAssetResolver for MDLRelativeAssetResolver {}

unsafe impl NSObjectProtocol for MDLRelativeAssetResolver {}

extern_methods!(
    unsafe impl MDLRelativeAssetResolver {
        #[cfg(feature = "MDLAsset")]
        #[method_id(@__retain_semantics Init initWithAsset:)]
        pub unsafe fn initWithAsset(this: Allocated<Self>, asset: &MDLAsset) -> Retained<Self>;

        #[cfg(feature = "MDLAsset")]
        #[method_id(@__retain_semantics Other asset)]
        pub unsafe fn asset(&self) -> Option<Retained<MDLAsset>>;

        #[cfg(feature = "MDLAsset")]
        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`asset`][Self::asset].
        #[method(setAsset:)]
        pub unsafe fn setAsset(&self, asset: Option<&MDLAsset>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLRelativeAssetResolver {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// The path asset resolver searches for referenced files
    /// by prepending path.
    ///
    ///
    /// Path should resolve to a well formed URI. A file system
    /// path might take the form
    /// "
    /// file:///path/to/all/assets/
    ///
    /// A trailing slash is automatically appended to path if
    /// not provided.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/modelio/mdlpathassetresolver?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLPathAssetResolver;
);

unsafe impl MDLAssetResolver for MDLPathAssetResolver {}

unsafe impl NSObjectProtocol for MDLPathAssetResolver {}

extern_methods!(
    unsafe impl MDLPathAssetResolver {
        #[method_id(@__retain_semantics Init initWithPath:)]
        pub unsafe fn initWithPath(this: Allocated<Self>, path: &NSString) -> Retained<Self>;

        #[method_id(@__retain_semantics Other path)]
        pub unsafe fn path(&self) -> Retained<NSString>;

        /// Setter for [`path`][Self::path].
        #[method(setPath:)]
        pub unsafe fn setPath(&self, path: &NSString);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLPathAssetResolver {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/modelio/mdlbundleassetresolver?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MDLBundleAssetResolver;
);

unsafe impl MDLAssetResolver for MDLBundleAssetResolver {}

unsafe impl NSObjectProtocol for MDLBundleAssetResolver {}

extern_methods!(
    unsafe impl MDLBundleAssetResolver {
        #[method_id(@__retain_semantics Init initWithBundle:)]
        pub unsafe fn initWithBundle(this: Allocated<Self>, path: &NSString) -> Retained<Self>;

        #[method_id(@__retain_semantics Other path)]
        pub unsafe fn path(&self) -> Retained<NSString>;

        /// Setter for [`path`][Self::path].
        #[method(setPath:)]
        pub unsafe fn setPath(&self, path: &NSString);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MDLBundleAssetResolver {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
