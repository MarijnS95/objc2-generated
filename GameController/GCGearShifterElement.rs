//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// A
    /// `GCGearShifterElement`object represents an attached gear shifter.  Both
    /// pattern and sequential gear shifters are supported.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/gamecontroller/gcgearshifterelement?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct GCGearShifterElement;
);

#[cfg(feature = "GCPhysicalInputElement")]
unsafe impl GCPhysicalInputElement for GCGearShifterElement {}

unsafe impl NSObjectProtocol for GCGearShifterElement {}

extern_methods!(
    unsafe impl GCGearShifterElement {
        #[cfg(feature = "GCSwitchPositionInput")]
        /// Get the input reporting the position of the pattern gear shifter.  If this
        /// property is
        /// `nil,`the gear shifter is not a pattern gear shifter.
        ///
        /// In the returned input, a position of
        /// `-1`corresponds to the "reverse gear".
        /// A position of
        /// `0`corresponds to the neutral gear.
        #[unsafe(method_family(none))]
        #[method_id(patternInput)]
        pub unsafe fn patternInput(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn GCSwitchPositionInput>>>;

        #[cfg(feature = "GCRelativeInput")]
        /// Get the input reporting changes to the sequential gear shifter.  If this
        /// property is
        /// `nil,`the gear shifter is not a sequential gear shifter.
        #[unsafe(method_family(none))]
        #[method_id(sequentialInput)]
        pub unsafe fn sequentialInput(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn GCRelativeInput>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl GCGearShifterElement {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
