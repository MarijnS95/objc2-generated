//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

pub const GCDualSenseAdaptiveTriggerDiscretePositionCount: c_uint = 10;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum GCDualSenseAdaptiveTriggerMode {
        #[doc(alias = "GCDualSenseAdaptiveTriggerModeOff")]
        Off = 0,
        #[doc(alias = "GCDualSenseAdaptiveTriggerModeFeedback")]
        Feedback = 1,
        #[doc(alias = "GCDualSenseAdaptiveTriggerModeWeapon")]
        Weapon = 2,
        #[doc(alias = "GCDualSenseAdaptiveTriggerModeVibration")]
        Vibration = 3,
        #[doc(alias = "GCDualSenseAdaptiveTriggerModeSlopeFeedback")]
        SlopeFeedback = 4,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum GCDualSenseAdaptiveTriggerStatus {
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusUnknown")]
        Unknown = -1,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusFeedbackNoLoad")]
        FeedbackNoLoad = 0,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusFeedbackLoadApplied")]
        FeedbackLoadApplied = 1,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusWeaponReady")]
        WeaponReady = 2,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusWeaponFiring")]
        WeaponFiring = 3,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusWeaponFired")]
        WeaponFired = 4,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusVibrationNotVibrating")]
        VibrationNotVibrating = 5,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusVibrationIsVibrating")]
        VibrationIsVibrating = 6,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusSlopeFeedbackReady")]
        SlopeFeedbackReady = 7,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusSlopeFeedbackApplyingLoad")]
        SlopeFeedbackApplyingLoad = 8,
        #[doc(alias = "GCDualSenseAdaptiveTriggerStatusSlopeFeedbackFinished")]
        SlopeFeedbackFinished = 9,
    }
);

extern_struct!(
    #[encoding_name("?")]
    pub struct GCDualSenseAdaptiveTriggerPositionalAmplitudes {
        pub values: [c_float; 10],
    }
);

extern_struct!(
    #[encoding_name("?")]
    pub struct GCDualSenseAdaptiveTriggerPositionalResistiveStrengths {
        pub values: [c_float; 10],
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "GameController_GCDualSenseAdaptiveTrigger")]
    pub struct GCDualSenseAdaptiveTrigger;

    #[cfg(feature = "GameController_GCDualSenseAdaptiveTrigger")]
    unsafe impl ClassType for GCDualSenseAdaptiveTrigger {
        #[inherits(GCControllerElement, NSObject)]
        type Super = GCControllerButtonInput;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "GameController_GCDualSenseAdaptiveTrigger")]
unsafe impl NSObjectProtocol for GCDualSenseAdaptiveTrigger {}

extern_methods!(
    #[cfg(feature = "GameController_GCDualSenseAdaptiveTrigger")]
    unsafe impl GCDualSenseAdaptiveTrigger {
        #[method(mode)]
        pub unsafe fn mode(&self) -> GCDualSenseAdaptiveTriggerMode;

        #[method(status)]
        pub unsafe fn status(&self) -> GCDualSenseAdaptiveTriggerStatus;

        #[method(armPosition)]
        pub unsafe fn armPosition(&self) -> c_float;

        #[method(setModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:)]
        pub unsafe fn setModeSlopeFeedbackWithStartPosition_endPosition_startStrength_endStrength(
            &self,
            start_position: c_float,
            end_position: c_float,
            start_strength: c_float,
            end_strength: c_float,
        );

        #[method(setModeFeedbackWithStartPosition:resistiveStrength:)]
        pub unsafe fn setModeFeedbackWithStartPosition_resistiveStrength(
            &self,
            start_position: c_float,
            resistive_strength: c_float,
        );

        #[method(setModeFeedbackWithResistiveStrengths:)]
        pub unsafe fn setModeFeedbackWithResistiveStrengths(
            &self,
            positional_resistive_strengths: GCDualSenseAdaptiveTriggerPositionalResistiveStrengths,
        );

        #[method(setModeWeaponWithStartPosition:endPosition:resistiveStrength:)]
        pub unsafe fn setModeWeaponWithStartPosition_endPosition_resistiveStrength(
            &self,
            start_position: c_float,
            end_position: c_float,
            resistive_strength: c_float,
        );

        #[method(setModeVibrationWithStartPosition:amplitude:frequency:)]
        pub unsafe fn setModeVibrationWithStartPosition_amplitude_frequency(
            &self,
            start_position: c_float,
            amplitude: c_float,
            frequency: c_float,
        );

        #[method(setModeVibrationWithAmplitudes:frequency:)]
        pub unsafe fn setModeVibrationWithAmplitudes_frequency(
            &self,
            positional_amplitudes: GCDualSenseAdaptiveTriggerPositionalAmplitudes,
            frequency: c_float,
        );

        #[method(setModeOff)]
        pub unsafe fn setModeOff(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "GameController_GCDualSenseAdaptiveTrigger")]
    unsafe impl GCDualSenseAdaptiveTrigger {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
