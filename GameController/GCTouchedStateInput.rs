//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

extern_protocol!(
    pub unsafe trait GCTouchedStateInput: NSObjectProtocol {
        #[cfg(feature = "GameController_GCPhysicalInputElement")]
        #[method(touchedDidChangeHandler)]
        unsafe fn touchedDidChangeHandler(
            &self,
        ) -> *mut Block<
            dyn Fn(
                NonNull<ProtocolObject<dyn GCPhysicalInputElement>>,
                NonNull<ProtocolObject<dyn GCTouchedStateInput>>,
                Bool,
            ),
        >;

        #[cfg(feature = "GameController_GCPhysicalInputElement")]
        #[method(setTouchedDidChangeHandler:)]
        unsafe fn setTouchedDidChangeHandler(
            &self,
            touched_did_change_handler: Option<
                &Block<
                    dyn Fn(
                        NonNull<ProtocolObject<dyn GCPhysicalInputElement>>,
                        NonNull<ProtocolObject<dyn GCTouchedStateInput>>,
                        Bool,
                    ),
                >,
            >,
        );

        #[method(isTouched)]
        unsafe fn isTouched(&self) -> bool;

        #[cfg(feature = "Foundation_NSDate")]
        #[method(lastTouchedStateTimestamp)]
        unsafe fn lastTouchedStateTimestamp(&self) -> NSTimeInterval;

        #[cfg(feature = "Foundation_NSDate")]
        #[method(lastTouchedStateLatency)]
        unsafe fn lastTouchedStateLatency(&self) -> NSTimeInterval;

        #[cfg(all(
            feature = "Foundation_NSSet",
            feature = "GameController_GCPhysicalInputSource"
        ))]
        #[method_id(@__retain_semantics Other sources)]
        unsafe fn sources(&self) -> Id<NSSet<ProtocolObject<dyn GCPhysicalInputSource>>>;
    }

    unsafe impl ProtocolType for dyn GCTouchedStateInput {}
);
