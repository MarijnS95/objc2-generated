//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An MXMetric subclass that encapsulates app responsiveness metrics.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxappresponsivenessmetric?language=objc)
    #[unsafe(super(MXMetric, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MXMetric")]
    pub struct MXAppResponsivenessMetric;
);

#[cfg(feature = "MXMetric")]
unsafe impl NSCoding for MXAppResponsivenessMetric {}

#[cfg(feature = "MXMetric")]
unsafe impl NSObjectProtocol for MXAppResponsivenessMetric {}

#[cfg(feature = "MXMetric")]
unsafe impl NSSecureCoding for MXAppResponsivenessMetric {}

extern_methods!(
    #[cfg(feature = "MXMetric")]
    unsafe impl MXAppResponsivenessMetric {
        #[cfg(feature = "MXHistogram")]
        /// Histogrammed app hang time data.
        ///
        /// Applications are considered to be "hanging" when they are unable to handle user input responsively.
        ///
        /// The durations for periods of hangs will be reported in the histogram returned here.
        ///
        /// Application hang times that exceeds 9 seconds of wall clock time are reported in the final bucket of the histogram.
        ///
        /// Dimensioned as NSUnitDuration.
        #[method_id(histogrammedApplicationHangTime)]
        #[unsafe(method_family = none)]
        pub unsafe fn histogrammedApplicationHangTime(
            &self,
        ) -> Retained<MXHistogram<NSUnitDuration>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MXMetric")]
    unsafe impl MXAppResponsivenessMetric {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
