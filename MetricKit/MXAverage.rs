//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A class representing metric data that is averaged.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxaverage?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MXAverage<UnitType: ?Sized = AnyObject>;
);

unsafe impl<UnitType: ?Sized + NSCoding> NSCoding for MXAverage<UnitType> {}

unsafe impl<UnitType: ?Sized> NSObjectProtocol for MXAverage<UnitType> {}

unsafe impl<UnitType: ?Sized + NSSecureCoding> NSSecureCoding for MXAverage<UnitType> {}

extern_methods!(
    unsafe impl<UnitType: Message> MXAverage<UnitType> {
        /// An NSMeasurement that contains the average measurement.
        #[method_id(averageMeasurement)]
        #[unsafe(method_family = none)]
        pub unsafe fn averageMeasurement(&self) -> Retained<NSMeasurement<UnitType>>;

        /// An NSInteger representation of the number of samples in the distribution used to formulate the average.
        ///
        /// This value is negative if an unknown number of samples was used to compute the average.
        #[method(sampleCount)]
        pub unsafe fn sampleCount(&self) -> NSInteger;

        /// An double representation of the standard deviation of the distribution.
        ///
        /// This value is negative an unknown number of samples was used to compute the standard deviation.
        #[method(standardDeviation)]
        pub unsafe fn standardDeviation(&self) -> c_double;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl<UnitType: Message> MXAverage<UnitType> {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
