//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An MXMetric subclass that encapsulates cellular condition metrics.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxcellularconditionmetric?language=objc)
    #[unsafe(super(MXMetric, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MXMetric")]
    pub struct MXCellularConditionMetric;
);

#[cfg(feature = "MXMetric")]
unsafe impl NSCoding for MXCellularConditionMetric {}

#[cfg(feature = "MXMetric")]
unsafe impl NSObjectProtocol for MXCellularConditionMetric {}

#[cfg(feature = "MXMetric")]
unsafe impl NSSecureCoding for MXCellularConditionMetric {}

extern_methods!(
    #[cfg(feature = "MXMetric")]
    unsafe impl MXCellularConditionMetric {
        #[cfg(all(feature = "MXHistogram", feature = "MXUnit"))]
        /// Application run time bucketized by cellular condition.
        ///
        /// This data represents the percentage of time an application spent running in different cellular conditions.
        ///
        /// In the event that no data for any buckets is available, the histogram data will be empty.
        ///
        /// Dimensioned as MXUnitSignalBars.
        #[unsafe(method(histogrammedCellularConditionTime))]
        #[unsafe(method_family = none)]
        pub unsafe fn histogrammedCellularConditionTime(
            &self,
        ) -> Retained<MXHistogram<MXUnitSignalBars>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MXMetric")]
    unsafe impl MXCellularConditionMetric {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
