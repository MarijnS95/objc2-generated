//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An MXMetric subclass that encapsulates app launch metrics.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxapplaunchmetric?language=objc)
    #[unsafe(super(MXMetric, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MXMetric")]
    pub struct MXAppLaunchMetric;
);

#[cfg(feature = "MXMetric")]
unsafe impl NSCoding for MXAppLaunchMetric {}

#[cfg(feature = "MXMetric")]
unsafe impl NSObjectProtocol for MXAppLaunchMetric {}

#[cfg(feature = "MXMetric")]
unsafe impl NSSecureCoding for MXAppLaunchMetric {}

extern_methods!(
    #[cfg(feature = "MXMetric")]
    unsafe impl MXAppLaunchMetric {
        #[cfg(feature = "MXHistogram")]
        /// Histogrammed application time-to-first-draw data.
        ///
        /// Dimensioned as NSUnitDuration.
        ///
        /// This represents the time when the first CA commit is finished.
        #[method_id(histogrammedTimeToFirstDraw)]
        #[unsafe(method_family = none)]
        pub unsafe fn histogrammedTimeToFirstDraw(&self) -> Retained<MXHistogram<NSUnitDuration>>;

        #[cfg(feature = "MXHistogram")]
        /// Histogrammed application resume time data.
        ///
        /// Dimensioned as NSUnitDuration.
        #[method_id(histogrammedApplicationResumeTime)]
        #[unsafe(method_family = none)]
        pub unsafe fn histogrammedApplicationResumeTime(
            &self,
        ) -> Retained<MXHistogram<NSUnitDuration>>;

        #[cfg(feature = "MXHistogram")]
        /// Histogrammed optimized application time-to-first-draw data.
        ///
        /// Dimensioned as NSUnitDuration.
        ///
        /// This represents the time when the first CA commit is finished where the application launch has been optimized by the system.
        ///
        /// In iOS 15, the system will opportunistically start applications that are not running in the background to reduce the amount of time a user may have to wait before an application is usable. These launches can occur after a system reboot and periodically as system conditions allow.
        #[method_id(histogrammedOptimizedTimeToFirstDraw)]
        #[unsafe(method_family = none)]
        pub unsafe fn histogrammedOptimizedTimeToFirstDraw(
            &self,
        ) -> Retained<MXHistogram<NSUnitDuration>>;

        #[cfg(feature = "MXHistogram")]
        /// Histogrammed extended launch data.
        ///
        /// Dimensioned as NSUnitDuration.
        ///
        /// This represents the time when the app has drawn the first frame and finishes all extended launch tasks that assigned by the developer.
        #[method_id(histogrammedExtendedLaunch)]
        #[unsafe(method_family = none)]
        pub unsafe fn histogrammedExtendedLaunch(&self) -> Retained<MXHistogram<NSUnitDuration>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MXMetric")]
    unsafe impl MXAppLaunchMetric {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
