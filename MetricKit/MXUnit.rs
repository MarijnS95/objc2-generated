//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An NSUnit subclass representing the number of signal bars for signal strength.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxunitsignalbars?language=objc)
    #[unsafe(super(NSDimension, NSUnit, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MXUnitSignalBars;
);

extern_conformance!(
    unsafe impl NSCoding for MXUnitSignalBars {}
);

extern_conformance!(
    unsafe impl NSCopying for MXUnitSignalBars {}
);

unsafe impl CopyingHelper for MXUnitSignalBars {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for MXUnitSignalBars {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for MXUnitSignalBars {}
);

impl MXUnitSignalBars {
    extern_methods!(
        #[unsafe(method(bars))]
        #[unsafe(method_family = none)]
        pub unsafe fn bars() -> Retained<MXUnitSignalBars>;
    );
}

/// Methods declared on superclass `NSDimension`.
impl MXUnitSignalBars {
    extern_methods!(
        #[unsafe(method(initWithSymbol:converter:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSymbol_converter(
            this: Allocated<Self>,
            symbol: &NSString,
            converter: &NSUnitConverter,
        ) -> Retained<Self>;

        #[unsafe(method(baseUnit))]
        #[unsafe(method_family = none)]
        pub unsafe fn baseUnit() -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSUnit`.
impl MXUnitSignalBars {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(initWithSymbol:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSymbol(this: Allocated<Self>, symbol: &NSString) -> Retained<Self>;
    );
}

extern_class!(
    /// An NSUnit subclass representing the linear space Display APL.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxunitaveragepixelluminance?language=objc)
    #[unsafe(super(NSDimension, NSUnit, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MXUnitAveragePixelLuminance;
);

extern_conformance!(
    unsafe impl NSCoding for MXUnitAveragePixelLuminance {}
);

extern_conformance!(
    unsafe impl NSCopying for MXUnitAveragePixelLuminance {}
);

unsafe impl CopyingHelper for MXUnitAveragePixelLuminance {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for MXUnitAveragePixelLuminance {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for MXUnitAveragePixelLuminance {}
);

impl MXUnitAveragePixelLuminance {
    extern_methods!(
        #[unsafe(method(apl))]
        #[unsafe(method_family = none)]
        pub unsafe fn apl() -> Retained<MXUnitAveragePixelLuminance>;
    );
}

/// Methods declared on superclass `NSDimension`.
impl MXUnitAveragePixelLuminance {
    extern_methods!(
        #[unsafe(method(initWithSymbol:converter:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSymbol_converter(
            this: Allocated<Self>,
            symbol: &NSString,
            converter: &NSUnitConverter,
        ) -> Retained<Self>;

        #[unsafe(method(baseUnit))]
        #[unsafe(method_family = none)]
        pub unsafe fn baseUnit() -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSUnit`.
impl MXUnitAveragePixelLuminance {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(initWithSymbol:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSymbol(this: Allocated<Self>, symbol: &NSString) -> Retained<Self>;
    );
}
