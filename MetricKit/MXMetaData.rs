//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A class that contains miscellaneous metadata about an associated payload.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxmetadata?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MXMetaData;
);

unsafe impl NSCoding for MXMetaData {}

unsafe impl NSObjectProtocol for MXMetaData {}

unsafe impl NSSecureCoding for MXMetaData {}

extern_methods!(
    unsafe impl MXMetaData {
        /// An NSString designating the region format associated with the application.
        #[method(regionFormat)]
        #[unsafe(method_family = none)]
        pub unsafe fn regionFormat(&self) -> Retained<NSString>;

        /// An NSString designating the OS version associated with the device.
        #[method(osVersion)]
        #[unsafe(method_family = none)]
        pub unsafe fn osVersion(&self) -> Retained<NSString>;

        /// An NSString designating the device type associated with this device.
        #[method(deviceType)]
        #[unsafe(method_family = none)]
        pub unsafe fn deviceType(&self) -> Retained<NSString>;

        /// An NSString designating the app build version.
        #[method(applicationBuildVersion)]
        #[unsafe(method_family = none)]
        pub unsafe fn applicationBuildVersion(&self) -> Retained<NSString>;

        /// An NSString designating the current architecture.
        #[method(platformArchitecture)]
        #[unsafe(method_family = none)]
        pub unsafe fn platformArchitecture(&self) -> Retained<NSString>;

        /// A boolean representing low power mode enablement on device
        #[method(lowPowerModeEnabled)]
        #[unsafe(method_family = none)]
        pub unsafe fn lowPowerModeEnabled(&self) -> bool;

        /// A boolean representing if the app is registered as a testFlightApp
        #[method(isTestFlightApp)]
        #[unsafe(method_family = none)]
        pub unsafe fn isTestFlightApp(&self) -> bool;

        #[cfg(feature = "libc")]
        /// pid of the process
        ///
        /// Note: A value of -1 indicates that the PID was unavailable for the containing payload.
        #[method(pid)]
        #[unsafe(method_family = none)]
        pub unsafe fn pid(&self) -> libc::pid_t;

        /// Convenience method to return a JSON representation of this metadata.
        ///
        /// Returns: An NSData object containing the JSON representation
        #[method(JSONRepresentation)]
        #[unsafe(method_family = none)]
        pub unsafe fn JSONRepresentation(&self) -> Retained<NSData>;

        /// Convenience method to return a NSDictionary representation of this metadata.
        ///
        /// Returns: An NSDictionary object containing the dictionary representation
        #[deprecated]
        #[method(DictionaryRepresentation)]
        #[unsafe(method_family = none)]
        pub unsafe fn DictionaryRepresentation(&self) -> Retained<NSDictionary>;

        /// Convenience method to return a NSDictionary representation of this metadata.
        ///
        /// Returns: An NSDictionary object containing the dictionary representation
        #[method(dictionaryRepresentation)]
        #[unsafe(method_family = none)]
        pub unsafe fn dictionaryRepresentation(&self) -> Retained<NSDictionary>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MXMetaData {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
