//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An abstract class that describes a specific metric vended by MetricKit.
    ///
    /// All supported metrics are subclasses of MXMetric.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxmetric?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MXMetric;
);

extern_conformance!(
    unsafe impl NSCoding for MXMetric {}
);

extern_conformance!(
    unsafe impl NSObjectProtocol for MXMetric {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for MXMetric {}
);

impl MXMetric {
    extern_methods!(
        /// Convenience method to return a JSON representation of this metric.
        ///
        /// Returns: An NSData object containing the JSON representation
        #[unsafe(method(JSONRepresentation))]
        #[unsafe(method_family = none)]
        pub unsafe fn JSONRepresentation(&self) -> Retained<NSData>;

        /// Convenience method to return a NSDictionary representation of this metric.
        ///
        /// Returns: An NSDictionary object containing the dictionary representation
        #[deprecated]
        #[unsafe(method(DictionaryRepresentation))]
        #[unsafe(method_family = none)]
        pub unsafe fn DictionaryRepresentation(&self) -> Retained<NSDictionary>;

        /// Convenience method to return a NSDictionary representation of this metric.
        ///
        /// Returns: An NSDictionary object containing the dictionary representation
        #[unsafe(method(dictionaryRepresentation))]
        #[unsafe(method_family = none)]
        pub unsafe fn dictionaryRepresentation(&self) -> Retained<NSDictionary>;
    );
}

/// Methods declared on superclass `NSObject`.
impl MXMetric {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
