//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-audio-types")]
use objc2_core_audio_types::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofiletypeid?language=objc)
pub type AudioFileTypeID = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileaifftype?language=objc)
pub const kAudioFileAIFFType: AudioFileTypeID = 0x41494646;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileaifctype?language=objc)
pub const kAudioFileAIFCType: AudioFileTypeID = 0x41494643;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilewavetype?language=objc)
pub const kAudioFileWAVEType: AudioFileTypeID = 0x57415645;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilerf64type?language=objc)
pub const kAudioFileRF64Type: AudioFileTypeID = 0x52463634;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilebw64type?language=objc)
pub const kAudioFileBW64Type: AudioFileTypeID = 0x42573634;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilewave64type?language=objc)
pub const kAudioFileWave64Type: AudioFileTypeID = 0x57363466;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilesounddesigner2type?language=objc)
pub const kAudioFileSoundDesigner2Type: AudioFileTypeID = 0x53643266;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilenexttype?language=objc)
pub const kAudioFileNextType: AudioFileTypeID = 0x4e655854;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilemp3type?language=objc)
pub const kAudioFileMP3Type: AudioFileTypeID = 0x4d504733;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilemp2type?language=objc)
pub const kAudioFileMP2Type: AudioFileTypeID = 0x4d504732;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilemp1type?language=objc)
pub const kAudioFileMP1Type: AudioFileTypeID = 0x4d504731;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileac3type?language=objc)
pub const kAudioFileAC3Type: AudioFileTypeID = 0x61632d33;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileaac_adtstype?language=objc)
pub const kAudioFileAAC_ADTSType: AudioFileTypeID = 0x61647473;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilempeg4type?language=objc)
pub const kAudioFileMPEG4Type: AudioFileTypeID = 0x6d703466;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilem4atype?language=objc)
pub const kAudioFileM4AType: AudioFileTypeID = 0x6d346166;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilem4btype?language=objc)
pub const kAudioFileM4BType: AudioFileTypeID = 0x6d346266;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilecaftype?language=objc)
pub const kAudioFileCAFType: AudioFileTypeID = 0x63616666;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofile3gptype?language=objc)
pub const kAudioFile3GPType: AudioFileTypeID = 0x33677070;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofile3gp2type?language=objc)
pub const kAudioFile3GP2Type: AudioFileTypeID = 0x33677032;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileamrtype?language=objc)
pub const kAudioFileAMRType: AudioFileTypeID = 0x616d7266;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileflactype?language=objc)
pub const kAudioFileFLACType: AudioFileTypeID = 0x666c6163;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilelatminloastype?language=objc)
pub const kAudioFileLATMInLOASType: AudioFileTypeID = 0x6c6f6173;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileunspecifiederror?language=objc)
pub const kAudioFileUnspecifiedError: OSStatus = 0x7768743f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileunsupportedfiletypeerror?language=objc)
pub const kAudioFileUnsupportedFileTypeError: OSStatus = 0x7479703f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileunsupporteddataformaterror?language=objc)
pub const kAudioFileUnsupportedDataFormatError: OSStatus = 0x666d743f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileunsupportedpropertyerror?language=objc)
pub const kAudioFileUnsupportedPropertyError: OSStatus = 0x7074793f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilebadpropertysizeerror?language=objc)
pub const kAudioFileBadPropertySizeError: OSStatus = 0x2173697a;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepermissionserror?language=objc)
pub const kAudioFilePermissionsError: OSStatus = 0x70726d3f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilenotoptimizederror?language=objc)
pub const kAudioFileNotOptimizedError: OSStatus = 0x6f70746d;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileinvalidchunkerror?language=objc)
pub const kAudioFileInvalidChunkError: OSStatus = 0x63686b3f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofiledoesnotallow64bitdatasizeerror?language=objc)
pub const kAudioFileDoesNotAllow64BitDataSizeError: OSStatus = 0x6f66663f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileinvalidpacketoffseterror?language=objc)
pub const kAudioFileInvalidPacketOffsetError: OSStatus = 0x70636b3f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileinvalidpacketdependencyerror?language=objc)
pub const kAudioFileInvalidPacketDependencyError: OSStatus = 0x6465703f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileinvalidfileerror?language=objc)
pub const kAudioFileInvalidFileError: OSStatus = 0x6474613f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileoperationnotsupportederror?language=objc)
pub const kAudioFileOperationNotSupportedError: OSStatus = 0x6F703F3F;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilenotopenerror?language=objc)
pub const kAudioFileNotOpenError: OSStatus = -38;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileendoffileerror?language=objc)
pub const kAudioFileEndOfFileError: OSStatus = -39;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepositionerror?language=objc)
pub const kAudioFilePositionError: OSStatus = -40;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilefilenotfounderror?language=objc)
pub const kAudioFileFileNotFoundError: OSStatus = -43;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofileflags?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AudioFileFlags(pub u32);
bitflags::bitflags! {
    impl AudioFileFlags: u32 {
        const kAudioFileFlags_EraseFile = 1;
        const kAudioFileFlags_DontPageAlignAudioData = 2;
    }
}

unsafe impl Encode for AudioFileFlags {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for AudioFileFlags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofilepermissions?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AudioFilePermissions(pub i8);
impl AudioFilePermissions {
    pub const kAudioFileReadPermission: Self = Self(0x01);
    pub const kAudioFileWritePermission: Self = Self(0x02);
    pub const kAudioFileReadWritePermission: Self = Self(0x03);
}

unsafe impl Encode for AudioFilePermissions {
    const ENCODING: Encoding = i8::ENCODING;
}

unsafe impl RefEncode for AudioFilePermissions {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofileid?language=objc)
pub type AudioFileID = *mut c_void;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofilepropertyid?language=objc)
pub type AudioFilePropertyID = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileloopdirection_nolooping?language=objc)
pub const kAudioFileLoopDirection_NoLooping: u32 = 0;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileloopdirection_forward?language=objc)
pub const kAudioFileLoopDirection_Forward: u32 = 1;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileloopdirection_forwardandbackward?language=objc)
pub const kAudioFileLoopDirection_ForwardAndBackward: u32 = 2;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileloopdirection_backward?language=objc)
pub const kAudioFileLoopDirection_Backward: u32 = 3;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofile_smpte_time?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFile_SMPTE_Time {
    pub mHours: i8,
    pub mMinutes: u8,
    pub mSeconds: u8,
    pub mFrames: u8,
    pub mSubFrameSampleOffset: u32,
}

unsafe impl Encode for AudioFile_SMPTE_Time {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFile_SMPTE_Time",
        &[
            <i8>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for AudioFile_SMPTE_Time {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilemarkertype_generic?language=objc)
pub const kAudioFileMarkerType_Generic: u32 = 0;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofilemarker?language=objc)
#[cfg(feature = "objc2-core-foundation")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFileMarker {
    pub mFramePosition: f64,
    pub mName: CFStringRef,
    pub mMarkerID: i32,
    pub mSMPTETime: AudioFile_SMPTE_Time,
    pub mType: u32,
    pub mReserved: u16,
    pub mChannel: u16,
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl Encode for AudioFileMarker {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFileMarker",
        &[
            <f64>::ENCODING,
            <CFStringRef>::ENCODING,
            <i32>::ENCODING,
            <AudioFile_SMPTE_Time>::ENCODING,
            <u32>::ENCODING,
            <u16>::ENCODING,
            <u16>::ENCODING,
        ],
    );
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl RefEncode for AudioFileMarker {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofilemarkerlist?language=objc)
#[cfg(feature = "objc2-core-foundation")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFileMarkerList {
    pub mSMPTE_TimeType: u32,
    pub mNumberMarkers: u32,
    pub mMarkers: [AudioFileMarker; 1],
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl Encode for AudioFileMarkerList {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFileMarkerList",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <[AudioFileMarker; 1]>::ENCODING,
        ],
    );
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl RefEncode for AudioFileMarkerList {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

// TODO: pub fn NumBytesToNumAudioFileMarkers(in_num_bytes: usize,) -> usize;

// TODO: pub fn NumAudioFileMarkersToNumBytes(in_num_markers: usize,) -> usize;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofileregionflags?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AudioFileRegionFlags(pub u32);
bitflags::bitflags! {
    impl AudioFileRegionFlags: u32 {
        const kAudioFileRegionFlag_LoopEnable = 1;
        const kAudioFileRegionFlag_PlayForward = 2;
        const kAudioFileRegionFlag_PlayBackward = 4;
    }
}

unsafe impl Encode for AudioFileRegionFlags {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for AudioFileRegionFlags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofileregion?language=objc)
#[cfg(feature = "objc2-core-foundation")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFileRegion {
    pub mRegionID: u32,
    pub mName: CFStringRef,
    pub mFlags: AudioFileRegionFlags,
    pub mNumberMarkers: u32,
    pub mMarkers: [AudioFileMarker; 1],
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl Encode for AudioFileRegion {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFileRegion",
        &[
            <u32>::ENCODING,
            <CFStringRef>::ENCODING,
            <AudioFileRegionFlags>::ENCODING,
            <u32>::ENCODING,
            <[AudioFileMarker; 1]>::ENCODING,
        ],
    );
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl RefEncode for AudioFileRegion {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofileregionlist?language=objc)
#[cfg(feature = "objc2-core-foundation")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFileRegionList {
    pub mSMPTE_TimeType: u32,
    pub mNumberRegions: u32,
    pub mRegions: [AudioFileRegion; 1],
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl Encode for AudioFileRegionList {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFileRegionList",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <[AudioFileRegion; 1]>::ENCODING,
        ],
    );
}

#[cfg(feature = "objc2-core-foundation")]
unsafe impl RefEncode for AudioFileRegionList {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

// TODO: pub fn NextAudioFileRegion(in_af_region_ptr: NonNull<AudioFileRegion>,) -> NonNull<AudioFileRegion>;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audioframepackettranslation?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFramePacketTranslation {
    pub mFrame: i64,
    pub mPacket: i64,
    pub mFrameOffsetInPacket: u32,
}

unsafe impl Encode for AudioFramePacketTranslation {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFramePacketTranslation",
        &[<i64>::ENCODING, <i64>::ENCODING, <u32>::ENCODING],
    );
}

unsafe impl RefEncode for AudioFramePacketTranslation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiobytepackettranslationflags?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AudioBytePacketTranslationFlags(pub u32);
bitflags::bitflags! {
    impl AudioBytePacketTranslationFlags: u32 {
        const kBytePacketTranslationFlag_IsEstimate = 1;
    }
}

unsafe impl Encode for AudioBytePacketTranslationFlags {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for AudioBytePacketTranslationFlags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiobytepackettranslation?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioBytePacketTranslation {
    pub mByte: i64,
    pub mPacket: i64,
    pub mByteOffsetInPacket: u32,
    pub mFlags: AudioBytePacketTranslationFlags,
}

unsafe impl Encode for AudioBytePacketTranslation {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioBytePacketTranslation",
        &[
            <i64>::ENCODING,
            <i64>::ENCODING,
            <u32>::ENCODING,
            <AudioBytePacketTranslationFlags>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for AudioBytePacketTranslation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofilepackettableinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFilePacketTableInfo {
    pub mNumberValidFrames: i64,
    pub mPrimingFrames: i32,
    pub mRemainderFrames: i32,
}

unsafe impl Encode for AudioFilePacketTableInfo {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFilePacketTableInfo",
        &[<i64>::ENCODING, <i32>::ENCODING, <i32>::ENCODING],
    );
}

unsafe impl RefEncode for AudioFilePacketTableInfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiopacketrangebytecounttranslation?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioPacketRangeByteCountTranslation {
    pub mPacket: i64,
    pub mPacketCount: i64,
    pub mByteCountUpperBound: i64,
}

unsafe impl Encode for AudioPacketRangeByteCountTranslation {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioPacketRangeByteCountTranslation",
        &[<i64>::ENCODING, <i64>::ENCODING, <i64>::ENCODING],
    );
}

unsafe impl RefEncode for AudioPacketRangeByteCountTranslation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiopacketrolldistancetranslation?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioPacketRollDistanceTranslation {
    pub mPacket: i64,
    pub mRollDistance: i64,
}

unsafe impl Encode for AudioPacketRollDistanceTranslation {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioPacketRollDistanceTranslation",
        &[<i64>::ENCODING, <i64>::ENCODING],
    );
}

unsafe impl RefEncode for AudioPacketRollDistanceTranslation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audioindependentpackettranslation?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioIndependentPacketTranslation {
    pub mPacket: i64,
    pub mIndependentlyDecodablePacket: i64,
}

unsafe impl Encode for AudioIndependentPacketTranslation {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioIndependentPacketTranslation",
        &[<i64>::ENCODING, <i64>::ENCODING],
    );
}

unsafe impl RefEncode for AudioIndependentPacketTranslation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiopacketdependencyinfotranslation?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioPacketDependencyInfoTranslation {
    pub mPacket: i64,
    pub mIsIndependentlyDecodable: u32,
    pub mNumberPrerollPackets: u32,
}

unsafe impl Encode for AudioPacketDependencyInfoTranslation {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioPacketDependencyInfoTranslation",
        &[<i64>::ENCODING, <u32>::ENCODING, <u32>::ENCODING],
    );
}

unsafe impl RefEncode for AudioPacketDependencyInfoTranslation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    #[cfg(all(
        feature = "AudioUnitProperties",
        feature = "objc2-core-audio-types",
        feature = "objc2-core-foundation"
    ))]
    pub fn AudioFileCreateWithURL(
        in_file_ref: CFURLRef,
        in_file_type: AudioFileTypeID,
        in_format: NonNull<AudioStreamBasicDescription>,
        in_flags: AudioFileFlags,
        out_audio_file: NonNull<AudioFileID>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(all(feature = "AudioUnitProperties", feature = "objc2-core-foundation"))]
    pub fn AudioFileOpenURL(
        in_file_ref: CFURLRef,
        in_permissions: AudioFilePermissions,
        in_file_type_hint: AudioFileTypeID,
        out_audio_file: NonNull<AudioFileID>,
    ) -> OSStatus;
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofile_readproc?language=objc)
pub type AudioFile_ReadProc = Option<
    unsafe extern "C-unwind" fn(
        NonNull<c_void>,
        i64,
        u32,
        NonNull<c_void>,
        NonNull<u32>,
    ) -> OSStatus,
>;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofile_writeproc?language=objc)
pub type AudioFile_WriteProc = Option<
    unsafe extern "C-unwind" fn(
        NonNull<c_void>,
        i64,
        u32,
        NonNull<c_void>,
        NonNull<u32>,
    ) -> OSStatus,
>;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofile_getsizeproc?language=objc)
pub type AudioFile_GetSizeProc = Option<unsafe extern "C-unwind" fn(NonNull<c_void>) -> i64>;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofile_setsizeproc?language=objc)
pub type AudioFile_SetSizeProc =
    Option<unsafe extern "C-unwind" fn(NonNull<c_void>, i64) -> OSStatus>;

extern "C-unwind" {
    #[cfg(all(feature = "AudioUnitProperties", feature = "objc2-core-audio-types"))]
    pub fn AudioFileInitializeWithCallbacks(
        in_client_data: NonNull<c_void>,
        in_read_func: AudioFile_ReadProc,
        in_write_func: AudioFile_WriteProc,
        in_get_size_func: AudioFile_GetSizeProc,
        in_set_size_func: AudioFile_SetSizeProc,
        in_file_type: AudioFileTypeID,
        in_format: NonNull<AudioStreamBasicDescription>,
        in_flags: AudioFileFlags,
        out_audio_file: NonNull<AudioFileID>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileOpenWithCallbacks(
        in_client_data: NonNull<c_void>,
        in_read_func: AudioFile_ReadProc,
        in_write_func: AudioFile_WriteProc,
        in_get_size_func: AudioFile_GetSizeProc,
        in_set_size_func: AudioFile_SetSizeProc,
        in_file_type_hint: AudioFileTypeID,
        out_audio_file: NonNull<AudioFileID>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileClose(in_audio_file: AudioFileID) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileOptimize(in_audio_file: AudioFileID) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileReadBytes(
        in_audio_file: AudioFileID,
        in_use_cache: Boolean,
        in_starting_byte: i64,
        io_num_bytes: NonNull<u32>,
        out_buffer: NonNull<c_void>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileWriteBytes(
        in_audio_file: AudioFileID,
        in_use_cache: Boolean,
        in_starting_byte: i64,
        io_num_bytes: NonNull<u32>,
        in_buffer: NonNull<c_void>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(all(feature = "AudioUnitProperties", feature = "objc2-core-audio-types"))]
    pub fn AudioFileReadPacketData(
        in_audio_file: AudioFileID,
        in_use_cache: Boolean,
        io_num_bytes: NonNull<u32>,
        out_packet_descriptions: *mut AudioStreamPacketDescription,
        in_starting_packet: i64,
        io_num_packets: NonNull<u32>,
        out_buffer: *mut c_void,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(all(feature = "AudioUnitProperties", feature = "objc2-core-audio-types"))]
    #[deprecated = "no longer supported"]
    pub fn AudioFileReadPackets(
        in_audio_file: AudioFileID,
        in_use_cache: Boolean,
        out_num_bytes: NonNull<u32>,
        out_packet_descriptions: *mut AudioStreamPacketDescription,
        in_starting_packet: i64,
        io_num_packets: NonNull<u32>,
        out_buffer: *mut c_void,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(all(feature = "AudioUnitProperties", feature = "objc2-core-audio-types"))]
    pub fn AudioFileWritePackets(
        in_audio_file: AudioFileID,
        in_use_cache: Boolean,
        in_num_bytes: u32,
        in_packet_descriptions: *const AudioStreamPacketDescription,
        in_starting_packet: i64,
        io_num_packets: NonNull<u32>,
        in_buffer: NonNull<c_void>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileCountUserData(
        in_audio_file: AudioFileID,
        in_user_data_id: u32,
        out_number_items: NonNull<u32>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileGetUserDataSize(
        in_audio_file: AudioFileID,
        in_user_data_id: u32,
        in_index: u32,
        out_user_data_size: NonNull<u32>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileGetUserDataSize64(
        in_audio_file: AudioFileID,
        in_user_data_id: u32,
        in_index: u32,
        out_user_data_size: NonNull<u64>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileGetUserData(
        in_audio_file: AudioFileID,
        in_user_data_id: u32,
        in_index: u32,
        io_user_data_size: NonNull<u32>,
        out_user_data: NonNull<c_void>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileGetUserDataAtOffset(
        in_audio_file: AudioFileID,
        in_user_data_id: u32,
        in_index: u32,
        in_offset: i64,
        io_user_data_size: NonNull<u32>,
        out_user_data: NonNull<c_void>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileSetUserData(
        in_audio_file: AudioFileID,
        in_user_data_id: u32,
        in_index: u32,
        in_user_data_size: u32,
        in_user_data: NonNull<c_void>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileRemoveUserData(
        in_audio_file: AudioFileID,
        in_user_data_id: u32,
        in_index: u32,
    ) -> OSStatus;
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyfileformat?language=objc)
pub const kAudioFilePropertyFileFormat: AudioFilePropertyID = 0x66666d74;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertydataformat?language=objc)
pub const kAudioFilePropertyDataFormat: AudioFilePropertyID = 0x64666d74;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyisoptimized?language=objc)
pub const kAudioFilePropertyIsOptimized: AudioFilePropertyID = 0x6f70746d;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertymagiccookiedata?language=objc)
pub const kAudioFilePropertyMagicCookieData: AudioFilePropertyID = 0x6d676963;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyaudiodatabytecount?language=objc)
pub const kAudioFilePropertyAudioDataByteCount: AudioFilePropertyID = 0x62636e74;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyaudiodatapacketcount?language=objc)
pub const kAudioFilePropertyAudioDataPacketCount: AudioFilePropertyID = 0x70636e74;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertymaximumpacketsize?language=objc)
pub const kAudioFilePropertyMaximumPacketSize: AudioFilePropertyID = 0x70737a65;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertydataoffset?language=objc)
pub const kAudioFilePropertyDataOffset: AudioFilePropertyID = 0x646f6666;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertychannellayout?language=objc)
pub const kAudioFilePropertyChannelLayout: AudioFilePropertyID = 0x636d6170;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertydefersizeupdates?language=objc)
pub const kAudioFilePropertyDeferSizeUpdates: AudioFilePropertyID = 0x64737a75;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertydataformatname?language=objc)
pub const kAudioFilePropertyDataFormatName: AudioFilePropertyID = 0x666e6d65;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertymarkerlist?language=objc)
pub const kAudioFilePropertyMarkerList: AudioFilePropertyID = 0x6d6b6c73;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyregionlist?language=objc)
pub const kAudioFilePropertyRegionList: AudioFilePropertyID = 0x72676c73;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypackettoframe?language=objc)
pub const kAudioFilePropertyPacketToFrame: AudioFilePropertyID = 0x706b6672;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyframetopacket?language=objc)
pub const kAudioFilePropertyFrameToPacket: AudioFilePropertyID = 0x6672706b;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyrestrictsrandomaccess?language=objc)
pub const kAudioFilePropertyRestrictsRandomAccess: AudioFilePropertyID = 0x72726170;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypackettorolldistance?language=objc)
pub const kAudioFilePropertyPacketToRollDistance: AudioFilePropertyID = 0x706b726c;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypreviousindependentpacket?language=objc)
pub const kAudioFilePropertyPreviousIndependentPacket: AudioFilePropertyID = 0x70696e64;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertynextindependentpacket?language=objc)
pub const kAudioFilePropertyNextIndependentPacket: AudioFilePropertyID = 0x6e696e64;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypackettodependencyinfo?language=objc)
pub const kAudioFilePropertyPacketToDependencyInfo: AudioFilePropertyID = 0x706b6470;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypackettobyte?language=objc)
pub const kAudioFilePropertyPacketToByte: AudioFilePropertyID = 0x706b6279;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertybytetopacket?language=objc)
pub const kAudioFilePropertyByteToPacket: AudioFilePropertyID = 0x6279706b;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertychunkids?language=objc)
pub const kAudioFilePropertyChunkIDs: AudioFilePropertyID = 0x63686964;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyinfodictionary?language=objc)
pub const kAudioFilePropertyInfoDictionary: AudioFilePropertyID = 0x696e666f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypackettableinfo?language=objc)
pub const kAudioFilePropertyPacketTableInfo: AudioFilePropertyID = 0x706e666f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyformatlist?language=objc)
pub const kAudioFilePropertyFormatList: AudioFilePropertyID = 0x666c7374;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypacketsizeupperbound?language=objc)
pub const kAudioFilePropertyPacketSizeUpperBound: AudioFilePropertyID = 0x706b7562;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertypacketrangebytecountupperbound?language=objc)
pub const kAudioFilePropertyPacketRangeByteCountUpperBound: AudioFilePropertyID = 0x70727562;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyreserveduration?language=objc)
pub const kAudioFilePropertyReserveDuration: AudioFilePropertyID = 0x72737276;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyestimatedduration?language=objc)
pub const kAudioFilePropertyEstimatedDuration: AudioFilePropertyID = 0x65647572;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertybitrate?language=objc)
pub const kAudioFilePropertyBitRate: AudioFilePropertyID = 0x62726174;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyid3tag?language=objc)
pub const kAudioFilePropertyID3Tag: AudioFilePropertyID = 0x69643374;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyid3tagoffset?language=objc)
pub const kAudioFilePropertyID3TagOffset: AudioFilePropertyID = 0x6964336f;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertysourcebitdepth?language=objc)
pub const kAudioFilePropertySourceBitDepth: AudioFilePropertyID = 0x73627464;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyalbumartwork?language=objc)
pub const kAudioFilePropertyAlbumArtwork: AudioFilePropertyID = 0x61617274;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyaudiotrackcount?language=objc)
pub const kAudioFilePropertyAudioTrackCount: AudioFilePropertyID = 0x61746374;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofilepropertyuseaudiotrack?language=objc)
pub const kAudioFilePropertyUseAudioTrack: AudioFilePropertyID = 0x7561746b;

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileGetPropertyInfo(
        in_audio_file: AudioFileID,
        in_property_id: AudioFilePropertyID,
        out_data_size: *mut u32,
        is_writable: *mut u32,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileGetProperty(
        in_audio_file: AudioFileID,
        in_property_id: AudioFilePropertyID,
        io_data_size: NonNull<u32>,
        out_property_data: NonNull<c_void>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "AudioUnitProperties")]
    pub fn AudioFileSetProperty(
        in_audio_file: AudioFileID,
        in_property_id: AudioFilePropertyID,
        in_data_size: u32,
        in_property_data: NonNull<c_void>,
    ) -> OSStatus;
}

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_readabletypes?language=objc)
pub const kAudioFileGlobalInfo_ReadableTypes: AudioFilePropertyID = 0x61667266;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_writabletypes?language=objc)
pub const kAudioFileGlobalInfo_WritableTypes: AudioFilePropertyID = 0x61667766;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_filetypename?language=objc)
pub const kAudioFileGlobalInfo_FileTypeName: AudioFilePropertyID = 0x66746e6d;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_availablestreamdescriptionsforformat?language=objc)
pub const kAudioFileGlobalInfo_AvailableStreamDescriptionsForFormat: AudioFilePropertyID =
    0x73646964;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_availableformatids?language=objc)
pub const kAudioFileGlobalInfo_AvailableFormatIDs: AudioFilePropertyID = 0x666d6964;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_allextensions?language=objc)
pub const kAudioFileGlobalInfo_AllExtensions: AudioFilePropertyID = 0x616c7874;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_allhfstypecodes?language=objc)
pub const kAudioFileGlobalInfo_AllHFSTypeCodes: AudioFilePropertyID = 0x61686673;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_allutis?language=objc)
pub const kAudioFileGlobalInfo_AllUTIs: AudioFilePropertyID = 0x61757469;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_allmimetypes?language=objc)
pub const kAudioFileGlobalInfo_AllMIMETypes: AudioFilePropertyID = 0x616d696d;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_extensionsfortype?language=objc)
pub const kAudioFileGlobalInfo_ExtensionsForType: AudioFilePropertyID = 0x66657874;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_hfstypecodesfortype?language=objc)
pub const kAudioFileGlobalInfo_HFSTypeCodesForType: AudioFilePropertyID = 0x66686673;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_utisfortype?language=objc)
pub const kAudioFileGlobalInfo_UTIsForType: AudioFilePropertyID = 0x66757469;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_mimetypesfortype?language=objc)
pub const kAudioFileGlobalInfo_MIMETypesForType: AudioFilePropertyID = 0x666d696d;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_typesformimetype?language=objc)
pub const kAudioFileGlobalInfo_TypesForMIMEType: AudioFilePropertyID = 0x746d696d;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_typesforuti?language=objc)
pub const kAudioFileGlobalInfo_TypesForUTI: AudioFilePropertyID = 0x74757469;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_typesforhfstypecode?language=objc)
pub const kAudioFileGlobalInfo_TypesForHFSTypeCode: AudioFilePropertyID = 0x74686673;
/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/kaudiofileglobalinfo_typesforextension?language=objc)
pub const kAudioFileGlobalInfo_TypesForExtension: AudioFilePropertyID = 0x74657874;

/// [Apple's documentation](https://developer.apple.com/documentation/audiotoolbox/audiofiletypeandformatid?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AudioFileTypeAndFormatID {
    pub mFileType: AudioFileTypeID,
    pub mFormatID: u32,
}

unsafe impl Encode for AudioFileTypeAndFormatID {
    const ENCODING: Encoding = Encoding::Struct(
        "AudioFileTypeAndFormatID",
        &[<AudioFileTypeID>::ENCODING, <u32>::ENCODING],
    );
}

unsafe impl RefEncode for AudioFileTypeAndFormatID {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn AudioFileGetGlobalInfoSize(
        in_property_id: AudioFilePropertyID,
        in_specifier_size: u32,
        in_specifier: *mut c_void,
        out_data_size: NonNull<u32>,
    ) -> OSStatus;
}

extern "C-unwind" {
    pub fn AudioFileGetGlobalInfo(
        in_property_id: AudioFilePropertyID,
        in_specifier_size: u32,
        in_specifier: *mut c_void,
        io_data_size: NonNull<u32>,
        out_property_data: NonNull<c_void>,
    ) -> OSStatus;
}
