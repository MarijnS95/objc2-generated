//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-app-kit")]
use objc2_app_kit::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/screensaver/screensaverview?language=objc)
    #[unsafe(super(NSView, NSResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-app-kit")]
    pub struct ScreenSaverView;
);

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSAccessibility for ScreenSaverView {}

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSAccessibilityElementProtocol for ScreenSaverView {}

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSAnimatablePropertyContainer for ScreenSaverView {}

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSAppearanceCustomization for ScreenSaverView {}

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSCoding for ScreenSaverView {}

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSDraggingDestination for ScreenSaverView {}

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSObjectProtocol for ScreenSaverView {}

#[cfg(feature = "objc2-app-kit")]
unsafe impl NSUserInterfaceItemIdentification for ScreenSaverView {}

extern_methods!(
    #[cfg(feature = "objc2-app-kit")]
    unsafe impl ScreenSaverView {
        #[method(backingStoreType)]
        pub unsafe fn backingStoreType(mtm: MainThreadMarker) -> NSBackingStoreType;

        #[method(performGammaFade)]
        pub unsafe fn performGammaFade(mtm: MainThreadMarker) -> bool;

        #[cfg(feature = "objc2-core-foundation")]
        #[method_id(@__retain_semantics Init initWithFrame:isPreview:)]
        pub unsafe fn initWithFrame_isPreview(
            this: Allocated<Self>,
            frame: NSRect,
            is_preview: bool,
        ) -> Option<Retained<Self>>;

        #[method(animationTimeInterval)]
        pub unsafe fn animationTimeInterval(&self) -> NSTimeInterval;

        #[method(setAnimationTimeInterval:)]
        pub unsafe fn setAnimationTimeInterval(&self, animation_time_interval: NSTimeInterval);

        #[method(startAnimation)]
        pub unsafe fn startAnimation(&self);

        #[method(stopAnimation)]
        pub unsafe fn stopAnimation(&self);

        #[method(isAnimating)]
        pub unsafe fn isAnimating(&self) -> bool;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(drawRect:)]
        pub unsafe fn drawRect(&self, rect: NSRect);

        #[method(animateOneFrame)]
        pub unsafe fn animateOneFrame(&self);

        #[method(hasConfigureSheet)]
        pub unsafe fn hasConfigureSheet(&self) -> bool;

        #[method_id(@__retain_semantics Other configureSheet)]
        pub unsafe fn configureSheet(&self) -> Option<Retained<NSWindow>>;

        #[method(isPreview)]
        pub unsafe fn isPreview(&self) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSView`
    #[cfg(feature = "objc2-app-kit")]
    unsafe impl ScreenSaverView {
        #[cfg(feature = "objc2-core-foundation")]
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame_rect: NSRect) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSResponder`
    #[cfg(feature = "objc2-app-kit")]
    unsafe impl ScreenSaverView {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2-app-kit")]
    unsafe impl ScreenSaverView {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

// TODO: pub fn SSRandomIntBetween(a: c_int,b: c_int,) -> c_int;

// TODO: pub fn SSRandomFloatBetween(a: CGFloat,b: CGFloat,) -> CGFloat;

// TODO: pub fn SSRandomPointForSizeWithinRect(size: NSSize,rect: NSRect,) -> NSPoint;

// TODO: pub fn SSCenteredRectInRect(inner_rect: NSRect,outer_rect: NSRect,) -> NSRect;
