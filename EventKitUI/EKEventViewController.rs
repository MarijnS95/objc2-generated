//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-event-kit")]
use objc2_event_kit::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-ui-kit")]
use objc2_ui_kit::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/eventkitui/ekeventviewaction?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct EKEventViewAction(pub NSInteger);
impl EKEventViewAction {
    #[doc(alias = "EKEventViewActionDone")]
    pub const Done: Self = Self(0);
    #[doc(alias = "EKEventViewActionResponded")]
    pub const Responded: Self = Self(1);
    #[doc(alias = "EKEventViewActionDeleted")]
    pub const Deleted: Self = Self(2);
}

unsafe impl Encode for EKEventViewAction {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for EKEventViewAction {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/eventkitui/ekeventviewcontroller?language=objc)
    #[unsafe(super(UIViewController, UIResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-ui-kit")]
    pub struct EKEventViewController;
);

#[cfg(feature = "objc2-ui-kit")]
unsafe impl NSCoding for EKEventViewController {}

#[cfg(feature = "objc2-ui-kit")]
unsafe impl NSObjectProtocol for EKEventViewController {}

#[cfg(feature = "objc2-ui-kit")]
unsafe impl UIAppearanceContainer for EKEventViewController {}

#[cfg(feature = "objc2-ui-kit")]
unsafe impl UIContentContainer for EKEventViewController {}

#[cfg(feature = "objc2-ui-kit")]
unsafe impl UIFocusEnvironment for EKEventViewController {}

#[cfg(feature = "objc2-ui-kit")]
unsafe impl UIResponderStandardEditActions for EKEventViewController {}

#[cfg(feature = "objc2-ui-kit")]
unsafe impl UITraitEnvironment for EKEventViewController {}

extern_methods!(
    #[cfg(feature = "objc2-ui-kit")]
    unsafe impl EKEventViewController {
        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(&self) -> Option<Retained<ProtocolObject<dyn EKEventViewDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn EKEventViewDelegate>>,
        );

        #[cfg(feature = "objc2-event-kit")]
        #[method_id(@__retain_semantics Other event)]
        pub unsafe fn event(&self) -> Option<Retained<EKEvent>>;

        #[cfg(feature = "objc2-event-kit")]
        #[method(setEvent:)]
        pub unsafe fn setEvent(&self, event: Option<&EKEvent>);

        #[method(allowsEditing)]
        pub unsafe fn allowsEditing(&self) -> bool;

        #[method(setAllowsEditing:)]
        pub unsafe fn setAllowsEditing(&self, allows_editing: bool);

        #[method(allowsCalendarPreview)]
        pub unsafe fn allowsCalendarPreview(&self) -> bool;

        #[method(setAllowsCalendarPreview:)]
        pub unsafe fn setAllowsCalendarPreview(&self, allows_calendar_preview: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `UIViewController`
    #[cfg(feature = "objc2-ui-kit")]
    unsafe impl EKEventViewController {
        #[method_id(@__retain_semantics Init initWithNibName:bundle:)]
        pub unsafe fn initWithNibName_bundle(
            this: Allocated<Self>,
            nib_name_or_nil: Option<&NSString>,
            nib_bundle_or_nil: Option<&NSBundle>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2-ui-kit")]
    unsafe impl EKEventViewController {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/eventkitui/ekeventviewdelegate?language=objc)
    pub unsafe trait EKEventViewDelegate: NSObjectProtocol {
        #[cfg(feature = "objc2-ui-kit")]
        #[method(eventViewController:didCompleteWithAction:)]
        unsafe fn eventViewController_didCompleteWithAction(
            &self,
            controller: &EKEventViewController,
            action: EKEventViewAction,
        );
    }

    unsafe impl ProtocolType for dyn EKEventViewDelegate {}
);
