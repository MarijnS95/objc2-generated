//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/phase/phasespatialcategory?language=objc)
// NS_TYPED_ENUM
pub type PHASESpatialCategory = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/phase/phasespatialcategorydirectpathtransmission?language=objc)
    pub static PHASESpatialCategoryDirectPathTransmission: &'static PHASESpatialCategory;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/phase/phasespatialcategoryearlyreflections?language=objc)
    pub static PHASESpatialCategoryEarlyReflections: &'static PHASESpatialCategory;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/phase/phasespatialcategorylatereverb?language=objc)
    pub static PHASESpatialCategoryLateReverb: &'static PHASESpatialCategory;
}

/// *************************************************************************************************
///
///
///
/// Spatial pipeline flags.
///
/// Direct Path Transmission.
///
/// Early Reflections.
///
/// Late Reverb.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phasespatialpipelineflags?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct PHASESpatialPipelineFlags(pub NSUInteger);
bitflags::bitflags! {
    impl PHASESpatialPipelineFlags: NSUInteger {
        #[doc(alias = "PHASESpatialPipelineFlagDirectPathTransmission")]
        const DirectPathTransmission = 1<<0;
        #[doc(alias = "PHASESpatialPipelineFlagEarlyReflections")]
        const EarlyReflections = 1<<1;
        #[doc(alias = "PHASESpatialPipelineFlagLateReverb")]
        const LateReverb = 1<<2;
    }
}

unsafe impl Encode for PHASESpatialPipelineFlags {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for PHASESpatialPipelineFlags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// Spatial Pipeline Entry.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phasespatialpipelineentry?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHASESpatialPipelineEntry;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PHASESpatialPipelineEntry {}
);

impl PHASESpatialPipelineEntry {
    extern_methods!(
        /// Send level.
        ///
        /// Note: Values are clamped to the range [0, 1]. Default value is 1.
        #[unsafe(method(sendLevel))]
        #[unsafe(method_family = none)]
        pub unsafe fn sendLevel(&self) -> c_double;

        /// Setter for [`sendLevel`][Self::sendLevel].
        #[unsafe(method(setSendLevel:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSendLevel(&self, send_level: c_double);

        #[cfg(all(feature = "PHASEDefinition", feature = "PHASEMetaParameter"))]
        /// An optional metaparameter used to drive the send level during playback.
        #[unsafe(method(sendLevelMetaParameterDefinition))]
        #[unsafe(method_family = none)]
        pub unsafe fn sendLevelMetaParameterDefinition(
            &self,
        ) -> Option<Retained<PHASENumberMetaParameterDefinition>>;

        #[cfg(all(feature = "PHASEDefinition", feature = "PHASEMetaParameter"))]
        /// Setter for [`sendLevelMetaParameterDefinition`][Self::sendLevelMetaParameterDefinition].
        #[unsafe(method(setSendLevelMetaParameterDefinition:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSendLevelMetaParameterDefinition(
            &self,
            send_level_meta_parameter_definition: Option<&PHASENumberMetaParameterDefinition>,
        );
    );
}

/// Methods declared on superclass `NSObject`.
impl PHASESpatialPipelineEntry {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// Spatial Pipeline.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phasespatialpipeline?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHASESpatialPipeline;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PHASESpatialPipeline {}
);

impl PHASESpatialPipeline {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        /// Initialize a Spatial Pipeline with the provided flags.
        ///
        /// It's invalid to pass flags == 0 to this function. Doing so will return nil.
        ///
        /// Parameter `flags`: Options for direct path transmission, early reflections, late reverb, etc.
        #[unsafe(method(initWithFlags:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFlags(
            this: Allocated<Self>,
            flags: PHASESpatialPipelineFlags,
        ) -> Option<Retained<Self>>;

        /// Spatial Pipeline Flags.
        #[unsafe(method(flags))]
        #[unsafe(method_family = none)]
        pub unsafe fn flags(&self) -> PHASESpatialPipelineFlags;

        /// A dictionary of entries in the Spatial Pipeline.
        ///
        /// Upon initialization, an entry will be created for every flag in the PHASESpatialPipelineFlags passed to PHASESpatialPipeline:initWithFlags.
        #[unsafe(method(entries))]
        #[unsafe(method_family = none)]
        pub unsafe fn entries(
            &self,
        ) -> Retained<NSDictionary<PHASESpatialCategory, PHASESpatialPipelineEntry>>;
    );
}
