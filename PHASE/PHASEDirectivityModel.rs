//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// Cardioid directivity model subband parameters.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phasecardioiddirectivitymodelsubbandparameters?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHASECardioidDirectivityModelSubbandParameters;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PHASECardioidDirectivityModelSubbandParameters {}
);

impl PHASECardioidDirectivityModelSubbandParameters {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// The frequency of the subband, in hertz.
        ///
        /// Note: Values are clamped to the range [20.0, 20000.0]. Default value is 1000.0.
        #[unsafe(method(frequency))]
        #[unsafe(method_family = none)]
        pub unsafe fn frequency(&self) -> c_double;

        /// Setter for [`frequency`][Self::frequency].
        #[unsafe(method(setFrequency:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFrequency(&self, frequency: c_double);

        /// The directivity pattern.
        ///
        /// Note: Values are clamped to the range [0.0, 1.0]. Default value is 0.0. 0.0 is omnidirectional. 0.5 is cardioid. 1.0 is dipole.
        #[unsafe(method(pattern))]
        #[unsafe(method_family = none)]
        pub unsafe fn pattern(&self) -> c_double;

        /// Setter for [`pattern`][Self::pattern].
        #[unsafe(method(setPattern:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPattern(&self, pattern: c_double);

        /// The sharpness of the directivity pattern.
        ///
        /// Note: Values are clamped to the range [1.0, DBL_MAX]. Default value is 1.0. Values > 1.0 increase sharpness.
        #[unsafe(method(sharpness))]
        #[unsafe(method_family = none)]
        pub unsafe fn sharpness(&self) -> c_double;

        /// Setter for [`sharpness`][Self::sharpness].
        #[unsafe(method(setSharpness:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSharpness(&self, sharpness: c_double);
    );
}

/// Methods declared on superclass `NSObject`.
impl PHASECardioidDirectivityModelSubbandParameters {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// Cone directivity model subband parameters.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phaseconedirectivitymodelsubbandparameters?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHASEConeDirectivityModelSubbandParameters;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PHASEConeDirectivityModelSubbandParameters {}
);

impl PHASEConeDirectivityModelSubbandParameters {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// Set the innerAngle and outerAngle of the Cone Directivity Model Subband
        ///
        /// Parameter `innerAngle`: The inner angle of the cone directivity model, must be less than or equal to outer angle.
        ///
        /// Parameter `outerAngle`: The outer angle of the cone directivity model, must be greater than or equal to inner angle.
        ///
        /// Note: The default value for each angle is 360.0. outerAngle must be >= innerAngle.
        #[unsafe(method(setInnerAngle:outerAngle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setInnerAngle_outerAngle(&self, inner_angle: c_double, outer_angle: c_double);

        /// The frequency of the subband, in hertz.
        ///
        /// Note: Default value is 1000.0.
        #[unsafe(method(frequency))]
        #[unsafe(method_family = none)]
        pub unsafe fn frequency(&self) -> c_double;

        /// Setter for [`frequency`][Self::frequency].
        #[unsafe(method(setFrequency:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFrequency(&self, frequency: c_double);

        /// The inner angle, in degrees.
        ///
        /// Note: Default value is 360.0.
        #[unsafe(method(innerAngle))]
        #[unsafe(method_family = none)]
        pub unsafe fn innerAngle(&self) -> c_double;

        /// The outer angle, in degrees.
        ///
        /// Note: Default value is 360.0.
        #[unsafe(method(outerAngle))]
        #[unsafe(method_family = none)]
        pub unsafe fn outerAngle(&self) -> c_double;

        /// The outer gain.
        ///
        /// Note: Values are clamped to the range [0.0, 1.0]. Default value is 1.0.
        #[unsafe(method(outerGain))]
        #[unsafe(method_family = none)]
        pub unsafe fn outerGain(&self) -> c_double;

        /// Setter for [`outerGain`][Self::outerGain].
        #[unsafe(method(setOuterGain:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOuterGain(&self, outer_gain: c_double);
    );
}

/// Methods declared on superclass `NSObject`.
impl PHASEConeDirectivityModelSubbandParameters {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// Directivity model parameters.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phasedirectivitymodelparameters?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHASEDirectivityModelParameters;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PHASEDirectivityModelParameters {}
);

impl PHASEDirectivityModelParameters {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// Cardioid directivity model parameters.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phasecardioiddirectivitymodelparameters?language=objc)
    #[unsafe(super(PHASEDirectivityModelParameters, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHASECardioidDirectivityModelParameters;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PHASECardioidDirectivityModelParameters {}
);

impl PHASECardioidDirectivityModelParameters {
    extern_methods!(
        #[unsafe(method(initWithSubbandParameters:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSubbandParameters(
            this: Allocated<Self>,
            subband_parameters: &NSArray<PHASECardioidDirectivityModelSubbandParameters>,
        ) -> Retained<Self>;

        /// An array of subband parameters.
        #[unsafe(method(subbandParameters))]
        #[unsafe(method_family = none)]
        pub unsafe fn subbandParameters(
            &self,
        ) -> Retained<NSArray<PHASECardioidDirectivityModelSubbandParameters>>;
    );
}

/// Methods declared on superclass `PHASEDirectivityModelParameters`.
impl PHASECardioidDirectivityModelParameters {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// Cone directivity model parameters.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phaseconedirectivitymodelparameters?language=objc)
    #[unsafe(super(PHASEDirectivityModelParameters, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHASEConeDirectivityModelParameters;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PHASEConeDirectivityModelParameters {}
);

impl PHASEConeDirectivityModelParameters {
    extern_methods!(
        #[unsafe(method(initWithSubbandParameters:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSubbandParameters(
            this: Allocated<Self>,
            subband_parameters: &NSArray<PHASEConeDirectivityModelSubbandParameters>,
        ) -> Retained<Self>;

        /// An array of subband parameters.
        #[unsafe(method(subbandParameters))]
        #[unsafe(method_family = none)]
        pub unsafe fn subbandParameters(
            &self,
        ) -> Retained<NSArray<PHASEConeDirectivityModelSubbandParameters>>;
    );
}

/// Methods declared on superclass `PHASEDirectivityModelParameters`.
impl PHASEConeDirectivityModelParameters {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
