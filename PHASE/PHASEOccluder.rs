//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// A PHASEOccluder represents a shape (with associated materials) that can affect sound transmission within the simulated acoustic scene.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phaseoccluder?language=objc)
    #[unsafe(super(PHASEObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PHASEObject")]
    pub struct PHASEOccluder;
);

#[cfg(feature = "PHASEObject")]
extern_conformance!(
    unsafe impl NSCopying for PHASEOccluder {}
);

#[cfg(feature = "PHASEObject")]
unsafe impl CopyingHelper for PHASEOccluder {
    type Result = Self;
}

#[cfg(feature = "PHASEObject")]
extern_conformance!(
    unsafe impl NSObjectProtocol for PHASEOccluder {}
);

#[cfg(feature = "PHASEObject")]
impl PHASEOccluder {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "PHASEEngine")]
        #[unsafe(method(initWithEngine:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithEngine(this: Allocated<Self>, engine: &PHASEEngine)
            -> Retained<Self>;

        #[cfg(all(feature = "PHASEEngine", feature = "PHASEShape"))]
        /// Initialize a new occluder with shapes.
        ///
        /// The shapes array cannot be empty, otherwise an exception is thrown.
        ///
        /// Note: This function is thread-safe.
        /// Clients can safely run this function to create multiple occluders from multiple threads, if required.
        #[unsafe(method(initWithEngine:shapes:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithEngine_shapes(
            this: Allocated<Self>,
            engine: &PHASEEngine,
            shapes: &NSArray<PHASEShape>,
        ) -> Retained<Self>;

        #[cfg(feature = "PHASEShape")]
        /// Array of shapes associated with this occluder.
        #[unsafe(method(shapes))]
        #[unsafe(method_family = none)]
        pub unsafe fn shapes(&self) -> Retained<NSArray<PHASEShape>>;
    );
}
