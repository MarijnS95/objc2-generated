//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// *************************************************************************************************
    ///
    ///
    ///
    /// A PHASEListener represents the listener's point of view within the simulated acoustic scene.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/phase/phaselistener?language=objc)
    #[unsafe(super(PHASEObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PHASEObject")]
    pub struct PHASEListener;
);

#[cfg(feature = "PHASEObject")]
extern_conformance!(
    unsafe impl NSCopying for PHASEListener {}
);

#[cfg(feature = "PHASEObject")]
unsafe impl CopyingHelper for PHASEListener {
    type Result = Self;
}

#[cfg(feature = "PHASEObject")]
extern_conformance!(
    unsafe impl NSObjectProtocol for PHASEListener {}
);

#[cfg(feature = "PHASEObject")]
impl PHASEListener {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "PHASEEngine")]
        /// Initialize a new listener.
        #[unsafe(method(initWithEngine:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithEngine(this: Allocated<Self>, engine: &PHASEEngine)
            -> Retained<Self>;

        /// Linear gain scalar.
        ///
        /// Note: Values are clamped to the range [0, 1]. Default value is 1.
        #[unsafe(method(gain))]
        #[unsafe(method_family = none)]
        pub unsafe fn gain(&self) -> c_double;

        /// Setter for [`gain`][Self::gain].
        #[unsafe(method(setGain:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGain(&self, gain: c_double);

        #[cfg(feature = "PHASETypes")]
        /// A combination of flags to express automatic headtracking behaviors for this listener.
        #[unsafe(method(automaticHeadTrackingFlags))]
        #[unsafe(method_family = none)]
        pub unsafe fn automaticHeadTrackingFlags(&self) -> PHASEAutomaticHeadTrackingFlags;

        #[cfg(feature = "PHASETypes")]
        /// Setter for [`automaticHeadTrackingFlags`][Self::automaticHeadTrackingFlags].
        #[unsafe(method(setAutomaticHeadTrackingFlags:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAutomaticHeadTrackingFlags(
            &self,
            automatic_head_tracking_flags: PHASEAutomaticHeadTrackingFlags,
        );
    );
}
