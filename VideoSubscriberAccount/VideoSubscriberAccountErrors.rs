//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// The domain of all errors returned by VideoSubscriberAccount framework.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/videosubscriberaccount/vserrordomain?language=objc)
    pub static VSErrorDomain: &'static NSErrorDomain;
}

extern "C" {
    /// A key that can be used to obtain the subscription provider's SAML response string from an error user info dictionary.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/videosubscriberaccount/vserrorinfokeysamlresponse?language=objc)
    pub static VSErrorInfoKeySAMLResponse: &'static NSErrorUserInfoKey;
}

extern "C" {
    /// A key that can be used to obtain the subscription provider's SAML status code string from an error user info dictionary.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/videosubscriberaccount/vserrorinfokeysamlresponsestatus?language=objc)
    pub static VSErrorInfoKeySAMLResponseStatus: &'static NSErrorUserInfoKey;
}

extern "C" {
    /// A key that can be used to obtain the account provider's response object from an error user info dictionary.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/videosubscriberaccount/vserrorinfokeyaccountproviderresponse?language=objc)
    pub static VSErrorInfoKeyAccountProviderResponse: &'static NSErrorUserInfoKey;
}

extern "C" {
    /// A key that can be used to obtain the identifier string of the user's unsupported subscription provider from an error user info dictionary.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/videosubscriberaccount/vserrorinfokeyunsupportedprovideridentifier?language=objc)
    pub static VSErrorInfoKeyUnsupportedProviderIdentifier: &'static NSErrorUserInfoKey;
}

/// [Apple's documentation](https://developer.apple.com/documentation/videosubscriberaccount/vserrorcode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct VSErrorCode(pub NSInteger);
impl VSErrorCode {
    #[doc(alias = "VSErrorCodeAccessNotGranted")]
    pub const AccessNotGranted: Self = Self(0);
    #[doc(alias = "VSErrorCodeUnsupportedProvider")]
    pub const UnsupportedProvider: Self = Self(1);
    #[doc(alias = "VSErrorCodeUserCancelled")]
    pub const UserCancelled: Self = Self(2);
    #[doc(alias = "VSErrorCodeServiceTemporarilyUnavailable")]
    pub const ServiceTemporarilyUnavailable: Self = Self(3);
    #[doc(alias = "VSErrorCodeProviderRejected")]
    pub const ProviderRejected: Self = Self(4);
    #[doc(alias = "VSErrorCodeInvalidVerificationToken")]
    pub const InvalidVerificationToken: Self = Self(5);
    #[doc(alias = "VSErrorCodeRejected")]
    pub const Rejected: Self = Self(6);
    #[doc(alias = "VSErrorCodeUnsupported")]
    pub const Unsupported: Self = Self(7);
}

unsafe impl Encode for VSErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for VSErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
