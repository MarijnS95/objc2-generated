//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mlcompute/mlctensor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated]
    pub struct MLCTensor;
);

unsafe impl NSCopying for MLCTensor {}

unsafe impl CopyingHelper for MLCTensor {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MLCTensor {}

extern_methods!(
    unsafe impl MLCTensor {
        #[deprecated]
        #[method(tensorID)]
        pub unsafe fn tensorID(&self) -> NSUInteger;

        #[cfg(feature = "MLCTensorDescriptor")]
        #[deprecated]
        #[method_id(@__retain_semantics Other descriptor)]
        pub unsafe fn descriptor(&self) -> Retained<MLCTensorDescriptor>;

        #[deprecated]
        #[method_id(@__retain_semantics Other data)]
        pub unsafe fn data(&self) -> Option<Retained<NSData>>;

        #[deprecated]
        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Retained<NSString>;

        #[deprecated]
        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: &NSString);

        #[cfg(feature = "MLCDevice")]
        #[deprecated]
        #[method_id(@__retain_semantics Other device)]
        pub unsafe fn device(&self) -> Option<Retained<MLCDevice>>;

        #[cfg(feature = "MLCTensorData")]
        #[deprecated]
        #[method_id(@__retain_semantics Other optimizerData)]
        pub unsafe fn optimizerData(&self) -> Retained<NSArray<MLCTensorData>>;

        #[cfg(feature = "MLCTensorOptimizerDeviceData")]
        #[deprecated]
        #[method_id(@__retain_semantics Other optimizerDeviceData)]
        pub unsafe fn optimizerDeviceData(&self)
            -> Retained<NSArray<MLCTensorOptimizerDeviceData>>;

        #[deprecated]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[deprecated]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "MLCTensorDescriptor")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithDescriptor:)]
        pub unsafe fn tensorWithDescriptor(
            tensor_descriptor: &MLCTensorDescriptor,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MLCTensorDescriptor", feature = "MLCTypes"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithDescriptor:randomInitializerType:)]
        pub unsafe fn tensorWithDescriptor_randomInitializerType(
            tensor_descriptor: &MLCTensorDescriptor,
            random_initializer_type: MLCRandomInitializerType,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTensorDescriptor")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithDescriptor:fillWithData:)]
        pub unsafe fn tensorWithDescriptor_fillWithData(
            tensor_descriptor: &MLCTensorDescriptor,
            fill_data: &NSNumber,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MLCTensorData", feature = "MLCTensorDescriptor"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithDescriptor:data:)]
        pub unsafe fn tensorWithDescriptor_data(
            tensor_descriptor: &MLCTensorDescriptor,
            data: &MLCTensorData,
        ) -> Retained<Self>;

        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithShape:)]
        pub unsafe fn tensorWithShape(shape: &NSArray<NSNumber>) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithShape:randomInitializerType:)]
        pub unsafe fn tensorWithShape_randomInitializerType(
            shape: &NSArray<NSNumber>,
            random_initializer_type: MLCRandomInitializerType,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithShape:randomInitializerType:dataType:)]
        pub unsafe fn tensorWithShape_randomInitializerType_dataType(
            shape: &NSArray<NSNumber>,
            random_initializer_type: MLCRandomInitializerType,
            data_type: MLCDataType,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithShape:dataType:)]
        pub unsafe fn tensorWithShape_dataType(
            shape: &NSArray<NSNumber>,
            data_type: MLCDataType,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MLCTensorData", feature = "MLCTypes"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithShape:data:dataType:)]
        pub unsafe fn tensorWithShape_data_dataType(
            shape: &NSArray<NSNumber>,
            data: &MLCTensorData,
            data_type: MLCDataType,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithShape:fillWithData:dataType:)]
        pub unsafe fn tensorWithShape_fillWithData_dataType(
            shape: &NSArray<NSNumber>,
            fill_data: &NSNumber,
            data_type: MLCDataType,
        ) -> Retained<Self>;

        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithWidth:height:featureChannelCount:batchSize:)]
        pub unsafe fn tensorWithWidth_height_featureChannelCount_batchSize(
            width: NSUInteger,
            height: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithWidth:height:featureChannelCount:batchSize:fillWithData:dataType:)]
        pub unsafe fn tensorWithWidth_height_featureChannelCount_batchSize_fillWithData_dataType(
            width: NSUInteger,
            height: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            fill_data: c_float,
            data_type: MLCDataType,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithWidth:height:featureChannelCount:batchSize:randomInitializerType:)]
        pub unsafe fn tensorWithWidth_height_featureChannelCount_batchSize_randomInitializerType(
            width: NSUInteger,
            height: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            random_initializer_type: MLCRandomInitializerType,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTensorData")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithWidth:height:featureChannelCount:batchSize:data:)]
        pub unsafe fn tensorWithWidth_height_featureChannelCount_batchSize_data(
            width: NSUInteger,
            height: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            data: &MLCTensorData,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MLCTensorData", feature = "MLCTypes"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithWidth:height:featureChannelCount:batchSize:data:dataType:)]
        pub unsafe fn tensorWithWidth_height_featureChannelCount_batchSize_data_dataType(
            width: NSUInteger,
            height: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            data: &MLCTensorData,
            data_type: MLCDataType,
        ) -> Retained<Self>;

        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithSequenceLength:featureChannelCount:batchSize:)]
        pub unsafe fn tensorWithSequenceLength_featureChannelCount_batchSize(
            sequence_length: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithSequenceLength:featureChannelCount:batchSize:randomInitializerType:)]
        pub unsafe fn tensorWithSequenceLength_featureChannelCount_batchSize_randomInitializerType(
            sequence_length: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            random_initializer_type: MLCRandomInitializerType,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTensorData")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithSequenceLength:featureChannelCount:batchSize:data:)]
        pub unsafe fn tensorWithSequenceLength_featureChannelCount_batchSize_data(
            sequence_length: NSUInteger,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            data: Option<&MLCTensorData>,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:)]
        pub unsafe fn tensorWithSequenceLengths_sortedSequences_featureChannelCount_batchSize_randomInitializerType(
            sequence_lengths: &NSArray<NSNumber>,
            sorted_sequences: bool,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            random_initializer_type: MLCRandomInitializerType,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "MLCTensorData")]
        #[deprecated]
        #[method_id(@__retain_semantics Other tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:)]
        pub unsafe fn tensorWithSequenceLengths_sortedSequences_featureChannelCount_batchSize_data(
            sequence_lengths: &NSArray<NSNumber>,
            sorted_sequences: bool,
            feature_channel_count: NSUInteger,
            batch_size: NSUInteger,
            data: Option<&MLCTensorData>,
        ) -> Option<Retained<Self>>;

        #[deprecated]
        #[method(hasValidNumerics)]
        pub unsafe fn hasValidNumerics(&self) -> bool;

        #[deprecated]
        #[method(synchronizeData)]
        pub unsafe fn synchronizeData(&self) -> bool;

        #[deprecated]
        #[method(synchronizeOptimizerData)]
        pub unsafe fn synchronizeOptimizerData(&self) -> bool;

        #[deprecated]
        #[method(copyDataFromDeviceMemoryToBytes:length:synchronizeWithDevice:)]
        pub unsafe fn copyDataFromDeviceMemoryToBytes_length_synchronizeWithDevice(
            &self,
            bytes: NonNull<c_void>,
            length: NSUInteger,
            synchronize_with_device: bool,
        ) -> bool;

        #[cfg(all(feature = "MLCDevice", feature = "MLCTensorData"))]
        #[deprecated]
        #[method(bindAndWriteData:toDevice:)]
        pub unsafe fn bindAndWriteData_toDevice(
            &self,
            data: &MLCTensorData,
            device: &MLCDevice,
        ) -> bool;

        #[cfg(all(feature = "MLCTensorData", feature = "MLCTensorOptimizerDeviceData"))]
        #[deprecated]
        #[method(bindOptimizerData:deviceData:)]
        pub unsafe fn bindOptimizerData_deviceData(
            &self,
            data: &NSArray<MLCTensorData>,
            device_data: Option<&NSArray<MLCTensorOptimizerDeviceData>>,
        ) -> bool;

        #[cfg(feature = "MLCTypes")]
        #[method_id(@__retain_semantics Other tensorByQuantizingToType:scale:bias:)]
        pub unsafe fn tensorByQuantizingToType_scale_bias(
            &self,
            r#type: MLCDataType,
            scale: c_float,
            bias: NSInteger,
        ) -> Option<Retained<MLCTensor>>;

        #[cfg(feature = "MLCTypes")]
        #[method_id(@__retain_semantics Other tensorByQuantizingToType:scale:bias:axis:)]
        pub unsafe fn tensorByQuantizingToType_scale_bias_axis(
            &self,
            r#type: MLCDataType,
            scale: &MLCTensor,
            bias: &MLCTensor,
            axis: NSInteger,
        ) -> Option<Retained<MLCTensor>>;

        #[cfg(feature = "MLCTypes")]
        #[method_id(@__retain_semantics Other tensorByDequantizingToType:scale:bias:axis:)]
        pub unsafe fn tensorByDequantizingToType_scale_bias_axis(
            &self,
            r#type: MLCDataType,
            scale: &MLCTensor,
            bias: &MLCTensor,
            axis: NSInteger,
        ) -> Option<Retained<MLCTensor>>;
    }
);
