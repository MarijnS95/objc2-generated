//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MLCGraph")]
    #[deprecated]
    pub struct MLCTrainingGraph;

    #[cfg(feature = "MLCGraph")]
    unsafe impl ClassType for MLCTrainingGraph {
        #[inherits(NSObject)]
        type Super = MLCGraph;
    }
);

#[cfg(feature = "MLCGraph")]
unsafe impl NSObjectProtocol for MLCTrainingGraph {}

extern_methods!(
    #[cfg(feature = "MLCGraph")]
    unsafe impl MLCTrainingGraph {
        #[cfg(feature = "MLCOptimizer")]
        #[deprecated]
        #[method_id(@__retain_semantics Other optimizer)]
        pub unsafe fn optimizer(&self) -> Option<Retained<MLCOptimizer>>;

        #[deprecated]
        #[method(deviceMemorySize)]
        pub unsafe fn deviceMemorySize(&self) -> NSUInteger;

        #[cfg(all(feature = "MLCLayer", feature = "MLCOptimizer"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other graphWithGraphObjects:lossLayer:optimizer:)]
        pub unsafe fn graphWithGraphObjects_lossLayer_optimizer(
            graph_objects: &NSArray<MLCGraph>,
            loss_layer: Option<&MLCLayer>,
            optimizer: Option<&MLCOptimizer>,
        ) -> Retained<Self>;

        #[cfg(feature = "MLCTensor")]
        #[deprecated]
        #[method(addInputs:lossLabels:)]
        pub unsafe fn addInputs_lossLabels(
            &self,
            inputs: &NSDictionary<NSString, MLCTensor>,
            loss_labels: Option<&NSDictionary<NSString, MLCTensor>>,
        ) -> bool;

        #[cfg(feature = "MLCTensor")]
        #[deprecated]
        #[method(addInputs:lossLabels:lossLabelWeights:)]
        pub unsafe fn addInputs_lossLabels_lossLabelWeights(
            &self,
            inputs: &NSDictionary<NSString, MLCTensor>,
            loss_labels: Option<&NSDictionary<NSString, MLCTensor>>,
            loss_label_weights: Option<&NSDictionary<NSString, MLCTensor>>,
        ) -> bool;

        #[cfg(feature = "MLCTensor")]
        #[deprecated]
        #[method(addOutputs:)]
        pub unsafe fn addOutputs(&self, outputs: &NSDictionary<NSString, MLCTensor>) -> bool;

        #[cfg(feature = "MLCTensor")]
        #[deprecated]
        #[method(stopGradientForTensors:)]
        pub unsafe fn stopGradientForTensors(&self, tensors: &NSArray<MLCTensor>) -> bool;

        #[cfg(all(feature = "MLCDevice", feature = "MLCTypes"))]
        #[deprecated]
        #[method(compileWithOptions:device:)]
        pub unsafe fn compileWithOptions_device(
            &self,
            options: MLCGraphCompilationOptions,
            device: &MLCDevice,
        ) -> bool;

        #[cfg(all(
            feature = "MLCDevice",
            feature = "MLCTensor",
            feature = "MLCTensorData",
            feature = "MLCTypes"
        ))]
        #[method(compileWithOptions:device:inputTensors:inputTensorsData:)]
        pub unsafe fn compileWithOptions_device_inputTensors_inputTensorsData(
            &self,
            options: MLCGraphCompilationOptions,
            device: &MLCDevice,
            input_tensors: Option<&NSDictionary<NSString, MLCTensor>>,
            input_tensors_data: Option<&NSDictionary<NSString, MLCTensorData>>,
        ) -> bool;

        #[cfg(feature = "MLCOptimizer")]
        #[deprecated]
        #[method(compileOptimizer:)]
        pub unsafe fn compileOptimizer(&self, optimizer: &MLCOptimizer) -> bool;

        #[deprecated]
        #[method(linkWithGraphs:)]
        pub unsafe fn linkWithGraphs(&self, graphs: &NSArray<MLCTrainingGraph>) -> bool;

        #[cfg(feature = "MLCTensor")]
        #[deprecated]
        #[method_id(@__retain_semantics Other gradientTensorForInput:)]
        pub unsafe fn gradientTensorForInput(
            &self,
            input: &MLCTensor,
        ) -> Option<Retained<MLCTensor>>;

        #[cfg(all(feature = "MLCLayer", feature = "MLCTensor"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other sourceGradientTensorsForLayer:)]
        pub unsafe fn sourceGradientTensorsForLayer(
            &self,
            layer: &MLCLayer,
        ) -> Retained<NSArray<MLCTensor>>;

        #[cfg(all(feature = "MLCLayer", feature = "MLCTensor"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other resultGradientTensorsForLayer:)]
        pub unsafe fn resultGradientTensorsForLayer(
            &self,
            layer: &MLCLayer,
        ) -> Retained<NSArray<MLCTensor>>;

        #[cfg(all(feature = "MLCLayer", feature = "MLCTensor"))]
        #[deprecated]
        #[method_id(@__retain_semantics Other gradientDataForParameter:layer:)]
        pub unsafe fn gradientDataForParameter_layer(
            &self,
            parameter: &MLCTensor,
            layer: &MLCLayer,
        ) -> Option<Retained<NSData>>;

        #[cfg(feature = "MLCTensor")]
        #[deprecated]
        #[method_id(@__retain_semantics Other allocateUserGradientForTensor:)]
        pub unsafe fn allocateUserGradientForTensor(
            &self,
            tensor: &MLCTensor,
        ) -> Option<Retained<MLCTensor>>;

        #[cfg(all(
            feature = "MLCTensor",
            feature = "MLCTensorData",
            feature = "MLCTypes",
            feature = "block2"
        ))]
        #[deprecated]
        #[method(executeWithInputsData:lossLabelsData:lossLabelWeightsData:batchSize:options:completionHandler:)]
        pub unsafe fn executeWithInputsData_lossLabelsData_lossLabelWeightsData_batchSize_options_completionHandler(
            &self,
            inputs_data: &NSDictionary<NSString, MLCTensorData>,
            loss_labels_data: Option<&NSDictionary<NSString, MLCTensorData>>,
            loss_label_weights_data: Option<&NSDictionary<NSString, MLCTensorData>>,
            batch_size: NSUInteger,
            options: MLCExecutionOptions,
            completion_handler: MLCGraphCompletionHandler,
        ) -> bool;

        #[cfg(all(
            feature = "MLCTensor",
            feature = "MLCTensorData",
            feature = "MLCTypes",
            feature = "block2"
        ))]
        #[deprecated]
        #[method(executeWithInputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:completionHandler:)]
        pub unsafe fn executeWithInputsData_lossLabelsData_lossLabelWeightsData_outputsData_batchSize_options_completionHandler(
            &self,
            inputs_data: &NSDictionary<NSString, MLCTensorData>,
            loss_labels_data: Option<&NSDictionary<NSString, MLCTensorData>>,
            loss_label_weights_data: Option<&NSDictionary<NSString, MLCTensorData>>,
            outputs_data: Option<&NSDictionary<NSString, MLCTensorData>>,
            batch_size: NSUInteger,
            options: MLCExecutionOptions,
            completion_handler: MLCGraphCompletionHandler,
        ) -> bool;

        #[cfg(all(feature = "MLCTensor", feature = "MLCTypes", feature = "block2"))]
        #[deprecated]
        #[method(executeForwardWithBatchSize:options:completionHandler:)]
        pub unsafe fn executeForwardWithBatchSize_options_completionHandler(
            &self,
            batch_size: NSUInteger,
            options: MLCExecutionOptions,
            completion_handler: MLCGraphCompletionHandler,
        ) -> bool;

        #[cfg(all(
            feature = "MLCTensor",
            feature = "MLCTensorData",
            feature = "MLCTypes",
            feature = "block2"
        ))]
        #[deprecated]
        #[method(executeForwardWithBatchSize:options:outputsData:completionHandler:)]
        pub unsafe fn executeForwardWithBatchSize_options_outputsData_completionHandler(
            &self,
            batch_size: NSUInteger,
            options: MLCExecutionOptions,
            outputs_data: Option<&NSDictionary<NSString, MLCTensorData>>,
            completion_handler: MLCGraphCompletionHandler,
        ) -> bool;

        #[cfg(all(feature = "MLCTensor", feature = "MLCTypes", feature = "block2"))]
        #[deprecated]
        #[method(executeGradientWithBatchSize:options:completionHandler:)]
        pub unsafe fn executeGradientWithBatchSize_options_completionHandler(
            &self,
            batch_size: NSUInteger,
            options: MLCExecutionOptions,
            completion_handler: MLCGraphCompletionHandler,
        ) -> bool;

        #[cfg(all(
            feature = "MLCTensor",
            feature = "MLCTensorData",
            feature = "MLCTypes",
            feature = "block2"
        ))]
        #[deprecated]
        #[method(executeGradientWithBatchSize:options:outputsData:completionHandler:)]
        pub unsafe fn executeGradientWithBatchSize_options_outputsData_completionHandler(
            &self,
            batch_size: NSUInteger,
            options: MLCExecutionOptions,
            outputs_data: Option<&NSDictionary<NSString, MLCTensorData>>,
            completion_handler: MLCGraphCompletionHandler,
        ) -> bool;

        #[cfg(all(feature = "MLCTensor", feature = "MLCTypes", feature = "block2"))]
        #[deprecated]
        #[method(executeOptimizerUpdateWithOptions:completionHandler:)]
        pub unsafe fn executeOptimizerUpdateWithOptions_completionHandler(
            &self,
            options: MLCExecutionOptions,
            completion_handler: MLCGraphCompletionHandler,
        ) -> bool;

        #[deprecated]
        #[method(synchronizeUpdates)]
        pub unsafe fn synchronizeUpdates(&self);

        #[cfg(feature = "MLCTensorParameter")]
        #[deprecated]
        #[method(setTrainingTensorParameters:)]
        pub unsafe fn setTrainingTensorParameters(
            &self,
            parameters: &NSArray<MLCTensorParameter>,
        ) -> bool;

        #[cfg(all(
            feature = "MLCTensor",
            feature = "MLCTensorData",
            feature = "MLCTensorOptimizerDeviceData"
        ))]
        #[deprecated]
        #[method(bindOptimizerData:deviceData:withTensor:)]
        pub unsafe fn bindOptimizerData_deviceData_withTensor(
            &self,
            data: &NSArray<MLCTensorData>,
            device_data: Option<&NSArray<MLCTensorOptimizerDeviceData>>,
            tensor: &MLCTensor,
        ) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `MLCGraph`
    #[cfg(feature = "MLCGraph")]
    unsafe impl MLCTrainingGraph {
        #[deprecated]
        #[method_id(@__retain_semantics Other graph)]
        pub unsafe fn graph() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MLCGraph")]
    unsafe impl MLCTrainingGraph {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
