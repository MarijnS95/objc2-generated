//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mkcircle?language=objc)
    #[unsafe(super(MKShape, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MKShape")]
    pub struct MKCircle;
);

#[cfg(all(feature = "MKAnnotation", feature = "MKShape"))]
unsafe impl MKAnnotation for MKCircle {}

#[cfg(all(feature = "MKAnnotation", feature = "MKOverlay", feature = "MKShape"))]
unsafe impl MKOverlay for MKCircle {}

#[cfg(feature = "MKShape")]
unsafe impl NSObjectProtocol for MKCircle {}

extern_methods!(
    #[cfg(feature = "MKShape")]
    unsafe impl MKCircle {
        #[cfg(feature = "objc2-core-location")]
        #[unsafe(method(circleWithCenterCoordinate:radius:))]
        #[unsafe(method_family = none)]
        pub unsafe fn circleWithCenterCoordinate_radius(
            coord: CLLocationCoordinate2D,
            radius: CLLocationDistance,
        ) -> Retained<Self>;

        #[cfg(feature = "MKGeometry")]
        #[unsafe(method(circleWithMapRect:))]
        #[unsafe(method_family = none)]
        pub unsafe fn circleWithMapRect(map_rect: MKMapRect) -> Retained<Self>;

        #[cfg(feature = "objc2-core-location")]
        #[unsafe(method(coordinate))]
        #[unsafe(method_family = none)]
        pub unsafe fn coordinate(&self) -> CLLocationCoordinate2D;

        #[cfg(feature = "objc2-core-location")]
        #[unsafe(method(radius))]
        #[unsafe(method_family = none)]
        pub unsafe fn radius(&self) -> CLLocationDistance;

        #[cfg(feature = "MKGeometry")]
        #[unsafe(method(boundingMapRect))]
        #[unsafe(method_family = none)]
        pub unsafe fn boundingMapRect(&self) -> MKMapRect;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MKShape")]
    unsafe impl MKCircle {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
