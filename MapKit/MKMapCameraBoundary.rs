//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mkmapcameraboundary?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MKMapCameraBoundary;
);

unsafe impl NSCoding for MKMapCameraBoundary {}

unsafe impl NSCopying for MKMapCameraBoundary {}

unsafe impl CopyingHelper for MKMapCameraBoundary {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MKMapCameraBoundary {}

unsafe impl NSSecureCoding for MKMapCameraBoundary {}

extern_methods!(
    unsafe impl MKMapCameraBoundary {
        #[cfg(feature = "MKGeometry")]
        #[method_id(@__retain_semantics Init initWithMapRect:)]
        pub unsafe fn initWithMapRect(
            this: Allocated<Self>,
            map_rect: MKMapRect,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "MKGeometry", feature = "objc2-core-location"))]
        #[method_id(@__retain_semantics Init initWithCoordinateRegion:)]
        pub unsafe fn initWithCoordinateRegion(
            this: Allocated<Self>,
            region: MKCoordinateRegion,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "MKGeometry")]
        #[method(mapRect)]
        pub unsafe fn mapRect(&self) -> MKMapRect;

        #[cfg(all(feature = "MKGeometry", feature = "objc2-core-location"))]
        #[method(region)]
        pub unsafe fn region(&self) -> MKCoordinateRegion;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MKMapCameraBoundary {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
