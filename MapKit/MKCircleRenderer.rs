//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mkcirclerenderer?language=objc)
    #[unsafe(super(MKOverlayPathRenderer, MKOverlayRenderer, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MKOverlayPathRenderer", feature = "MKOverlayRenderer"))]
    pub struct MKCircleRenderer;
);

#[cfg(all(feature = "MKOverlayPathRenderer", feature = "MKOverlayRenderer"))]
extern_conformance!(
    unsafe impl NSObjectProtocol for MKCircleRenderer {}
);

#[cfg(all(feature = "MKOverlayPathRenderer", feature = "MKOverlayRenderer"))]
impl MKCircleRenderer {
    extern_methods!(
        #[cfg(all(feature = "MKCircle", feature = "MKShape"))]
        #[unsafe(method(initWithCircle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCircle(this: Allocated<Self>, circle: &MKCircle) -> Retained<Self>;

        #[cfg(all(feature = "MKCircle", feature = "MKShape"))]
        #[unsafe(method(circle))]
        #[unsafe(method_family = none)]
        pub unsafe fn circle(&self) -> Retained<MKCircle>;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(strokeStart))]
        #[unsafe(method_family = none)]
        pub unsafe fn strokeStart(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`strokeStart`][Self::strokeStart].
        #[unsafe(method(setStrokeStart:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setStrokeStart(&self, stroke_start: CGFloat);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(strokeEnd))]
        #[unsafe(method_family = none)]
        pub unsafe fn strokeEnd(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`strokeEnd`][Self::strokeEnd].
        #[unsafe(method(setStrokeEnd:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setStrokeEnd(&self, stroke_end: CGFloat);
    );
}

/// Methods declared on superclass `MKOverlayRenderer`.
#[cfg(all(feature = "MKOverlayPathRenderer", feature = "MKOverlayRenderer"))]
impl MKCircleRenderer {
    extern_methods!(
        #[cfg(all(feature = "MKAnnotation", feature = "MKOverlay"))]
        #[unsafe(method(initWithOverlay:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithOverlay(
            this: Allocated<Self>,
            overlay: &ProtocolObject<dyn MKOverlay>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(feature = "MKOverlayPathRenderer", feature = "MKOverlayRenderer"))]
impl MKCircleRenderer {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
