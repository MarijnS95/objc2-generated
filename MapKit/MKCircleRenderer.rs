//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "MapKit_MKOverlayPathRenderer",
        feature = "MapKit_MKOverlayRenderer"
    ))]
    pub struct MKCircleRenderer;

    #[cfg(all(
        feature = "MapKit_MKOverlayPathRenderer",
        feature = "MapKit_MKOverlayRenderer"
    ))]
    unsafe impl ClassType for MKCircleRenderer {
        #[inherits(MKOverlayRenderer, NSObject)]
        type Super = MKOverlayPathRenderer;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer"
))]
unsafe impl NSObjectProtocol for MKCircleRenderer {}

extern_methods!(
    #[cfg(all(
        feature = "MapKit_MKOverlayPathRenderer",
        feature = "MapKit_MKOverlayRenderer"
    ))]
    unsafe impl MKCircleRenderer {
        #[cfg(all(feature = "MapKit_MKCircle", feature = "MapKit_MKShape"))]
        #[method_id(@__retain_semantics Init initWithCircle:)]
        pub unsafe fn initWithCircle(this: Allocated<Self>, circle: &MKCircle) -> Id<Self>;

        #[cfg(all(feature = "MapKit_MKCircle", feature = "MapKit_MKShape"))]
        #[method_id(@__retain_semantics Other circle)]
        pub unsafe fn circle(&self) -> Id<MKCircle>;

        #[cfg(feature = "Foundation_NSGeometry")]
        #[method(strokeStart)]
        pub unsafe fn strokeStart(&self) -> CGFloat;

        #[cfg(feature = "Foundation_NSGeometry")]
        #[method(setStrokeStart:)]
        pub unsafe fn setStrokeStart(&self, stroke_start: CGFloat);

        #[cfg(feature = "Foundation_NSGeometry")]
        #[method(strokeEnd)]
        pub unsafe fn strokeEnd(&self) -> CGFloat;

        #[cfg(feature = "Foundation_NSGeometry")]
        #[method(setStrokeEnd:)]
        pub unsafe fn setStrokeEnd(&self, stroke_end: CGFloat);
    }
);

extern_methods!(
    /// Methods declared on superclass `MKOverlayRenderer`
    #[cfg(all(
        feature = "MapKit_MKOverlayPathRenderer",
        feature = "MapKit_MKOverlayRenderer"
    ))]
    unsafe impl MKCircleRenderer {
        #[cfg(all(feature = "MapKit_MKAnnotation", feature = "MapKit_MKOverlay"))]
        #[method_id(@__retain_semantics Init initWithOverlay:)]
        pub unsafe fn initWithOverlay(
            this: Allocated<Self>,
            overlay: &ProtocolObject<dyn MKOverlay>,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(
        feature = "MapKit_MKOverlayPathRenderer",
        feature = "MapKit_MKOverlayRenderer"
    ))]
    unsafe impl MKCircleRenderer {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
