//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mkmapcamera?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MKMapCamera;
);

unsafe impl NSCoding for MKMapCamera {}

unsafe impl NSCopying for MKMapCamera {}

unsafe impl CopyingHelper for MKMapCamera {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MKMapCamera {}

unsafe impl NSSecureCoding for MKMapCamera {}

extern_methods!(
    unsafe impl MKMapCamera {
        #[cfg(feature = "objc2-core-location")]
        #[method(centerCoordinate)]
        pub unsafe fn centerCoordinate(&self) -> CLLocationCoordinate2D;

        #[cfg(feature = "objc2-core-location")]
        /// Setter for [`centerCoordinate`][Self::centerCoordinate].
        #[method(setCenterCoordinate:)]
        pub unsafe fn setCenterCoordinate(&self, center_coordinate: CLLocationCoordinate2D);

        #[cfg(feature = "objc2-core-location")]
        #[method(centerCoordinateDistance)]
        pub unsafe fn centerCoordinateDistance(&self) -> CLLocationDistance;

        #[cfg(feature = "objc2-core-location")]
        /// Setter for [`centerCoordinateDistance`][Self::centerCoordinateDistance].
        #[method(setCenterCoordinateDistance:)]
        pub unsafe fn setCenterCoordinateDistance(
            &self,
            center_coordinate_distance: CLLocationDistance,
        );

        #[cfg(feature = "objc2-core-location")]
        #[method(heading)]
        pub unsafe fn heading(&self) -> CLLocationDirection;

        #[cfg(feature = "objc2-core-location")]
        /// Setter for [`heading`][Self::heading].
        #[method(setHeading:)]
        pub unsafe fn setHeading(&self, heading: CLLocationDirection);

        #[cfg(feature = "objc2-core-foundation")]
        #[method(pitch)]
        pub unsafe fn pitch(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`pitch`][Self::pitch].
        #[method(setPitch:)]
        pub unsafe fn setPitch(&self, pitch: CGFloat);

        #[cfg(feature = "objc2-core-location")]
        #[deprecated = "Use centerCoordinateDistance"]
        #[method(altitude)]
        pub unsafe fn altitude(&self) -> CLLocationDistance;

        #[cfg(feature = "objc2-core-location")]
        /// Setter for [`altitude`][Self::altitude].
        #[deprecated = "Use centerCoordinateDistance"]
        #[method(setAltitude:)]
        pub unsafe fn setAltitude(&self, altitude: CLLocationDistance);

        #[method_id(@__method_family Other camera)]
        pub unsafe fn camera() -> Retained<Self>;

        #[cfg(feature = "objc2-core-location")]
        #[method_id(@__method_family Other cameraLookingAtCenterCoordinate:fromEyeCoordinate:eyeAltitude:)]
        pub unsafe fn cameraLookingAtCenterCoordinate_fromEyeCoordinate_eyeAltitude(
            center_coordinate: CLLocationCoordinate2D,
            eye_coordinate: CLLocationCoordinate2D,
            eye_altitude: CLLocationDistance,
        ) -> Retained<Self>;

        #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-location"))]
        #[method_id(@__method_family Other cameraLookingAtCenterCoordinate:fromDistance:pitch:heading:)]
        pub unsafe fn cameraLookingAtCenterCoordinate_fromDistance_pitch_heading(
            center_coordinate: CLLocationCoordinate2D,
            distance: CLLocationDistance,
            pitch: CGFloat,
            heading: CLLocationDirection,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MKMapItem", feature = "objc2-core-foundation"))]
        #[method_id(@__method_family Other cameraLookingAtMapItem:forViewSize:allowPitch:)]
        pub unsafe fn cameraLookingAtMapItem_forViewSize_allowPitch(
            map_item: &MKMapItem,
            view_size: CGSize,
            allow_pitch: bool,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MKMapCamera {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
