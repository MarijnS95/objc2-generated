//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mkmultipoint?language=objc)
    #[unsafe(super(MKShape, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MKShape")]
    pub struct MKMultiPoint;
);

#[cfg(all(feature = "MKAnnotation", feature = "MKShape"))]
unsafe impl MKAnnotation for MKMultiPoint {}

#[cfg(feature = "MKShape")]
unsafe impl NSObjectProtocol for MKMultiPoint {}

extern_methods!(
    #[cfg(feature = "MKShape")]
    unsafe impl MKMultiPoint {
        #[cfg(feature = "MKGeometry")]
        #[method(points)]
        pub unsafe fn points(&self) -> NonNull<MKMapPoint>;

        #[method(pointCount)]
        pub unsafe fn pointCount(&self) -> NSUInteger;

        #[cfg(feature = "objc2-core-location")]
        #[method(getCoordinates:range:)]
        pub unsafe fn getCoordinates_range(
            &self,
            coords: NonNull<CLLocationCoordinate2D>,
            range: NSRange,
        );

        #[cfg(feature = "objc2-core-foundation")]
        #[method(locationAtPointIndex:)]
        pub unsafe fn locationAtPointIndex(&self, index: NSUInteger) -> CGFloat;

        #[method_id(locationsAtPointIndexes:)]
        #[unsafe(method_family = none)]
        pub unsafe fn locationsAtPointIndexes(
            &self,
            indexes: &NSIndexSet,
        ) -> Retained<NSArray<NSNumber>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MKShape")]
    unsafe impl MKMultiPoint {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
