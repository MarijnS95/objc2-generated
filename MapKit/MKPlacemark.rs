//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-contacts")]
#[cfg(not(target_os = "tvos"))]
use objc2_contacts::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mkplacemark?language=objc)
    #[unsafe(super(CLPlacemark, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-core-location")]
    pub struct MKPlacemark;
);

#[cfg(all(feature = "MKAnnotation", feature = "objc2-core-location"))]
unsafe impl MKAnnotation for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSCoding for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSCopying for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl CopyingHelper for MKPlacemark {
    type Result = Self;
}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSObjectProtocol for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSSecureCoding for MKPlacemark {}

extern_methods!(
    #[cfg(feature = "objc2-core-location")]
    unsafe impl MKPlacemark {
        #[unsafe(method_family(init))]
        #[method_id(initWithCoordinate:)]
        pub unsafe fn initWithCoordinate(
            this: Allocated<Self>,
            coordinate: CLLocationCoordinate2D,
        ) -> Retained<Self>;

        #[unsafe(method_family(init))]
        #[method_id(initWithCoordinate:addressDictionary:)]
        pub unsafe fn initWithCoordinate_addressDictionary(
            this: Allocated<Self>,
            coordinate: CLLocationCoordinate2D,
            address_dictionary: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-contacts")]
        #[cfg(not(target_os = "tvos"))]
        #[unsafe(method_family(init))]
        #[method_id(initWithCoordinate:postalAddress:)]
        pub unsafe fn initWithCoordinate_postalAddress(
            this: Allocated<Self>,
            coordinate: CLLocationCoordinate2D,
            postal_address: &CNPostalAddress,
        ) -> Retained<Self>;

        #[unsafe(method_family(none))]
        #[method_id(countryCode)]
        pub unsafe fn countryCode(&self) -> Option<Retained<NSString>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CLPlacemark`
    #[cfg(feature = "objc2-core-location")]
    unsafe impl MKPlacemark {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method_family(init))]
        #[method_id(initWithPlacemark:)]
        pub unsafe fn initWithPlacemark(
            this: Allocated<Self>,
            placemark: &CLPlacemark,
        ) -> Retained<Self>;
    }
);
