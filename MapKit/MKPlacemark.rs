//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-contacts")]
use objc2_contacts::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-core-location")]
    pub struct MKPlacemark;

    #[cfg(feature = "objc2-core-location")]
    unsafe impl ClassType for MKPlacemark {
        #[inherits(NSObject)]
        type Super = CLPlacemark;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(feature = "MKAnnotation", feature = "objc2-core-location"))]
unsafe impl MKAnnotation for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSCoding for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSCopying for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSObjectProtocol for MKPlacemark {}

#[cfg(feature = "objc2-core-location")]
unsafe impl NSSecureCoding for MKPlacemark {}

extern_methods!(
    #[cfg(feature = "objc2-core-location")]
    unsafe impl MKPlacemark {
        #[method_id(@__retain_semantics Init initWithCoordinate:)]
        pub unsafe fn initWithCoordinate(
            this: Allocated<Self>,
            coordinate: CLLocationCoordinate2D,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Init initWithCoordinate:addressDictionary:)]
        pub unsafe fn initWithCoordinate_addressDictionary(
            this: Allocated<Self>,
            coordinate: CLLocationCoordinate2D,
            address_dictionary: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(feature = "objc2-contacts")]
        #[method_id(@__retain_semantics Init initWithCoordinate:postalAddress:)]
        pub unsafe fn initWithCoordinate_postalAddress(
            this: Allocated<Self>,
            coordinate: CLLocationCoordinate2D,
            postal_address: &CNPostalAddress,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Other countryCode)]
        pub unsafe fn countryCode(&self) -> Option<Id<NSString>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CLPlacemark`
    #[cfg(feature = "objc2-core-location")]
    unsafe impl MKPlacemark {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init initWithPlacemark:)]
        pub unsafe fn initWithPlacemark(this: Allocated<Self>, placemark: &CLPlacemark)
            -> Id<Self>;
    }
);
