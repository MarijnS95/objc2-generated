// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

//! # Bindings to the `MapKit` framework
#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]

#[link(name = "MapKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "MapKit_MKAnnotation")]
#[path = "MKAnnotation.rs"]
mod __MKAnnotation;
#[cfg(feature = "MapKit_MKAnnotationView")]
#[path = "MKAnnotationView.rs"]
mod __MKAnnotationView;
#[cfg(feature = "MapKit_MKCircle")]
#[path = "MKCircle.rs"]
mod __MKCircle;
#[cfg(feature = "MapKit_MKCircleRenderer")]
#[path = "MKCircleRenderer.rs"]
mod __MKCircleRenderer;
#[cfg(feature = "MapKit_MKClusterAnnotation")]
#[path = "MKClusterAnnotation.rs"]
mod __MKClusterAnnotation;
#[cfg(feature = "MapKit_MKCompassButton")]
#[path = "MKCompassButton.rs"]
mod __MKCompassButton;
#[cfg(feature = "MapKit_MKDirections")]
#[path = "MKDirections.rs"]
mod __MKDirections;
#[cfg(feature = "MapKit_MKDirectionsRequest")]
#[path = "MKDirectionsRequest.rs"]
mod __MKDirectionsRequest;
#[cfg(feature = "MapKit_MKDirectionsResponse")]
#[path = "MKDirectionsResponse.rs"]
mod __MKDirectionsResponse;
#[cfg(feature = "MapKit_MKDirectionsTypes")]
#[path = "MKDirectionsTypes.rs"]
mod __MKDirectionsTypes;
#[cfg(feature = "MapKit_MKDistanceFormatter")]
#[path = "MKDistanceFormatter.rs"]
mod __MKDistanceFormatter;
#[cfg(feature = "MapKit_MKFoundation")]
#[path = "MKFoundation.rs"]
mod __MKFoundation;
#[cfg(feature = "MapKit_MKGeoJSONSerialization")]
#[path = "MKGeoJSONSerialization.rs"]
mod __MKGeoJSONSerialization;
#[cfg(feature = "MapKit_MKGeodesicPolyline")]
#[path = "MKGeodesicPolyline.rs"]
mod __MKGeodesicPolyline;
#[cfg(feature = "MapKit_MKGeometry")]
#[path = "MKGeometry.rs"]
mod __MKGeometry;
#[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
#[path = "MKGradientPolylineRenderer.rs"]
mod __MKGradientPolylineRenderer;
#[cfg(feature = "MapKit_MKHybridMapConfiguration")]
#[path = "MKHybridMapConfiguration.rs"]
mod __MKHybridMapConfiguration;
#[cfg(feature = "MapKit_MKImageryMapConfiguration")]
#[path = "MKImageryMapConfiguration.rs"]
mod __MKImageryMapConfiguration;
#[cfg(feature = "MapKit_MKLocalPointsOfInterestRequest")]
#[path = "MKLocalPointsOfInterestRequest.rs"]
mod __MKLocalPointsOfInterestRequest;
#[cfg(feature = "MapKit_MKLocalSearch")]
#[path = "MKLocalSearch.rs"]
mod __MKLocalSearch;
#[cfg(feature = "MapKit_MKLocalSearchCompleter")]
#[path = "MKLocalSearchCompleter.rs"]
mod __MKLocalSearchCompleter;
#[cfg(feature = "MapKit_MKLocalSearchRequest")]
#[path = "MKLocalSearchRequest.rs"]
mod __MKLocalSearchRequest;
#[cfg(feature = "MapKit_MKLocalSearchResponse")]
#[path = "MKLocalSearchResponse.rs"]
mod __MKLocalSearchResponse;
#[cfg(feature = "MapKit_MKLookAroundScene")]
#[path = "MKLookAroundScene.rs"]
mod __MKLookAroundScene;
#[cfg(feature = "MapKit_MKLookAroundSceneRequest")]
#[path = "MKLookAroundSceneRequest.rs"]
mod __MKLookAroundSceneRequest;
#[cfg(feature = "MapKit_MKLookAroundSnapshot")]
#[path = "MKLookAroundSnapshot.rs"]
mod __MKLookAroundSnapshot;
#[cfg(feature = "MapKit_MKLookAroundSnapshotOptions")]
#[path = "MKLookAroundSnapshotOptions.rs"]
mod __MKLookAroundSnapshotOptions;
#[cfg(feature = "MapKit_MKLookAroundSnapshotter")]
#[path = "MKLookAroundSnapshotter.rs"]
mod __MKLookAroundSnapshotter;
#[cfg(feature = "MapKit_MKLookAroundViewController")]
#[path = "MKLookAroundViewController.rs"]
mod __MKLookAroundViewController;
#[cfg(feature = "MapKit_MKMapCamera")]
#[path = "MKMapCamera.rs"]
mod __MKMapCamera;
#[cfg(feature = "MapKit_MKMapCameraBoundary")]
#[path = "MKMapCameraBoundary.rs"]
mod __MKMapCameraBoundary;
#[cfg(feature = "MapKit_MKMapCameraZoomRange")]
#[path = "MKMapCameraZoomRange.rs"]
mod __MKMapCameraZoomRange;
#[cfg(feature = "MapKit_MKMapConfiguration")]
#[path = "MKMapConfiguration.rs"]
mod __MKMapConfiguration;
#[cfg(feature = "MapKit_MKMapItem")]
#[path = "MKMapItem.rs"]
mod __MKMapItem;
#[cfg(feature = "MapKit_MKMapSnapshot")]
#[path = "MKMapSnapshot.rs"]
mod __MKMapSnapshot;
#[cfg(feature = "MapKit_MKMapSnapshotOptions")]
#[path = "MKMapSnapshotOptions.rs"]
mod __MKMapSnapshotOptions;
#[cfg(feature = "MapKit_MKMapSnapshotter")]
#[path = "MKMapSnapshotter.rs"]
mod __MKMapSnapshotter;
#[cfg(feature = "MapKit_MKMapView")]
#[path = "MKMapView.rs"]
mod __MKMapView;
#[cfg(feature = "MapKit_MKMarkerAnnotationView")]
#[path = "MKMarkerAnnotationView.rs"]
mod __MKMarkerAnnotationView;
#[cfg(feature = "MapKit_MKMultiPoint")]
#[path = "MKMultiPoint.rs"]
mod __MKMultiPoint;
#[cfg(feature = "MapKit_MKMultiPolygon")]
#[path = "MKMultiPolygon.rs"]
mod __MKMultiPolygon;
#[cfg(feature = "MapKit_MKMultiPolygonRenderer")]
#[path = "MKMultiPolygonRenderer.rs"]
mod __MKMultiPolygonRenderer;
#[cfg(feature = "MapKit_MKMultiPolyline")]
#[path = "MKMultiPolyline.rs"]
mod __MKMultiPolyline;
#[cfg(feature = "MapKit_MKMultiPolylineRenderer")]
#[path = "MKMultiPolylineRenderer.rs"]
mod __MKMultiPolylineRenderer;
#[cfg(feature = "MapKit_MKOverlay")]
#[path = "MKOverlay.rs"]
mod __MKOverlay;
#[cfg(feature = "MapKit_MKOverlayPathRenderer")]
#[path = "MKOverlayPathRenderer.rs"]
mod __MKOverlayPathRenderer;
#[cfg(feature = "MapKit_MKOverlayRenderer")]
#[path = "MKOverlayRenderer.rs"]
mod __MKOverlayRenderer;
#[cfg(feature = "MapKit_MKPinAnnotationView")]
#[path = "MKPinAnnotationView.rs"]
mod __MKPinAnnotationView;
#[cfg(feature = "MapKit_MKPitchControl")]
#[path = "MKPitchControl.rs"]
mod __MKPitchControl;
#[cfg(feature = "MapKit_MKPlacemark")]
#[path = "MKPlacemark.rs"]
mod __MKPlacemark;
#[cfg(feature = "MapKit_MKPointAnnotation")]
#[path = "MKPointAnnotation.rs"]
mod __MKPointAnnotation;
#[cfg(feature = "MapKit_MKPointOfInterestCategory")]
#[path = "MKPointOfInterestCategory.rs"]
mod __MKPointOfInterestCategory;
#[cfg(feature = "MapKit_MKPointOfInterestFilter")]
#[path = "MKPointOfInterestFilter.rs"]
mod __MKPointOfInterestFilter;
#[cfg(feature = "MapKit_MKPolygon")]
#[path = "MKPolygon.rs"]
mod __MKPolygon;
#[cfg(feature = "MapKit_MKPolygonRenderer")]
#[path = "MKPolygonRenderer.rs"]
mod __MKPolygonRenderer;
#[cfg(feature = "MapKit_MKPolyline")]
#[path = "MKPolyline.rs"]
mod __MKPolyline;
#[cfg(feature = "MapKit_MKPolylineRenderer")]
#[path = "MKPolylineRenderer.rs"]
mod __MKPolylineRenderer;
#[cfg(feature = "MapKit_MKShape")]
#[path = "MKShape.rs"]
mod __MKShape;
#[cfg(feature = "MapKit_MKStandardMapConfiguration")]
#[path = "MKStandardMapConfiguration.rs"]
mod __MKStandardMapConfiguration;
#[cfg(feature = "MapKit_MKTileOverlay")]
#[path = "MKTileOverlay.rs"]
mod __MKTileOverlay;
#[cfg(feature = "MapKit_MKTileOverlayRenderer")]
#[path = "MKTileOverlayRenderer.rs"]
mod __MKTileOverlayRenderer;
#[cfg(feature = "MapKit_MKTypes")]
#[path = "MKTypes.rs"]
mod __MKTypes;
#[cfg(feature = "MapKit_MKUserLocation")]
#[path = "MKUserLocation.rs"]
mod __MKUserLocation;
#[cfg(feature = "MapKit_MKUserLocationView")]
#[path = "MKUserLocationView.rs"]
mod __MKUserLocationView;
#[cfg(feature = "MapKit_MKZoomControl")]
#[path = "MKZoomControl.rs"]
mod __MKZoomControl;
#[cfg(feature = "MapKit_NSUserActivity_MKMapItem")]
#[path = "NSUserActivity_MKMapItem.rs"]
mod __NSUserActivity_MKMapItem;

#[cfg(feature = "MapKit_MKAnnotation")]
pub use self::__MKAnnotation::MKAnnotation;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKAnnotationView"))]
pub use self::__MKAnnotationView::MKAnnotationCalloutInfoDidChangeNotification;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKAnnotationView"
))]
pub use self::__MKAnnotationView::MKAnnotationView;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKAnnotationViewCollisionMode;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKAnnotationViewDragState;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKAnnotationViewZPriority;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKAnnotationViewZPriorityDefaultSelected;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKAnnotationViewZPriorityDefaultUnselected;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKAnnotationViewZPriorityMax;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKAnnotationViewZPriorityMin;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKFeatureDisplayPriority;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKFeatureDisplayPriorityDefaultHigh;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKFeatureDisplayPriorityDefaultLow;
#[cfg(feature = "MapKit_MKAnnotationView")]
pub use self::__MKAnnotationView::MKFeatureDisplayPriorityRequired;
#[cfg(all(feature = "MapKit_MKCircle", feature = "MapKit_MKShape"))]
pub use self::__MKCircle::MKCircle;
#[cfg(all(
    feature = "MapKit_MKCircleRenderer",
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer"
))]
pub use self::__MKCircleRenderer::MKCircleRenderer;
#[cfg(feature = "MapKit_MKClusterAnnotation")]
pub use self::__MKClusterAnnotation::MKClusterAnnotation;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKCompassButton"
))]
pub use self::__MKCompassButton::MKCompassButton;
#[cfg(feature = "MapKit_MKDirections")]
pub use self::__MKDirections::MKDirections;
#[cfg(all(
    feature = "Foundation_NSError",
    feature = "MapKit_MKDirections",
    feature = "MapKit_MKDirectionsResponse"
))]
pub use self::__MKDirections::MKDirectionsHandler;
#[cfg(all(
    feature = "Foundation_NSError",
    feature = "MapKit_MKDirections",
    feature = "MapKit_MKDirectionsResponse"
))]
pub use self::__MKDirections::MKETAHandler;
#[cfg(feature = "MapKit_MKDirectionsRequest")]
pub use self::__MKDirectionsRequest::MKDirectionsRequest;
#[cfg(feature = "MapKit_MKDirectionsRequest")]
pub use self::__MKDirectionsRequest::MKDirectionsRoutePreference;
#[cfg(feature = "MapKit_MKDirectionsResponse")]
pub use self::__MKDirectionsResponse::MKDirectionsResponse;
#[cfg(feature = "MapKit_MKDirectionsResponse")]
pub use self::__MKDirectionsResponse::MKETAResponse;
#[cfg(feature = "MapKit_MKDirectionsResponse")]
pub use self::__MKDirectionsResponse::MKRoute;
#[cfg(feature = "MapKit_MKDirectionsResponse")]
pub use self::__MKDirectionsResponse::MKRouteStep;
#[cfg(feature = "MapKit_MKDirectionsTypes")]
pub use self::__MKDirectionsTypes::MKDirectionsTransportType;
#[cfg(all(
    feature = "Foundation_NSFormatter",
    feature = "MapKit_MKDistanceFormatter"
))]
pub use self::__MKDistanceFormatter::MKDistanceFormatter;
#[cfg(feature = "MapKit_MKDistanceFormatter")]
pub use self::__MKDistanceFormatter::MKDistanceFormatterUnitStyle;
#[cfg(feature = "MapKit_MKDistanceFormatter")]
pub use self::__MKDistanceFormatter::MKDistanceFormatterUnits;
#[cfg(feature = "MapKit_MKGeoJSONSerialization")]
pub use self::__MKGeoJSONSerialization::MKGeoJSONDecoder;
#[cfg(feature = "MapKit_MKGeoJSONSerialization")]
pub use self::__MKGeoJSONSerialization::MKGeoJSONFeature;
#[cfg(feature = "MapKit_MKGeoJSONSerialization")]
pub use self::__MKGeoJSONSerialization::MKGeoJSONObject;
#[cfg(all(
    feature = "MapKit_MKGeodesicPolyline",
    feature = "MapKit_MKMultiPoint",
    feature = "MapKit_MKPolyline",
    feature = "MapKit_MKShape"
))]
pub use self::__MKGeodesicPolyline::MKGeodesicPolyline;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKCoordinateForMapPoint;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKCoordinateRegion;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKCoordinateRegionForMapRect;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKCoordinateRegionMakeWithDistance;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKCoordinateSpan;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapPoint;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKMapPointForCoordinate;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKMapPointsPerMeterAtLatitude;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRect;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectContainsPoint;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectContainsRect;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectInset;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectIntersection;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectIntersectsRect;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectNull;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectOffset;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectRemainder;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectSpans180thMeridian;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectUnion;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapRectWorld;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapSize;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::MKMapSizeWorld;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKMetersBetweenMapPoints;
#[cfg(all(feature = "CoreLocation_CLLocation", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKMetersPerMapPointAtLatitude;
#[cfg(all(feature = "Foundation_NSGeometry", feature = "MapKit_MKGeometry"))]
pub use self::__MKGeometry::MKZoomScale;
#[cfg(feature = "MapKit_MKGeometry")]
pub use self::__MKGeometry::NSValueMapKitGeometryExtensions;
#[cfg(all(
    feature = "MapKit_MKGradientPolylineRenderer",
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer",
    feature = "MapKit_MKPolylineRenderer"
))]
pub use self::__MKGradientPolylineRenderer::MKGradientPolylineRenderer;
#[cfg(all(
    feature = "MapKit_MKHybridMapConfiguration",
    feature = "MapKit_MKMapConfiguration"
))]
pub use self::__MKHybridMapConfiguration::MKHybridMapConfiguration;
#[cfg(all(
    feature = "MapKit_MKImageryMapConfiguration",
    feature = "MapKit_MKMapConfiguration"
))]
pub use self::__MKImageryMapConfiguration::MKImageryMapConfiguration;
#[cfg(feature = "MapKit_MKLocalPointsOfInterestRequest")]
pub use self::__MKLocalPointsOfInterestRequest::MKLocalPointsOfInterestRequest;
#[cfg(all(
    feature = "CoreLocation_CLLocation",
    feature = "MapKit_MKLocalPointsOfInterestRequest"
))]
pub use self::__MKLocalPointsOfInterestRequest::MKPointsOfInterestRequestMaxRadius;
#[cfg(feature = "MapKit_MKLocalSearch")]
pub use self::__MKLocalSearch::MKLocalSearch;
#[cfg(all(
    feature = "Foundation_NSError",
    feature = "MapKit_MKLocalSearch",
    feature = "MapKit_MKLocalSearchResponse"
))]
pub use self::__MKLocalSearch::MKLocalSearchCompletionHandler;
#[cfg(feature = "MapKit_MKLocalSearchCompleter")]
pub use self::__MKLocalSearchCompleter::MKLocalSearchCompleter;
#[cfg(feature = "MapKit_MKLocalSearchCompleter")]
pub use self::__MKLocalSearchCompleter::MKLocalSearchCompleterDelegate;
#[cfg(feature = "MapKit_MKLocalSearchCompleter")]
pub use self::__MKLocalSearchCompleter::MKLocalSearchCompleterResultType;
#[cfg(feature = "MapKit_MKLocalSearchCompleter")]
pub use self::__MKLocalSearchCompleter::MKLocalSearchCompletion;
#[cfg(feature = "MapKit_MKLocalSearchCompleter")]
pub use self::__MKLocalSearchCompleter::MKSearchCompletionFilterType;
#[cfg(feature = "MapKit_MKLocalSearchRequest")]
pub use self::__MKLocalSearchRequest::MKLocalSearchRequest;
#[cfg(feature = "MapKit_MKLocalSearchRequest")]
pub use self::__MKLocalSearchRequest::MKLocalSearchResultType;
#[cfg(feature = "MapKit_MKLocalSearchResponse")]
pub use self::__MKLocalSearchResponse::MKLocalSearchResponse;
#[cfg(feature = "MapKit_MKLookAroundScene")]
pub use self::__MKLookAroundScene::MKLookAroundScene;
#[cfg(feature = "MapKit_MKLookAroundSceneRequest")]
pub use self::__MKLookAroundSceneRequest::MKLookAroundSceneRequest;
#[cfg(feature = "MapKit_MKLookAroundSnapshot")]
pub use self::__MKLookAroundSnapshot::MKLookAroundSnapshot;
#[cfg(feature = "MapKit_MKLookAroundSnapshotOptions")]
pub use self::__MKLookAroundSnapshotOptions::MKLookAroundSnapshotOptions;
#[cfg(feature = "MapKit_MKLookAroundSnapshotter")]
pub use self::__MKLookAroundSnapshotter::MKLookAroundSnapshotter;
#[cfg(feature = "MapKit_MKLookAroundViewController")]
pub use self::__MKLookAroundViewController::MKLookAroundBadgePosition;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSViewController",
    feature = "MapKit_MKLookAroundViewController"
))]
pub use self::__MKLookAroundViewController::MKLookAroundViewController;
#[cfg(feature = "MapKit_MKLookAroundViewController")]
pub use self::__MKLookAroundViewController::MKLookAroundViewControllerDelegate;
#[cfg(feature = "MapKit_MKMapCamera")]
pub use self::__MKMapCamera::MKMapCamera;
#[cfg(feature = "MapKit_MKMapCameraBoundary")]
pub use self::__MKMapCameraBoundary::MKMapCameraBoundary;
#[cfg(all(
    feature = "CoreLocation_CLLocation",
    feature = "MapKit_MKMapCameraZoomRange"
))]
pub use self::__MKMapCameraZoomRange::MKMapCameraZoomDefault;
#[cfg(feature = "MapKit_MKMapCameraZoomRange")]
pub use self::__MKMapCameraZoomRange::MKMapCameraZoomRange;
#[cfg(feature = "MapKit_MKMapConfiguration")]
pub use self::__MKMapConfiguration::MKMapConfiguration;
#[cfg(feature = "MapKit_MKMapConfiguration")]
pub use self::__MKMapConfiguration::MKMapElevationStyle;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsCameraKey;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsDirectionsModeDefault;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsDirectionsModeDriving;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsDirectionsModeKey;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsDirectionsModeTransit;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsDirectionsModeWalking;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsMapCenterKey;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsMapSpanKey;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsMapTypeKey;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKLaunchOptionsShowsTrafficKey;
#[cfg(feature = "MapKit_MKMapItem")]
pub use self::__MKMapItem::MKMapItem;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapItem"))]
pub use self::__MKMapItem::MKMapItemTypeIdentifier;
#[cfg(feature = "MapKit_MKMapSnapshot")]
pub use self::__MKMapSnapshot::MKMapSnapshot;
#[cfg(feature = "MapKit_MKMapSnapshotOptions")]
pub use self::__MKMapSnapshotOptions::MKMapSnapshotOptions;
#[cfg(all(
    feature = "Foundation_NSError",
    feature = "MapKit_MKMapSnapshot",
    feature = "MapKit_MKMapSnapshotter"
))]
pub use self::__MKMapSnapshotter::MKMapSnapshotCompletionHandler;
#[cfg(feature = "MapKit_MKMapSnapshotter")]
pub use self::__MKMapSnapshotter::MKMapSnapshotter;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKMapView"
))]
pub use self::__MKMapView::MKMapView;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapView"))]
pub use self::__MKMapView::MKMapViewDefaultAnnotationViewReuseIdentifier;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKMapView"))]
pub use self::__MKMapView::MKMapViewDefaultClusterAnnotationViewReuseIdentifier;
#[cfg(feature = "MapKit_MKMapView")]
pub use self::__MKMapView::MKMapViewDelegate;
#[cfg(feature = "MapKit_MKMapView")]
pub use self::__MKMapView::MKOverlayLevel;
#[cfg(feature = "MapKit_MKMapView")]
pub use self::__MKMapView::MKUserTrackingMode;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKAnnotationView",
    feature = "MapKit_MKMarkerAnnotationView"
))]
pub use self::__MKMarkerAnnotationView::MKMarkerAnnotationView;
#[cfg(all(feature = "MapKit_MKMultiPoint", feature = "MapKit_MKShape"))]
pub use self::__MKMultiPoint::MKMultiPoint;
#[cfg(all(feature = "MapKit_MKMultiPolygon", feature = "MapKit_MKShape"))]
pub use self::__MKMultiPolygon::MKMultiPolygon;
#[cfg(all(
    feature = "MapKit_MKMultiPolygonRenderer",
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer"
))]
pub use self::__MKMultiPolygonRenderer::MKMultiPolygonRenderer;
#[cfg(all(feature = "MapKit_MKMultiPolyline", feature = "MapKit_MKShape"))]
pub use self::__MKMultiPolyline::MKMultiPolyline;
#[cfg(all(
    feature = "MapKit_MKMultiPolylineRenderer",
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer"
))]
pub use self::__MKMultiPolylineRenderer::MKMultiPolylineRenderer;
#[cfg(all(feature = "MapKit_MKAnnotation", feature = "MapKit_MKOverlay"))]
pub use self::__MKOverlay::MKOverlay;
#[cfg(all(
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer"
))]
pub use self::__MKOverlayPathRenderer::MKOverlayPathRenderer;
#[cfg(feature = "MapKit_MKOverlayRenderer")]
pub use self::__MKOverlayRenderer::MKOverlayRenderer;
#[cfg(all(
    feature = "Foundation_NSGeometry",
    feature = "MapKit_MKGeometry",
    feature = "MapKit_MKOverlayRenderer"
))]
pub use self::__MKOverlayRenderer::MKRoadWidthAtZoomScale;
#[cfg(feature = "MapKit_MKPinAnnotationView")]
pub use self::__MKPinAnnotationView::MKPinAnnotationColor;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKAnnotationView",
    feature = "MapKit_MKPinAnnotationView"
))]
pub use self::__MKPinAnnotationView::MKPinAnnotationView;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKPitchControl"
))]
pub use self::__MKPitchControl::MKPitchControl;
#[cfg(all(feature = "CoreLocation_CLPlacemark", feature = "MapKit_MKPlacemark"))]
pub use self::__MKPlacemark::MKPlacemark;
#[cfg(all(feature = "MapKit_MKPointAnnotation", feature = "MapKit_MKShape"))]
pub use self::__MKPointAnnotation::MKPointAnnotation;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategory;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryATM;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryAirport;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryAmusementPark;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryAquarium;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryBakery;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryBank;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryBeach;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryBrewery;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryCafe;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryCampground;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryCarRental;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryEVCharger;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryFireStation;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryFitnessCenter;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryFoodMarket;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryGasStation;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryHospital;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryHotel;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryLaundry;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryLibrary;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryMarina;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryMovieTheater;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryMuseum;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryNationalPark;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryNightlife;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryPark;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryParking;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryPharmacy;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryPolice;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryPostOffice;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryPublicTransport;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryRestaurant;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryRestroom;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategorySchool;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryStadium;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryStore;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryTheater;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryUniversity;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryWinery;
#[cfg(all(
    feature = "Foundation_NSString",
    feature = "MapKit_MKPointOfInterestCategory"
))]
pub use self::__MKPointOfInterestCategory::MKPointOfInterestCategoryZoo;
#[cfg(feature = "MapKit_MKPointOfInterestFilter")]
pub use self::__MKPointOfInterestFilter::MKPointOfInterestFilter;
#[cfg(all(
    feature = "MapKit_MKMultiPoint",
    feature = "MapKit_MKPolygon",
    feature = "MapKit_MKShape"
))]
pub use self::__MKPolygon::MKPolygon;
#[cfg(all(
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer",
    feature = "MapKit_MKPolygonRenderer"
))]
pub use self::__MKPolygonRenderer::MKPolygonRenderer;
#[cfg(all(
    feature = "MapKit_MKMultiPoint",
    feature = "MapKit_MKPolyline",
    feature = "MapKit_MKShape"
))]
pub use self::__MKPolyline::MKPolyline;
#[cfg(all(
    feature = "MapKit_MKOverlayPathRenderer",
    feature = "MapKit_MKOverlayRenderer",
    feature = "MapKit_MKPolylineRenderer"
))]
pub use self::__MKPolylineRenderer::MKPolylineRenderer;
#[cfg(feature = "MapKit_MKShape")]
pub use self::__MKShape::MKShape;
#[cfg(all(
    feature = "MapKit_MKMapConfiguration",
    feature = "MapKit_MKStandardMapConfiguration"
))]
pub use self::__MKStandardMapConfiguration::MKStandardMapConfiguration;
#[cfg(feature = "MapKit_MKStandardMapConfiguration")]
pub use self::__MKStandardMapConfiguration::MKStandardMapEmphasisStyle;
#[cfg(feature = "MapKit_MKTileOverlay")]
pub use self::__MKTileOverlay::MKTileOverlay;
#[cfg(all(feature = "Foundation_NSGeometry", feature = "MapKit_MKTileOverlay"))]
pub use self::__MKTileOverlay::MKTileOverlayPath;
#[cfg(all(
    feature = "MapKit_MKOverlayRenderer",
    feature = "MapKit_MKTileOverlayRenderer"
))]
pub use self::__MKTileOverlayRenderer::MKTileOverlayRenderer;
#[cfg(feature = "MapKit_MKTypes")]
pub use self::__MKTypes::MKErrorCode;
#[cfg(all(feature = "Foundation_NSString", feature = "MapKit_MKTypes"))]
pub use self::__MKTypes::MKErrorDomain;
#[cfg(feature = "MapKit_MKTypes")]
pub use self::__MKTypes::MKFeatureVisibility;
#[cfg(feature = "MapKit_MKTypes")]
pub use self::__MKTypes::MKMapType;
#[cfg(feature = "MapKit_MKUserLocation")]
pub use self::__MKUserLocation::MKUserLocation;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKAnnotationView",
    feature = "MapKit_MKUserLocationView"
))]
pub use self::__MKUserLocationView::MKUserLocationView;
#[cfg(all(
    feature = "AppKit_NSResponder",
    feature = "AppKit_NSView",
    feature = "MapKit_MKZoomControl"
))]
pub use self::__MKZoomControl::MKZoomControl;
#[cfg(feature = "MapKit_NSUserActivity_MKMapItem")]
pub use self::__NSUserActivity_MKMapItem::NSUserActivityMKMapItem;
