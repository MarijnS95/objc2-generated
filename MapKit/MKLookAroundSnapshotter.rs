//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MKLookAroundSnapshotter;
);

unsafe impl NSObjectProtocol for MKLookAroundSnapshotter {}

extern_methods!(
    unsafe impl MKLookAroundSnapshotter {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "MKLookAroundScene", feature = "MKLookAroundSnapshotOptions"))]
        #[method_id(@__retain_semantics Init initWithScene:options:)]
        pub unsafe fn initWithScene_options(
            this: Allocated<Self>,
            scene: &MKLookAroundScene,
            options: &MKLookAroundSnapshotOptions,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MKLookAroundSnapshot", feature = "block2"))]
        #[method(getSnapshotWithCompletionHandler:)]
        pub unsafe fn getSnapshotWithCompletionHandler(
            &self,
            completion_handler: &block2::Block<dyn Fn(*mut MKLookAroundSnapshot, *mut NSError)>,
        );

        #[method(cancel)]
        pub unsafe fn cancel(&self);

        #[method(isLoading)]
        pub unsafe fn isLoading(&self) -> bool;
    }
);
