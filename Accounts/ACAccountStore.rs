//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "block2")]
use block2::*;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ACAccountCredentialRenewResult(pub NSInteger);
impl ACAccountCredentialRenewResult {
    #[doc(alias = "ACAccountCredentialRenewResultRenewed")]
    pub const Renewed: Self = Self(0);
    #[doc(alias = "ACAccountCredentialRenewResultRejected")]
    pub const Rejected: Self = Self(1);
    #[doc(alias = "ACAccountCredentialRenewResultFailed")]
    pub const Failed: Self = Self(2);
}

unsafe impl Encode for ACAccountCredentialRenewResult {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for ACAccountCredentialRenewResult {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

#[cfg(feature = "block2")]
pub type ACAccountStoreSaveCompletionHandler = *mut Block<dyn Fn(Bool, *mut NSError)>;

#[cfg(feature = "block2")]
pub type ACAccountStoreRemoveCompletionHandler = *mut Block<dyn Fn(Bool, *mut NSError)>;

#[cfg(feature = "block2")]
pub type ACAccountStoreRequestAccessCompletionHandler = *mut Block<dyn Fn(Bool, *mut NSError)>;

#[cfg(feature = "block2")]
pub type ACAccountStoreCredentialRenewalHandler =
    *mut Block<dyn Fn(ACAccountCredentialRenewResult, *mut NSError)>;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
    pub struct ACAccountStore;

    unsafe impl ClassType for ACAccountStore {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for ACAccountStore {}

extern_methods!(
    unsafe impl ACAccountStore {
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method_id(@__retain_semantics Other accounts)]
        pub unsafe fn accounts(&self) -> Option<Id<NSArray>>;

        #[cfg(feature = "ACAccount")]
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method_id(@__retain_semantics Other accountWithIdentifier:)]
        pub unsafe fn accountWithIdentifier(
            &self,
            identifier: Option<&NSString>,
        ) -> Option<Id<ACAccount>>;

        #[cfg(feature = "ACAccountType")]
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method_id(@__retain_semantics Other accountTypeWithAccountTypeIdentifier:)]
        pub unsafe fn accountTypeWithAccountTypeIdentifier(
            &self,
            type_identifier: Option<&NSString>,
        ) -> Option<Id<ACAccountType>>;

        #[cfg(feature = "ACAccountType")]
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method_id(@__retain_semantics Other accountsWithAccountType:)]
        pub unsafe fn accountsWithAccountType(
            &self,
            account_type: Option<&ACAccountType>,
        ) -> Option<Id<NSArray>>;

        #[cfg(all(feature = "ACAccount", feature = "block2"))]
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method(saveAccount:withCompletionHandler:)]
        pub unsafe fn saveAccount_withCompletionHandler(
            &self,
            account: Option<&ACAccount>,
            completion_handler: ACAccountStoreSaveCompletionHandler,
        );

        #[cfg(all(feature = "ACAccountType", feature = "block2"))]
        #[deprecated]
        #[method(requestAccessToAccountsWithType:withCompletionHandler:)]
        pub unsafe fn requestAccessToAccountsWithType_withCompletionHandler(
            &self,
            account_type: Option<&ACAccountType>,
            handler: ACAccountStoreRequestAccessCompletionHandler,
        );

        #[cfg(all(feature = "ACAccountType", feature = "block2"))]
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method(requestAccessToAccountsWithType:options:completion:)]
        pub unsafe fn requestAccessToAccountsWithType_options_completion(
            &self,
            account_type: Option<&ACAccountType>,
            options: Option<&NSDictionary>,
            completion: ACAccountStoreRequestAccessCompletionHandler,
        );

        #[cfg(all(feature = "ACAccount", feature = "block2"))]
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method(renewCredentialsForAccount:completion:)]
        pub unsafe fn renewCredentialsForAccount_completion(
            &self,
            account: Option<&ACAccount>,
            completion_handler: ACAccountStoreCredentialRenewalHandler,
        );

        #[cfg(all(feature = "ACAccount", feature = "block2"))]
        #[deprecated = "Use appropriate non-Apple SDK corresponding to the type of account you want to reference instead"]
        #[method(removeAccount:withCompletionHandler:)]
        pub unsafe fn removeAccount_withCompletionHandler(
            &self,
            account: Option<&ACAccount>,
            completion_handler: ACAccountStoreRemoveCompletionHandler,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl ACAccountStore {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern "C" {
    pub static ACAccountStoreDidChangeNotification: Option<&'static NSString>;
}
