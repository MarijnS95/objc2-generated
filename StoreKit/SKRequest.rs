//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/storekit/skrequest?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "No longer supported"]
    pub struct SKRequest;
);

unsafe impl NSObjectProtocol for SKRequest {}

extern_methods!(
    unsafe impl SKRequest {
        #[deprecated = "No longer supported"]
        #[method_id(delegate)]
        #[unsafe(method_family = none)]
        pub unsafe fn delegate(&self) -> Option<Retained<ProtocolObject<dyn SKRequestDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`delegate`][Self::delegate].
        #[deprecated = "No longer supported"]
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(&self, delegate: Option<&ProtocolObject<dyn SKRequestDelegate>>);

        #[deprecated = "No longer supported"]
        #[method(cancel)]
        pub unsafe fn cancel(&self);

        #[deprecated = "No longer supported"]
        #[method(start)]
        pub unsafe fn start(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SKRequest {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/storekit/skrequestdelegate?language=objc)
    #[deprecated = "No longer supported"]
    pub unsafe trait SKRequestDelegate: NSObjectProtocol {
        #[deprecated = "No longer supported"]
        #[optional]
        #[method(requestDidFinish:)]
        unsafe fn requestDidFinish(&self, request: &SKRequest);

        #[deprecated = "No longer supported"]
        #[optional]
        #[method(request:didFailWithError:)]
        unsafe fn request_didFailWithError(&self, request: &SKRequest, error: &NSError);
    }
);
