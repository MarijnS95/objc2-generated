//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/cryptotokenkit/tkerrordomain?language=objc)
    pub static TKErrorDomain: &'static NSString;
}

/// [Apple's documentation](https://developer.apple.com/documentation/cryptotokenkit/tkerrorcode?language=objc)
// NS_ERROR_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct TKErrorCode(pub NSInteger);
impl TKErrorCode {
    #[doc(alias = "TKErrorCodeNotImplemented")]
    pub const NotImplemented: Self = Self(-1);
    #[doc(alias = "TKErrorCodeCommunicationError")]
    pub const CommunicationError: Self = Self(-2);
    #[doc(alias = "TKErrorCodeCorruptedData")]
    pub const CorruptedData: Self = Self(-3);
    #[doc(alias = "TKErrorCodeCanceledByUser")]
    pub const CanceledByUser: Self = Self(-4);
    #[doc(alias = "TKErrorCodeAuthenticationFailed")]
    pub const AuthenticationFailed: Self = Self(-5);
    #[doc(alias = "TKErrorCodeObjectNotFound")]
    pub const ObjectNotFound: Self = Self(-6);
    #[doc(alias = "TKErrorCodeTokenNotFound")]
    pub const TokenNotFound: Self = Self(-7);
    #[doc(alias = "TKErrorCodeBadParameter")]
    pub const BadParameter: Self = Self(-8);
    #[doc(alias = "TKErrorCodeAuthenticationNeeded")]
    pub const AuthenticationNeeded: Self = Self(-9);
    #[deprecated]
    pub const TKErrorAuthenticationFailed: Self = Self(TKErrorCode::AuthenticationFailed.0);
    #[deprecated]
    pub const TKErrorObjectNotFound: Self = Self(TKErrorCode::ObjectNotFound.0);
    #[deprecated]
    pub const TKErrorTokenNotFound: Self = Self(TKErrorCode::TokenNotFound.0);
}

unsafe impl Encode for TKErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for TKErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
