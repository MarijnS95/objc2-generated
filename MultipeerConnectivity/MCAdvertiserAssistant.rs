//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/multipeerconnectivity/mcadvertiserassistant?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MCAdvertiserAssistant;
);

unsafe impl NSObjectProtocol for MCAdvertiserAssistant {}

extern_methods!(
    unsafe impl MCAdvertiserAssistant {
        #[cfg(feature = "MCSession")]
        #[method(initWithServiceType:discoveryInfo:session:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithServiceType_discoveryInfo_session(
            this: Allocated<Self>,
            service_type: &NSString,
            info: Option<&NSDictionary<NSString, NSString>>,
            session: &MCSession,
        ) -> Retained<Self>;

        #[method(start)]
        #[unsafe(method_family = none)]
        pub unsafe fn start(&self);

        #[method(stop)]
        #[unsafe(method_family = none)]
        pub unsafe fn stop(&self);

        #[method(delegate)]
        #[unsafe(method_family = none)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MCAdvertiserAssistantDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`delegate`][Self::delegate].
        #[method(setDelegate:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn MCAdvertiserAssistantDelegate>>,
        );

        #[cfg(feature = "MCSession")]
        #[method(session)]
        #[unsafe(method_family = none)]
        pub unsafe fn session(&self) -> Retained<MCSession>;

        #[method(discoveryInfo)]
        #[unsafe(method_family = none)]
        pub unsafe fn discoveryInfo(&self) -> Option<Retained<NSDictionary<NSString, NSString>>>;

        #[method(serviceType)]
        #[unsafe(method_family = none)]
        pub unsafe fn serviceType(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MCAdvertiserAssistant {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/multipeerconnectivity/mcadvertiserassistantdelegate?language=objc)
    pub unsafe trait MCAdvertiserAssistantDelegate: NSObjectProtocol {
        #[optional]
        #[method(advertiserAssistantWillPresentInvitation:)]
        #[unsafe(method_family = none)]
        unsafe fn advertiserAssistantWillPresentInvitation(
            &self,
            advertiser_assistant: &MCAdvertiserAssistant,
        );

        #[optional]
        #[method(advertiserAssistantDidDismissInvitation:)]
        #[unsafe(method_family = none)]
        unsafe fn advertiserAssistantDidDismissInvitation(
            &self,
            advertiser_assistant: &MCAdvertiserAssistant,
        );
    }
);
