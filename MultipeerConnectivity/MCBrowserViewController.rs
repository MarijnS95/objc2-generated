//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
use objc2_app_kit::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/multipeerconnectivity/mcbrowserviewcontroller?language=objc)
    #[unsafe(super(NSViewController, NSResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    pub struct MCBrowserViewController;
);

#[cfg(all(feature = "MCNearbyServiceBrowser", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
unsafe impl MCNearbyServiceBrowserDelegate for MCBrowserViewController {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSCoding for MCBrowserViewController {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSEditor for MCBrowserViewController {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSObjectProtocol for MCBrowserViewController {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSSeguePerforming for MCBrowserViewController {}

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
unsafe impl NSUserInterfaceItemIdentification for MCBrowserViewController {}

extern_methods!(
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl MCBrowserViewController {
        #[cfg(feature = "MCSession")]
        #[method_id(initWithServiceType:session:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithServiceType_session(
            this: Allocated<Self>,
            service_type: &NSString,
            session: &MCSession,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MCNearbyServiceBrowser", feature = "MCSession"))]
        #[method_id(initWithBrowser:session:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithBrowser_session(
            this: Allocated<Self>,
            browser: &MCNearbyServiceBrowser,
            session: &MCSession,
        ) -> Retained<Self>;

        #[method_id(delegate)]
        #[unsafe(method_family = none)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MCBrowserViewControllerDelegate>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`delegate`][Self::delegate].
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn MCBrowserViewControllerDelegate>>,
        );

        #[cfg(feature = "MCNearbyServiceBrowser")]
        #[method_id(browser)]
        #[unsafe(method_family = none)]
        pub unsafe fn browser(&self) -> Retained<MCNearbyServiceBrowser>;

        #[cfg(feature = "MCSession")]
        #[method_id(session)]
        #[unsafe(method_family = none)]
        pub unsafe fn session(&self) -> Retained<MCSession>;

        #[method(minimumNumberOfPeers)]
        pub unsafe fn minimumNumberOfPeers(&self) -> NSUInteger;

        /// Setter for [`minimumNumberOfPeers`][Self::minimumNumberOfPeers].
        #[method(setMinimumNumberOfPeers:)]
        pub unsafe fn setMinimumNumberOfPeers(&self, minimum_number_of_peers: NSUInteger);

        #[method(maximumNumberOfPeers)]
        pub unsafe fn maximumNumberOfPeers(&self) -> NSUInteger;

        /// Setter for [`maximumNumberOfPeers`][Self::maximumNumberOfPeers].
        #[method(setMaximumNumberOfPeers:)]
        pub unsafe fn setMaximumNumberOfPeers(&self, maximum_number_of_peers: NSUInteger);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSViewController`
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl MCBrowserViewController {
        #[method_id(initWithNibName:bundle:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithNibName_bundle(
            this: Allocated<Self>,
            nib_name_or_nil: Option<&NSNibName>,
            nib_bundle_or_nil: Option<&NSBundle>,
        ) -> Retained<Self>;

        #[method_id(initWithCoder:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSResponder`
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl MCBrowserViewController {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    unsafe impl MCBrowserViewController {
        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate?language=objc)
    pub unsafe trait MCBrowserViewControllerDelegate: NSObjectProtocol {
        #[cfg(feature = "objc2-app-kit")]
        #[cfg(target_os = "macos")]
        #[method(browserViewControllerDidFinish:)]
        unsafe fn browserViewControllerDidFinish(
            &self,
            browser_view_controller: &MCBrowserViewController,
        );

        #[cfg(feature = "objc2-app-kit")]
        #[cfg(target_os = "macos")]
        #[method(browserViewControllerWasCancelled:)]
        unsafe fn browserViewControllerWasCancelled(
            &self,
            browser_view_controller: &MCBrowserViewController,
        );

        #[cfg(all(feature = "MCPeerID", feature = "objc2-app-kit"))]
        #[cfg(target_os = "macos")]
        #[optional]
        #[method(browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:)]
        unsafe fn browserViewController_shouldPresentNearbyPeer_withDiscoveryInfo(
            &self,
            browser_view_controller: &MCBrowserViewController,
            peer_id: &MCPeerID,
            info: Option<&NSDictionary<NSString, NSString>>,
        ) -> bool;
    }
);
