//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MTLFunctionOptions(pub NSUInteger);
impl MTLFunctionOptions {
    pub const MTLFunctionOptionNone: Self = Self(0);
    pub const MTLFunctionOptionCompileToBinary: Self = Self(1 << 0);
    pub const MTLFunctionOptionStoreFunctionInMetalScript: Self = Self(1 << 1);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for MTLFunctionOptions {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for MTLFunctionOptions {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLFunctionDescriptor;

    unsafe impl ClassType for MTLFunctionDescriptor {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCopying for MTLFunctionDescriptor {}

unsafe impl NSObjectProtocol for MTLFunctionDescriptor {}

extern_methods!(
    unsafe impl MTLFunctionDescriptor {
        #[method_id(@__retain_semantics Other functionDescriptor)]
        pub fn functionDescriptor() -> Id<MTLFunctionDescriptor>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other name)]
        pub fn name(&self) -> Option<Id<NSString>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setName:)]
        pub fn setName(&self, name: Option<&NSString>);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other specializedName)]
        pub fn specializedName(&self) -> Option<Id<NSString>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setSpecializedName:)]
        pub fn setSpecializedName(&self, specialized_name: Option<&NSString>);

        #[cfg(feature = "Metal_MTLFunctionConstantValues")]
        #[method_id(@__retain_semantics Other constantValues)]
        pub fn constantValues(&self) -> Option<Id<MTLFunctionConstantValues>>;

        #[cfg(feature = "Metal_MTLFunctionConstantValues")]
        #[method(setConstantValues:)]
        pub fn setConstantValues(&self, constant_values: Option<&MTLFunctionConstantValues>);

        #[method(options)]
        pub fn options(&self) -> MTLFunctionOptions;

        #[method(setOptions:)]
        pub fn setOptions(&self, options: MTLFunctionOptions);

        #[cfg(all(feature = "Foundation_NSArray", feature = "Metal_MTLBinaryArchive"))]
        #[method_id(@__retain_semantics Other binaryArchives)]
        pub unsafe fn binaryArchives(
            &self,
        ) -> Option<Id<NSArray<ProtocolObject<dyn MTLBinaryArchive>>>>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Metal_MTLBinaryArchive"))]
        #[method(setBinaryArchives:)]
        pub unsafe fn setBinaryArchives(
            &self,
            binary_archives: Option<&NSArray<ProtocolObject<dyn MTLBinaryArchive>>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MTLFunctionDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub fn new() -> Id<Self>;
    }
);

impl DefaultId for MTLFunctionDescriptor {
    #[inline]
    fn default_id() -> Id<Self> {
        Self::new()
    }
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLIntersectionFunctionDescriptor;

    unsafe impl ClassType for MTLIntersectionFunctionDescriptor {
        #[inherits(NSObject)]
        type Super = MTLFunctionDescriptor;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCopying for MTLIntersectionFunctionDescriptor {}

unsafe impl NSObjectProtocol for MTLIntersectionFunctionDescriptor {}

extern_methods!(
    unsafe impl MTLIntersectionFunctionDescriptor {}
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MTLIntersectionFunctionDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
