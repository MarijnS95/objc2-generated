// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

//! # Bindings to the `Metal` framework
#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]

#[link(name = "Metal", kind = "framework")]
extern "C" {}

#[path = "MTLAccelerationStructure.rs"]
mod __MTLAccelerationStructure;
#[path = "MTLAccelerationStructureCommandEncoder.rs"]
mod __MTLAccelerationStructureCommandEncoder;
#[path = "MTLAccelerationStructureTypes.rs"]
mod __MTLAccelerationStructureTypes;
#[path = "MTLArgument.rs"]
mod __MTLArgument;
#[path = "MTLArgumentEncoder.rs"]
mod __MTLArgumentEncoder;
#[path = "MTLBinaryArchive.rs"]
mod __MTLBinaryArchive;
#[path = "MTLBlitCommandEncoder.rs"]
mod __MTLBlitCommandEncoder;
#[path = "MTLBlitPass.rs"]
mod __MTLBlitPass;
#[path = "MTLBuffer.rs"]
mod __MTLBuffer;
#[path = "MTLCaptureManager.rs"]
mod __MTLCaptureManager;
#[path = "MTLCaptureScope.rs"]
mod __MTLCaptureScope;
#[path = "MTLCommandBuffer.rs"]
mod __MTLCommandBuffer;
#[path = "MTLCommandEncoder.rs"]
mod __MTLCommandEncoder;
#[path = "MTLCommandQueue.rs"]
mod __MTLCommandQueue;
#[path = "MTLComputeCommandEncoder.rs"]
mod __MTLComputeCommandEncoder;
#[path = "MTLComputePass.rs"]
mod __MTLComputePass;
#[path = "MTLComputePipeline.rs"]
mod __MTLComputePipeline;
#[path = "MTLCounters.rs"]
mod __MTLCounters;
#[path = "MTLDefines.rs"]
mod __MTLDefines;
#[path = "MTLDepthStencil.rs"]
mod __MTLDepthStencil;
#[path = "MTLDevice.rs"]
mod __MTLDevice;
#[path = "MTLDrawable.rs"]
mod __MTLDrawable;
#[path = "MTLDynamicLibrary.rs"]
mod __MTLDynamicLibrary;
#[path = "MTLEvent.rs"]
mod __MTLEvent;
#[path = "MTLFence.rs"]
mod __MTLFence;
#[path = "MTLFunctionConstantValues.rs"]
mod __MTLFunctionConstantValues;
#[path = "MTLFunctionDescriptor.rs"]
mod __MTLFunctionDescriptor;
#[path = "MTLFunctionHandle.rs"]
mod __MTLFunctionHandle;
#[path = "MTLFunctionLog.rs"]
mod __MTLFunctionLog;
#[path = "MTLFunctionStitching.rs"]
mod __MTLFunctionStitching;
#[path = "MTLHeap.rs"]
mod __MTLHeap;
#[path = "MTLIOCommandBuffer.rs"]
mod __MTLIOCommandBuffer;
#[path = "MTLIOCommandQueue.rs"]
mod __MTLIOCommandQueue;
#[path = "MTLIOCompressor.rs"]
mod __MTLIOCompressor;
#[path = "MTLIndirectCommandBuffer.rs"]
mod __MTLIndirectCommandBuffer;
#[path = "MTLIndirectCommandEncoder.rs"]
mod __MTLIndirectCommandEncoder;
#[path = "MTLIntersectionFunctionTable.rs"]
mod __MTLIntersectionFunctionTable;
#[path = "MTLLibrary.rs"]
mod __MTLLibrary;
#[path = "MTLLinkedFunctions.rs"]
mod __MTLLinkedFunctions;
#[path = "MTLParallelRenderCommandEncoder.rs"]
mod __MTLParallelRenderCommandEncoder;
#[path = "MTLPipeline.rs"]
mod __MTLPipeline;
#[path = "MTLPixelFormat.rs"]
mod __MTLPixelFormat;
#[path = "MTLRasterizationRate.rs"]
mod __MTLRasterizationRate;
#[path = "MTLRenderCommandEncoder.rs"]
mod __MTLRenderCommandEncoder;
#[path = "MTLRenderPass.rs"]
mod __MTLRenderPass;
#[path = "MTLRenderPipeline.rs"]
mod __MTLRenderPipeline;
#[path = "MTLResource.rs"]
mod __MTLResource;
#[path = "MTLResourceStateCommandEncoder.rs"]
mod __MTLResourceStateCommandEncoder;
#[path = "MTLResourceStatePass.rs"]
mod __MTLResourceStatePass;
#[path = "MTLSampler.rs"]
mod __MTLSampler;
#[path = "MTLStageInputOutputDescriptor.rs"]
mod __MTLStageInputOutputDescriptor;
#[path = "MTLTexture.rs"]
mod __MTLTexture;
#[path = "MTLTypes.rs"]
mod __MTLTypes;
#[path = "MTLVertexDescriptor.rs"]
mod __MTLVertexDescriptor;
#[path = "MTLVisibleFunctionTable.rs"]
mod __MTLVisibleFunctionTable;

pub use self::__MTLAccelerationStructure::MTLAccelerationStructure;
#[cfg(feature = "Metal_MTLAccelerationStructureBoundingBoxGeometryDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureBoundingBoxGeometryDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructureCurveGeometryDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureCurveGeometryDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructureDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructureGeometryDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureGeometryDescriptor;
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureInstanceDescriptor;
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureInstanceDescriptorType;
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureInstanceOptions;
#[cfg(feature = "Metal_MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructureMotionCurveGeometryDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureMotionCurveGeometryDescriptor;
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureMotionInstanceDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructureMotionTriangleGeometryDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureMotionTriangleGeometryDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructureTriangleGeometryDescriptor")]
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureTriangleGeometryDescriptor;
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureUsage;
pub use self::__MTLAccelerationStructure::MTLAccelerationStructureUserIDInstanceDescriptor;
pub use self::__MTLAccelerationStructure::MTLCurveBasis;
pub use self::__MTLAccelerationStructure::MTLCurveEndCaps;
pub use self::__MTLAccelerationStructure::MTLCurveType;
pub use self::__MTLAccelerationStructure::MTLIndirectAccelerationStructureInstanceDescriptor;
pub use self::__MTLAccelerationStructure::MTLIndirectAccelerationStructureMotionInstanceDescriptor;
#[cfg(feature = "Metal_MTLIndirectInstanceAccelerationStructureDescriptor")]
pub use self::__MTLAccelerationStructure::MTLIndirectInstanceAccelerationStructureDescriptor;
#[cfg(feature = "Metal_MTLInstanceAccelerationStructureDescriptor")]
pub use self::__MTLAccelerationStructure::MTLInstanceAccelerationStructureDescriptor;
pub use self::__MTLAccelerationStructure::MTLMotionBorderMode;
#[cfg(feature = "Metal_MTLMotionKeyframeData")]
pub use self::__MTLAccelerationStructure::MTLMotionKeyframeData;
#[cfg(feature = "Metal_MTLPrimitiveAccelerationStructureDescriptor")]
pub use self::__MTLAccelerationStructure::MTLPrimitiveAccelerationStructureDescriptor;
pub use self::__MTLAccelerationStructureCommandEncoder::MTLAccelerationStructureCommandEncoder;
#[cfg(feature = "Metal_MTLAccelerationStructurePassDescriptor")]
pub use self::__MTLAccelerationStructureCommandEncoder::MTLAccelerationStructurePassDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptor")]
pub use self::__MTLAccelerationStructureCommandEncoder::MTLAccelerationStructurePassSampleBufferAttachmentDescriptor;
#[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray")]
pub use self::__MTLAccelerationStructureCommandEncoder::MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray;
pub use self::__MTLAccelerationStructureCommandEncoder::MTLAccelerationStructureRefitOptions;
pub use self::__MTLAccelerationStructureTypes::MTLAxisAlignedBoundingBox;
pub use self::__MTLAccelerationStructureTypes::MTLPackedFloat4x3;
pub(crate) use self::__MTLAccelerationStructureTypes::_MTLAxisAlignedBoundingBox;
pub(crate) use self::__MTLAccelerationStructureTypes::_MTLPackedFloat4x3;
#[cfg(feature = "Metal_MTLArgument")]
pub use self::__MTLArgument::MTLArgument;
pub use self::__MTLArgument::MTLArgumentAccess;
pub use self::__MTLArgument::MTLArgumentType;
#[cfg(feature = "Metal_MTLArrayType")]
pub use self::__MTLArgument::MTLArrayType;
pub use self::__MTLArgument::MTLBinding;
pub use self::__MTLArgument::MTLBindingAccess;
pub use self::__MTLArgument::MTLBindingType;
pub use self::__MTLArgument::MTLBufferBinding;
pub use self::__MTLArgument::MTLDataType;
pub use self::__MTLArgument::MTLObjectPayloadBinding;
#[cfg(feature = "Metal_MTLPointerType")]
pub use self::__MTLArgument::MTLPointerType;
#[cfg(feature = "Metal_MTLStructMember")]
pub use self::__MTLArgument::MTLStructMember;
#[cfg(feature = "Metal_MTLStructType")]
pub use self::__MTLArgument::MTLStructType;
pub use self::__MTLArgument::MTLTextureBinding;
#[cfg(feature = "Metal_MTLTextureReferenceType")]
pub use self::__MTLArgument::MTLTextureReferenceType;
pub use self::__MTLArgument::MTLThreadgroupBinding;
#[cfg(feature = "Metal_MTLType")]
pub use self::__MTLArgument::MTLType;
pub use self::__MTLArgumentEncoder::MTLArgumentEncoder;
pub use self::__MTLArgumentEncoder::MTLAttributeStrideStatic;
pub use self::__MTLBinaryArchive::MTLBinaryArchive;
#[cfg(feature = "Metal_MTLBinaryArchiveDescriptor")]
pub use self::__MTLBinaryArchive::MTLBinaryArchiveDescriptor;
pub use self::__MTLBinaryArchive::MTLBinaryArchiveDomain;
pub use self::__MTLBinaryArchive::MTLBinaryArchiveError;
pub use self::__MTLBlitCommandEncoder::MTLBlitCommandEncoder;
pub use self::__MTLBlitCommandEncoder::MTLBlitOption;
#[cfg(feature = "Metal_MTLBlitPassDescriptor")]
pub use self::__MTLBlitPass::MTLBlitPassDescriptor;
#[cfg(feature = "Metal_MTLBlitPassSampleBufferAttachmentDescriptor")]
pub use self::__MTLBlitPass::MTLBlitPassSampleBufferAttachmentDescriptor;
#[cfg(feature = "Metal_MTLBlitPassSampleBufferAttachmentDescriptorArray")]
pub use self::__MTLBlitPass::MTLBlitPassSampleBufferAttachmentDescriptorArray;
pub use self::__MTLBuffer::MTLBuffer;
#[cfg(feature = "Metal_MTLCaptureDescriptor")]
pub use self::__MTLCaptureManager::MTLCaptureDescriptor;
pub use self::__MTLCaptureManager::MTLCaptureDestination;
pub use self::__MTLCaptureManager::MTLCaptureError;
pub use self::__MTLCaptureManager::MTLCaptureErrorDomain;
#[cfg(feature = "Metal_MTLCaptureManager")]
pub use self::__MTLCaptureManager::MTLCaptureManager;
pub use self::__MTLCaptureScope::MTLCaptureScope;
pub use self::__MTLCommandBuffer::MTLCommandBuffer;
#[cfg(feature = "Metal_MTLCommandBufferDescriptor")]
pub use self::__MTLCommandBuffer::MTLCommandBufferDescriptor;
pub use self::__MTLCommandBuffer::MTLCommandBufferEncoderInfo;
pub use self::__MTLCommandBuffer::MTLCommandBufferEncoderInfoErrorKey;
pub use self::__MTLCommandBuffer::MTLCommandBufferError;
pub use self::__MTLCommandBuffer::MTLCommandBufferErrorDomain;
pub use self::__MTLCommandBuffer::MTLCommandBufferErrorOption;
pub use self::__MTLCommandBuffer::MTLCommandBufferHandler;
pub use self::__MTLCommandBuffer::MTLCommandBufferStatus;
pub use self::__MTLCommandBuffer::MTLCommandEncoderErrorState;
pub use self::__MTLCommandBuffer::MTLDispatchType;
pub use self::__MTLCommandEncoder::MTLBarrierScope;
pub use self::__MTLCommandEncoder::MTLCommandEncoder;
pub use self::__MTLCommandEncoder::MTLResourceUsage;
pub use self::__MTLCommandQueue::MTLCommandQueue;
pub use self::__MTLComputeCommandEncoder::MTLComputeCommandEncoder;
pub use self::__MTLComputeCommandEncoder::MTLDispatchThreadgroupsIndirectArguments;
pub use self::__MTLComputeCommandEncoder::MTLStageInRegionIndirectArguments;
#[cfg(feature = "Metal_MTLComputePassDescriptor")]
pub use self::__MTLComputePass::MTLComputePassDescriptor;
#[cfg(feature = "Metal_MTLComputePassSampleBufferAttachmentDescriptor")]
pub use self::__MTLComputePass::MTLComputePassSampleBufferAttachmentDescriptor;
#[cfg(feature = "Metal_MTLComputePassSampleBufferAttachmentDescriptorArray")]
pub use self::__MTLComputePass::MTLComputePassSampleBufferAttachmentDescriptorArray;
#[cfg(feature = "Metal_MTLComputePipelineDescriptor")]
pub use self::__MTLComputePipeline::MTLComputePipelineDescriptor;
#[cfg(feature = "Metal_MTLComputePipelineReflection")]
pub use self::__MTLComputePipeline::MTLComputePipelineReflection;
pub use self::__MTLComputePipeline::MTLComputePipelineState;
pub use self::__MTLCounters::MTLCommonCounter;
pub use self::__MTLCounters::MTLCommonCounterClipperInvocations;
pub use self::__MTLCounters::MTLCommonCounterClipperPrimitivesOut;
pub use self::__MTLCounters::MTLCommonCounterComputeKernelInvocations;
pub use self::__MTLCounters::MTLCommonCounterFragmentCycles;
pub use self::__MTLCounters::MTLCommonCounterFragmentInvocations;
pub use self::__MTLCounters::MTLCommonCounterFragmentsPassed;
pub use self::__MTLCounters::MTLCommonCounterPostTessellationVertexCycles;
pub use self::__MTLCounters::MTLCommonCounterPostTessellationVertexInvocations;
pub use self::__MTLCounters::MTLCommonCounterRenderTargetWriteCycles;
pub use self::__MTLCounters::MTLCommonCounterSet;
pub use self::__MTLCounters::MTLCommonCounterSetStageUtilization;
pub use self::__MTLCounters::MTLCommonCounterSetStatistic;
pub use self::__MTLCounters::MTLCommonCounterSetTimestamp;
pub use self::__MTLCounters::MTLCommonCounterTessellationCycles;
pub use self::__MTLCounters::MTLCommonCounterTessellationInputPatches;
pub use self::__MTLCounters::MTLCommonCounterTimestamp;
pub use self::__MTLCounters::MTLCommonCounterTotalCycles;
pub use self::__MTLCounters::MTLCommonCounterVertexCycles;
pub use self::__MTLCounters::MTLCommonCounterVertexInvocations;
pub use self::__MTLCounters::MTLCounter;
pub use self::__MTLCounters::MTLCounterErrorDomain;
pub use self::__MTLCounters::MTLCounterResultStageUtilization;
pub use self::__MTLCounters::MTLCounterResultStatistic;
pub use self::__MTLCounters::MTLCounterResultTimestamp;
pub use self::__MTLCounters::MTLCounterSampleBuffer;
#[cfg(feature = "Metal_MTLCounterSampleBufferDescriptor")]
pub use self::__MTLCounters::MTLCounterSampleBufferDescriptor;
pub use self::__MTLCounters::MTLCounterSampleBufferError;
pub use self::__MTLCounters::MTLCounterSet;
pub use self::__MTLDepthStencil::MTLCompareFunction;
#[cfg(feature = "Metal_MTLDepthStencilDescriptor")]
pub use self::__MTLDepthStencil::MTLDepthStencilDescriptor;
pub use self::__MTLDepthStencil::MTLDepthStencilState;
#[cfg(feature = "Metal_MTLStencilDescriptor")]
pub use self::__MTLDepthStencil::MTLStencilDescriptor;
pub use self::__MTLDepthStencil::MTLStencilOperation;
pub use self::__MTLDevice::MTLAccelerationStructureSizes;
#[cfg(feature = "Metal_MTLArchitecture")]
pub use self::__MTLDevice::MTLArchitecture;
pub use self::__MTLDevice::MTLArgumentBuffersTier;
#[cfg(feature = "Metal_MTLArgumentDescriptor")]
pub use self::__MTLDevice::MTLArgumentDescriptor;
#[cfg(feature = "Foundation_NSArray")]
pub use self::__MTLDevice::MTLCopyAllDevices;
pub use self::__MTLDevice::MTLCounterSamplingPoint;
pub use self::__MTLDevice::MTLCreateSystemDefaultDevice;
pub use self::__MTLDevice::MTLDevice;
pub use self::__MTLDevice::MTLDeviceLocation;
pub use self::__MTLDevice::MTLDeviceNotificationHandler;
pub use self::__MTLDevice::MTLDeviceNotificationName;
pub use self::__MTLDevice::MTLDeviceRemovalRequestedNotification;
pub use self::__MTLDevice::MTLDeviceWasAddedNotification;
pub use self::__MTLDevice::MTLDeviceWasRemovedNotification;
pub use self::__MTLDevice::MTLFeatureSet;
pub use self::__MTLDevice::MTLGPUFamily;
pub use self::__MTLDevice::MTLIOCompressionMethod;
pub use self::__MTLDevice::MTLNewComputePipelineStateCompletionHandler;
pub use self::__MTLDevice::MTLNewComputePipelineStateWithReflectionCompletionHandler;
pub use self::__MTLDevice::MTLNewLibraryCompletionHandler;
pub use self::__MTLDevice::MTLNewRenderPipelineStateCompletionHandler;
pub use self::__MTLDevice::MTLNewRenderPipelineStateWithReflectionCompletionHandler;
pub use self::__MTLDevice::MTLPipelineOption;
pub use self::__MTLDevice::MTLReadWriteTextureTier;
pub use self::__MTLDevice::MTLRemoveDeviceObserver;
pub use self::__MTLDevice::MTLSizeAndAlign;
pub use self::__MTLDevice::MTLSparsePageSize;
pub use self::__MTLDevice::MTLSparseTextureRegionAlignmentMode;
pub use self::__MTLDevice::MTLTimestamp;
pub use self::__MTLDrawable::MTLDrawable;
pub use self::__MTLDrawable::MTLDrawablePresentedHandler;
pub use self::__MTLDynamicLibrary::MTLDynamicLibrary;
pub use self::__MTLDynamicLibrary::MTLDynamicLibraryDomain;
pub use self::__MTLDynamicLibrary::MTLDynamicLibraryError;
pub use self::__MTLEvent::MTLEvent;
pub use self::__MTLEvent::MTLSharedEvent;
#[cfg(feature = "Metal_MTLSharedEventHandle")]
pub use self::__MTLEvent::MTLSharedEventHandle;
#[cfg(feature = "Metal_MTLSharedEventListener")]
pub use self::__MTLEvent::MTLSharedEventListener;
pub use self::__MTLEvent::MTLSharedEventNotificationBlock;
pub use self::__MTLFence::MTLFence;
#[cfg(feature = "Metal_MTLFunctionConstantValues")]
pub use self::__MTLFunctionConstantValues::MTLFunctionConstantValues;
#[cfg(feature = "Metal_MTLFunctionDescriptor")]
pub use self::__MTLFunctionDescriptor::MTLFunctionDescriptor;
pub use self::__MTLFunctionDescriptor::MTLFunctionOptions;
#[cfg(feature = "Metal_MTLIntersectionFunctionDescriptor")]
pub use self::__MTLFunctionDescriptor::MTLIntersectionFunctionDescriptor;
pub use self::__MTLFunctionHandle::MTLFunctionHandle;
pub use self::__MTLFunctionLog::MTLFunctionLog;
pub use self::__MTLFunctionLog::MTLFunctionLogDebugLocation;
pub use self::__MTLFunctionLog::MTLFunctionLogType;
pub use self::__MTLFunctionLog::MTLLogContainer;
pub use self::__MTLFunctionStitching::MTLFunctionStitchingAttribute;
#[cfg(feature = "Metal_MTLFunctionStitchingAttributeAlwaysInline")]
pub use self::__MTLFunctionStitching::MTLFunctionStitchingAttributeAlwaysInline;
#[cfg(feature = "Metal_MTLFunctionStitchingFunctionNode")]
pub use self::__MTLFunctionStitching::MTLFunctionStitchingFunctionNode;
#[cfg(feature = "Metal_MTLFunctionStitchingGraph")]
pub use self::__MTLFunctionStitching::MTLFunctionStitchingGraph;
#[cfg(feature = "Metal_MTLFunctionStitchingInputNode")]
pub use self::__MTLFunctionStitching::MTLFunctionStitchingInputNode;
pub use self::__MTLFunctionStitching::MTLFunctionStitchingNode;
#[cfg(feature = "Metal_MTLStitchedLibraryDescriptor")]
pub use self::__MTLFunctionStitching::MTLStitchedLibraryDescriptor;
pub use self::__MTLHeap::MTLHeap;
#[cfg(feature = "Metal_MTLHeapDescriptor")]
pub use self::__MTLHeap::MTLHeapDescriptor;
pub use self::__MTLHeap::MTLHeapType;
pub use self::__MTLIOCommandBuffer::MTLIOCommandBuffer;
pub use self::__MTLIOCommandBuffer::MTLIOCommandBufferHandler;
pub use self::__MTLIOCommandBuffer::MTLIOStatus;
pub use self::__MTLIOCommandQueue::MTLIOCommandQueue;
#[cfg(feature = "Metal_MTLIOCommandQueueDescriptor")]
pub use self::__MTLIOCommandQueue::MTLIOCommandQueueDescriptor;
pub use self::__MTLIOCommandQueue::MTLIOCommandQueueType;
pub use self::__MTLIOCommandQueue::MTLIOError;
pub use self::__MTLIOCommandQueue::MTLIOErrorDomain;
pub use self::__MTLIOCommandQueue::MTLIOFileHandle;
pub use self::__MTLIOCommandQueue::MTLIOPriority;
pub use self::__MTLIOCommandQueue::MTLIOScratchBuffer;
pub use self::__MTLIOCommandQueue::MTLIOScratchBufferAllocator;
pub use self::__MTLIOCompressor::MTLIOCompressionContext;
pub use self::__MTLIOCompressor::MTLIOCompressionContextAppendData;
pub use self::__MTLIOCompressor::MTLIOCompressionContextDefaultChunkSize;
pub use self::__MTLIOCompressor::MTLIOCompressionStatus;
pub use self::__MTLIOCompressor::MTLIOCreateCompressionContext;
pub use self::__MTLIOCompressor::MTLIOFlushAndDestroyCompressionContext;
pub use self::__MTLIndirectCommandBuffer::MTLIndirectCommandBuffer;
#[cfg(feature = "Metal_MTLIndirectCommandBufferDescriptor")]
pub use self::__MTLIndirectCommandBuffer::MTLIndirectCommandBufferDescriptor;
pub use self::__MTLIndirectCommandBuffer::MTLIndirectCommandBufferExecutionRange;
pub use self::__MTLIndirectCommandBuffer::MTLIndirectCommandType;
pub use self::__MTLIndirectCommandEncoder::MTLIndirectComputeCommand;
pub use self::__MTLIndirectCommandEncoder::MTLIndirectRenderCommand;
pub use self::__MTLIntersectionFunctionTable::MTLIntersectionFunctionSignature;
pub use self::__MTLIntersectionFunctionTable::MTLIntersectionFunctionTable;
#[cfg(feature = "Metal_MTLIntersectionFunctionTableDescriptor")]
pub use self::__MTLIntersectionFunctionTable::MTLIntersectionFunctionTableDescriptor;
#[cfg(feature = "Metal_MTLAttribute")]
pub use self::__MTLLibrary::MTLAttribute;
#[cfg(feature = "Metal_MTLCompileOptions")]
pub use self::__MTLLibrary::MTLCompileOptions;
pub use self::__MTLLibrary::MTLCompileSymbolVisibility;
pub use self::__MTLLibrary::MTLFunction;
#[cfg(feature = "Metal_MTLFunctionConstant")]
pub use self::__MTLLibrary::MTLFunctionConstant;
pub use self::__MTLLibrary::MTLFunctionType;
pub use self::__MTLLibrary::MTLLanguageVersion;
pub use self::__MTLLibrary::MTLLibrary;
pub use self::__MTLLibrary::MTLLibraryError;
pub use self::__MTLLibrary::MTLLibraryErrorDomain;
pub use self::__MTLLibrary::MTLLibraryOptimizationLevel;
pub use self::__MTLLibrary::MTLLibraryType;
pub use self::__MTLLibrary::MTLPatchType;
#[cfg(feature = "Metal_MTLVertexAttribute")]
pub use self::__MTLLibrary::MTLVertexAttribute;
#[cfg(feature = "Metal_MTLLinkedFunctions")]
pub use self::__MTLLinkedFunctions::MTLLinkedFunctions;
pub use self::__MTLParallelRenderCommandEncoder::MTLParallelRenderCommandEncoder;
pub use self::__MTLPipeline::MTLMutability;
#[cfg(feature = "Metal_MTLPipelineBufferDescriptor")]
pub use self::__MTLPipeline::MTLPipelineBufferDescriptor;
#[cfg(feature = "Metal_MTLPipelineBufferDescriptorArray")]
pub use self::__MTLPipeline::MTLPipelineBufferDescriptorArray;
pub use self::__MTLPixelFormat::MTLPixelFormat;
#[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
pub use self::__MTLRasterizationRate::MTLRasterizationRateLayerArray;
#[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
pub use self::__MTLRasterizationRate::MTLRasterizationRateLayerDescriptor;
pub use self::__MTLRasterizationRate::MTLRasterizationRateMap;
#[cfg(feature = "Metal_MTLRasterizationRateMapDescriptor")]
pub use self::__MTLRasterizationRate::MTLRasterizationRateMapDescriptor;
#[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
pub use self::__MTLRasterizationRate::MTLRasterizationRateSampleArray;
pub use self::__MTLRenderCommandEncoder::MTLCullMode;
pub use self::__MTLRenderCommandEncoder::MTLDepthClipMode;
pub use self::__MTLRenderCommandEncoder::MTLDrawIndexedPrimitivesIndirectArguments;
pub use self::__MTLRenderCommandEncoder::MTLDrawPatchIndirectArguments;
pub use self::__MTLRenderCommandEncoder::MTLDrawPrimitivesIndirectArguments;
pub use self::__MTLRenderCommandEncoder::MTLPrimitiveType;
pub use self::__MTLRenderCommandEncoder::MTLQuadTessellationFactorsHalf;
pub use self::__MTLRenderCommandEncoder::MTLRenderCommandEncoder;
pub use self::__MTLRenderCommandEncoder::MTLRenderStages;
pub use self::__MTLRenderCommandEncoder::MTLScissorRect;
pub use self::__MTLRenderCommandEncoder::MTLTriangleFillMode;
pub use self::__MTLRenderCommandEncoder::MTLTriangleTessellationFactorsHalf;
pub use self::__MTLRenderCommandEncoder::MTLVertexAmplificationViewMapping;
pub use self::__MTLRenderCommandEncoder::MTLViewport;
pub use self::__MTLRenderCommandEncoder::MTLVisibilityResultMode;
pub use self::__MTLRenderCommandEncoder::MTLWinding;
pub use self::__MTLRenderPass::MTLClearColor;
pub use self::__MTLRenderPass::MTLLoadAction;
pub use self::__MTLRenderPass::MTLMultisampleDepthResolveFilter;
pub use self::__MTLRenderPass::MTLMultisampleStencilResolveFilter;
#[cfg(feature = "Metal_MTLRenderPassAttachmentDescriptor")]
pub use self::__MTLRenderPass::MTLRenderPassAttachmentDescriptor;
#[cfg(feature = "Metal_MTLRenderPassColorAttachmentDescriptor")]
pub use self::__MTLRenderPass::MTLRenderPassColorAttachmentDescriptor;
#[cfg(feature = "Metal_MTLRenderPassColorAttachmentDescriptorArray")]
pub use self::__MTLRenderPass::MTLRenderPassColorAttachmentDescriptorArray;
#[cfg(feature = "Metal_MTLRenderPassDepthAttachmentDescriptor")]
pub use self::__MTLRenderPass::MTLRenderPassDepthAttachmentDescriptor;
#[cfg(feature = "Metal_MTLRenderPassDescriptor")]
pub use self::__MTLRenderPass::MTLRenderPassDescriptor;
#[cfg(feature = "Metal_MTLRenderPassSampleBufferAttachmentDescriptor")]
pub use self::__MTLRenderPass::MTLRenderPassSampleBufferAttachmentDescriptor;
#[cfg(feature = "Metal_MTLRenderPassSampleBufferAttachmentDescriptorArray")]
pub use self::__MTLRenderPass::MTLRenderPassSampleBufferAttachmentDescriptorArray;
#[cfg(feature = "Metal_MTLRenderPassStencilAttachmentDescriptor")]
pub use self::__MTLRenderPass::MTLRenderPassStencilAttachmentDescriptor;
pub use self::__MTLRenderPass::MTLStoreAction;
pub use self::__MTLRenderPass::MTLStoreActionOptions;
pub use self::__MTLRenderPipeline::MTLBlendFactor;
pub use self::__MTLRenderPipeline::MTLBlendOperation;
pub use self::__MTLRenderPipeline::MTLColorWriteMask;
#[cfg(feature = "Metal_MTLMeshRenderPipelineDescriptor")]
pub use self::__MTLRenderPipeline::MTLMeshRenderPipelineDescriptor;
pub use self::__MTLRenderPipeline::MTLPrimitiveTopologyClass;
#[cfg(feature = "Metal_MTLRenderPipelineColorAttachmentDescriptor")]
pub use self::__MTLRenderPipeline::MTLRenderPipelineColorAttachmentDescriptor;
#[cfg(feature = "Metal_MTLRenderPipelineColorAttachmentDescriptorArray")]
pub use self::__MTLRenderPipeline::MTLRenderPipelineColorAttachmentDescriptorArray;
#[cfg(feature = "Metal_MTLRenderPipelineDescriptor")]
pub use self::__MTLRenderPipeline::MTLRenderPipelineDescriptor;
#[cfg(feature = "Metal_MTLRenderPipelineFunctionsDescriptor")]
pub use self::__MTLRenderPipeline::MTLRenderPipelineFunctionsDescriptor;
#[cfg(feature = "Metal_MTLRenderPipelineReflection")]
pub use self::__MTLRenderPipeline::MTLRenderPipelineReflection;
pub use self::__MTLRenderPipeline::MTLRenderPipelineState;
pub use self::__MTLRenderPipeline::MTLTessellationControlPointIndexType;
pub use self::__MTLRenderPipeline::MTLTessellationFactorFormat;
pub use self::__MTLRenderPipeline::MTLTessellationFactorStepFunction;
pub use self::__MTLRenderPipeline::MTLTessellationPartitionMode;
#[cfg(feature = "Metal_MTLTileRenderPipelineColorAttachmentDescriptor")]
pub use self::__MTLRenderPipeline::MTLTileRenderPipelineColorAttachmentDescriptor;
#[cfg(feature = "Metal_MTLTileRenderPipelineColorAttachmentDescriptorArray")]
pub use self::__MTLRenderPipeline::MTLTileRenderPipelineColorAttachmentDescriptorArray;
#[cfg(feature = "Metal_MTLTileRenderPipelineDescriptor")]
pub use self::__MTLRenderPipeline::MTLTileRenderPipelineDescriptor;
pub use self::__MTLResource::MTLCPUCacheMode;
pub use self::__MTLResource::MTLHazardTrackingMode;
pub use self::__MTLResource::MTLPurgeableState;
pub use self::__MTLResource::MTLResource;
pub use self::__MTLResource::MTLResourceOptions;
pub use self::__MTLResource::MTLStorageMode;
pub use self::__MTLResourceStateCommandEncoder::MTLMapIndirectArguments;
pub use self::__MTLResourceStateCommandEncoder::MTLResourceStateCommandEncoder;
pub use self::__MTLResourceStateCommandEncoder::MTLSparseTextureMappingMode;
#[cfg(feature = "Metal_MTLResourceStatePassDescriptor")]
pub use self::__MTLResourceStatePass::MTLResourceStatePassDescriptor;
#[cfg(feature = "Metal_MTLResourceStatePassSampleBufferAttachmentDescriptor")]
pub use self::__MTLResourceStatePass::MTLResourceStatePassSampleBufferAttachmentDescriptor;
#[cfg(feature = "Metal_MTLResourceStatePassSampleBufferAttachmentDescriptorArray")]
pub use self::__MTLResourceStatePass::MTLResourceStatePassSampleBufferAttachmentDescriptorArray;
pub use self::__MTLSampler::MTLSamplerAddressMode;
pub use self::__MTLSampler::MTLSamplerBorderColor;
#[cfg(feature = "Metal_MTLSamplerDescriptor")]
pub use self::__MTLSampler::MTLSamplerDescriptor;
pub use self::__MTLSampler::MTLSamplerMinMagFilter;
pub use self::__MTLSampler::MTLSamplerMipFilter;
pub use self::__MTLSampler::MTLSamplerState;
#[cfg(feature = "Metal_MTLAttributeDescriptor")]
pub use self::__MTLStageInputOutputDescriptor::MTLAttributeDescriptor;
#[cfg(feature = "Metal_MTLAttributeDescriptorArray")]
pub use self::__MTLStageInputOutputDescriptor::MTLAttributeDescriptorArray;
pub use self::__MTLStageInputOutputDescriptor::MTLAttributeFormat;
#[cfg(feature = "Metal_MTLBufferLayoutDescriptor")]
pub use self::__MTLStageInputOutputDescriptor::MTLBufferLayoutDescriptor;
#[cfg(feature = "Metal_MTLBufferLayoutDescriptorArray")]
pub use self::__MTLStageInputOutputDescriptor::MTLBufferLayoutDescriptorArray;
pub use self::__MTLStageInputOutputDescriptor::MTLIndexType;
#[cfg(feature = "Metal_MTLStageInputOutputDescriptor")]
pub use self::__MTLStageInputOutputDescriptor::MTLStageInputOutputDescriptor;
pub use self::__MTLStageInputOutputDescriptor::MTLStepFunction;
#[cfg(feature = "Metal_MTLSharedTextureHandle")]
pub use self::__MTLTexture::MTLSharedTextureHandle;
pub use self::__MTLTexture::MTLTexture;
pub use self::__MTLTexture::MTLTextureCompressionType;
#[cfg(feature = "Metal_MTLTextureDescriptor")]
pub use self::__MTLTexture::MTLTextureDescriptor;
pub use self::__MTLTexture::MTLTextureSwizzle;
pub use self::__MTLTexture::MTLTextureSwizzleChannels;
pub use self::__MTLTexture::MTLTextureType;
pub use self::__MTLTexture::MTLTextureUsage;
pub use self::__MTLTypes::MTLCoordinate2D;
pub use self::__MTLTypes::MTLOrigin;
pub use self::__MTLTypes::MTLRegion;
pub use self::__MTLTypes::MTLResourceID;
pub use self::__MTLTypes::MTLSamplePosition;
pub use self::__MTLTypes::MTLSize;
pub use self::__MTLVertexDescriptor::MTLBufferLayoutStrideDynamic;
#[cfg(feature = "Metal_MTLVertexAttributeDescriptor")]
pub use self::__MTLVertexDescriptor::MTLVertexAttributeDescriptor;
#[cfg(feature = "Metal_MTLVertexAttributeDescriptorArray")]
pub use self::__MTLVertexDescriptor::MTLVertexAttributeDescriptorArray;
#[cfg(feature = "Metal_MTLVertexBufferLayoutDescriptor")]
pub use self::__MTLVertexDescriptor::MTLVertexBufferLayoutDescriptor;
#[cfg(feature = "Metal_MTLVertexBufferLayoutDescriptorArray")]
pub use self::__MTLVertexDescriptor::MTLVertexBufferLayoutDescriptorArray;
#[cfg(feature = "Metal_MTLVertexDescriptor")]
pub use self::__MTLVertexDescriptor::MTLVertexDescriptor;
pub use self::__MTLVertexDescriptor::MTLVertexFormat;
pub use self::__MTLVertexDescriptor::MTLVertexStepFunction;
pub use self::__MTLVisibleFunctionTable::MTLVisibleFunctionTable;
#[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
pub use self::__MTLVisibleFunctionTable::MTLVisibleFunctionTableDescriptor;
