//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctrubyannotationref?language=objc)
pub type CTRubyAnnotationRef = *mut c_void;

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRubyAnnotationGetTypeID() -> CFTypeID;
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctrubyalignment?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CTRubyAlignment(pub u8);
impl CTRubyAlignment {
    pub const kCTRubyAlignmentAuto: Self = Self(0);
    pub const kCTRubyAlignmentStart: Self = Self(1);
    pub const kCTRubyAlignmentCenter: Self = Self(2);
    pub const kCTRubyAlignmentEnd: Self = Self(3);
    pub const kCTRubyAlignmentDistributeLetter: Self = Self(4);
    pub const kCTRubyAlignmentDistributeSpace: Self = Self(5);
    pub const kCTRubyAlignmentLineEdge: Self = Self(6);
}

unsafe impl Encode for CTRubyAlignment {
    const ENCODING: Encoding = u8::ENCODING;
}

unsafe impl RefEncode for CTRubyAlignment {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctrubyoverhang?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CTRubyOverhang(pub u8);
impl CTRubyOverhang {
    pub const kCTRubyOverhangAuto: Self = Self(0);
    pub const kCTRubyOverhangStart: Self = Self(1);
    pub const kCTRubyOverhangEnd: Self = Self(2);
    pub const kCTRubyOverhangNone: Self = Self(3);
}

unsafe impl Encode for CTRubyOverhang {
    const ENCODING: Encoding = u8::ENCODING;
}

unsafe impl RefEncode for CTRubyOverhang {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctrubyposition?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CTRubyPosition(pub u8);
impl CTRubyPosition {
    pub const kCTRubyPositionBefore: Self = Self(0);
    pub const kCTRubyPositionAfter: Self = Self(1);
    pub const kCTRubyPositionInterCharacter: Self = Self(2);
    pub const kCTRubyPositionInline: Self = Self(3);
    pub const kCTRubyPositionCount: Self = Self(4);
}

unsafe impl Encode for CTRubyPosition {
    const ENCODING: Encoding = u8::ENCODING;
}

unsafe impl RefEncode for CTRubyPosition {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctrubyannotationsizefactorattributename?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTRubyAnnotationSizeFactorAttributeName: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctrubyannotationscaletofitattributename?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTRubyAnnotationScaleToFitAttributeName: CFStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRubyAnnotationCreateWithAttributes(
        alignment: CTRubyAlignment,
        overhang: CTRubyOverhang,
        position: CTRubyPosition,
        string: CFStringRef,
        attributes: CFDictionaryRef,
    ) -> CTRubyAnnotationRef;
}

extern "C-unwind" {
    pub fn CTRubyAnnotationCreateCopy(ruby_annotation: CTRubyAnnotationRef) -> CTRubyAnnotationRef;
}

extern "C-unwind" {
    pub fn CTRubyAnnotationGetAlignment(ruby_annotation: CTRubyAnnotationRef) -> CTRubyAlignment;
}

extern "C-unwind" {
    pub fn CTRubyAnnotationGetOverhang(ruby_annotation: CTRubyAnnotationRef) -> CTRubyOverhang;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRubyAnnotationGetSizeFactor(ruby_annotation: CTRubyAnnotationRef) -> CGFloat;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRubyAnnotationGetTextForPosition(
        ruby_annotation: CTRubyAnnotationRef,
        position: CTRubyPosition,
    ) -> CFStringRef;
}
