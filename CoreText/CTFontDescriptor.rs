//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctfontdescriptorref?language=objc)
pub type CTFontDescriptorRef = *mut c_void;

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorGetTypeID() -> CFTypeID;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfonturlattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontURLAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontnameattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontNameAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdisplaynameattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDisplayNameAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontfamilynameattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontFamilyNameAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontstylenameattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontStyleNameAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfonttraitsattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontTraitsAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontvariationattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontVariationAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontvariationaxesattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontVariationAxesAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontsizeattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontSizeAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontmatrixattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontMatrixAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontcascadelistattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontCascadeListAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontcharactersetattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontCharacterSetAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontlanguagesattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontLanguagesAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontbaselineadjustattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontBaselineAdjustAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontmacintoshencodingsattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontMacintoshEncodingsAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontfeaturesattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontFeaturesAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontfeaturesettingsattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontFeatureSettingsAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontfixedadvanceattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontFixedAdvanceAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontorientationattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontOrientationAttribute: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctfontorientation?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CTFontOrientation(pub u32);
impl CTFontOrientation {
    pub const kCTFontOrientationDefault: Self = Self(0);
    pub const kCTFontOrientationHorizontal: Self = Self(1);
    pub const kCTFontOrientationVertical: Self = Self(2);
    #[deprecated = "Deprecated"]
    pub const kCTFontDefaultOrientation: Self =
        Self(CTFontOrientation::kCTFontOrientationDefault.0);
    #[deprecated = "Deprecated"]
    pub const kCTFontHorizontalOrientation: Self =
        Self(CTFontOrientation::kCTFontOrientationHorizontal.0);
    #[deprecated = "Deprecated"]
    pub const kCTFontVerticalOrientation: Self =
        Self(CTFontOrientation::kCTFontOrientationVertical.0);
}

unsafe impl Encode for CTFontOrientation {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for CTFontOrientation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontformatattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontFormatAttribute: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctfontformat?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CTFontFormat(pub u32);
impl CTFontFormat {
    pub const kCTFontFormatUnrecognized: Self = Self(0);
    pub const kCTFontFormatOpenTypePostScript: Self = Self(1);
    pub const kCTFontFormatOpenTypeTrueType: Self = Self(2);
    pub const kCTFontFormatTrueType: Self = Self(3);
    pub const kCTFontFormatPostScript: Self = Self(4);
    pub const kCTFontFormatBitmap: Self = Self(5);
}

unsafe impl Encode for CTFontFormat {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for CTFontFormat {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontregistrationscopeattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontRegistrationScopeAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontpriorityattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontPriorityAttribute: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontprioritysystem?language=objc)
pub const kCTFontPrioritySystem: c_uint = 10000;
/// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontprioritynetwork?language=objc)
pub const kCTFontPriorityNetwork: c_uint = 20000;
/// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontprioritycomputer?language=objc)
pub const kCTFontPriorityComputer: c_uint = 30000;
/// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontpriorityuser?language=objc)
pub const kCTFontPriorityUser: c_uint = 40000;
/// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontprioritydynamic?language=objc)
pub const kCTFontPriorityDynamic: c_uint = 50000;
/// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontpriorityprocess?language=objc)
pub const kCTFontPriorityProcess: c_uint = 60000;

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctfontpriority?language=objc)
pub type CTFontPriority = u32;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontenabledattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontEnabledAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdownloadableattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDownloadableAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdownloadedattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDownloadedAttribute: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontopticalsizeattribute?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontOpticalSizeAttribute: CFStringRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateWithNameAndSize(
        name: CFStringRef,
        size: CGFloat,
    ) -> CTFontDescriptorRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateWithAttributes(attributes: CFDictionaryRef)
        -> CTFontDescriptorRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateCopyWithAttributes(
        original: CTFontDescriptorRef,
        attributes: CFDictionaryRef,
    ) -> CTFontDescriptorRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateCopyWithFamily(
        original: CTFontDescriptorRef,
        family: CFStringRef,
    ) -> CTFontDescriptorRef;
}

extern "C-unwind" {
    #[cfg(feature = "CTFontTraits")]
    pub fn CTFontDescriptorCreateCopyWithSymbolicTraits(
        original: CTFontDescriptorRef,
        sym_trait_value: CTFontSymbolicTraits,
        sym_trait_mask: CTFontSymbolicTraits,
    ) -> CTFontDescriptorRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateCopyWithVariation(
        original: CTFontDescriptorRef,
        variation_identifier: CFNumberRef,
        variation_value: CGFloat,
    ) -> CTFontDescriptorRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateCopyWithFeature(
        original: CTFontDescriptorRef,
        feature_type_identifier: CFNumberRef,
        feature_selector_identifier: CFNumberRef,
    ) -> CTFontDescriptorRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateMatchingFontDescriptors(
        descriptor: CTFontDescriptorRef,
        mandatory_attributes: CFSetRef,
    ) -> CFArrayRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCreateMatchingFontDescriptor(
        descriptor: CTFontDescriptorRef,
        mandatory_attributes: CFSetRef,
    ) -> CTFontDescriptorRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctfontdescriptormatchingstate?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CTFontDescriptorMatchingState(pub u32);
impl CTFontDescriptorMatchingState {
    pub const kCTFontDescriptorMatchingDidBegin: Self = Self(0);
    pub const kCTFontDescriptorMatchingDidFinish: Self = Self(1);
    pub const kCTFontDescriptorMatchingWillBeginQuerying: Self = Self(2);
    pub const kCTFontDescriptorMatchingStalled: Self = Self(3);
    pub const kCTFontDescriptorMatchingWillBeginDownloading: Self = Self(4);
    pub const kCTFontDescriptorMatchingDownloading: Self = Self(5);
    pub const kCTFontDescriptorMatchingDidFinishDownloading: Self = Self(6);
    pub const kCTFontDescriptorMatchingDidMatch: Self = Self(7);
    pub const kCTFontDescriptorMatchingDidFailWithError: Self = Self(8);
}

unsafe impl Encode for CTFontDescriptorMatchingState {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for CTFontDescriptorMatchingState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingsourcedescriptor?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingSourceDescriptor: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingdescriptors?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingDescriptors: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingresult?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingResult: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingpercentage?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingPercentage: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingcurrentassetsize?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingCurrentAssetSize: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingtotaldownloadedsize?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingTotalDownloadedSize: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingtotalassetsize?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingTotalAssetSize: CFStringRef;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coretext/kctfontdescriptormatchingerror?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCTFontDescriptorMatchingError: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctfontdescriptorprogresshandler?language=objc)
#[cfg(all(feature = "block2", feature = "objc2-core-foundation"))]
pub type CTFontDescriptorProgressHandler =
    *mut block2::Block<dyn Fn(CTFontDescriptorMatchingState, CFDictionaryRef) -> bool>;

extern "C-unwind" {
    #[cfg(all(feature = "block2", feature = "objc2-core-foundation"))]
    pub fn CTFontDescriptorMatchFontDescriptorsWithProgressHandler(
        descriptors: CFArrayRef,
        mandatory_attributes: CFSetRef,
        progress_block: CTFontDescriptorProgressHandler,
    ) -> bool;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCopyAttributes(descriptor: CTFontDescriptorRef) -> CFDictionaryRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCopyAttribute(
        descriptor: CTFontDescriptorRef,
        attribute: CFStringRef,
    ) -> CFTypeRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFontDescriptorCopyLocalizedAttribute(
        descriptor: CTFontDescriptorRef,
        attribute: CFStringRef,
        language: *mut CFStringRef,
    ) -> CFTypeRef;
}
