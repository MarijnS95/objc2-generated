//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctrunref?language=objc)
pub type CTRunRef = *mut c_void;

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctrunstatus?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct CTRunStatus(pub u32);
bitflags::bitflags! {
    impl CTRunStatus: u32 {
        const kCTRunStatusNoStatus = 0;
        const kCTRunStatusRightToLeft = 1<<0;
        const kCTRunStatusNonMonotonic = 1<<1;
        const kCTRunStatusHasNonIdentityMatrix = 1<<2;
    }
}

unsafe impl Encode for CTRunStatus {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for CTRunStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetGlyphCount(run: CTRunRef) -> CFIndex;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetAttributes(run: CTRunRef) -> CFDictionaryRef;
}

extern "C-unwind" {
    pub fn CTRunGetStatus(run: CTRunRef) -> CTRunStatus;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-graphics")]
    pub fn CTRunGetGlyphsPtr(run: CTRunRef) -> *mut CGGlyph;
}

extern "C-unwind" {
    #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
    pub fn CTRunGetGlyphs(run: CTRunRef, range: CFRange, buffer: NonNull<CGGlyph>);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetPositionsPtr(run: CTRunRef) -> *mut CGPoint;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetPositions(run: CTRunRef, range: CFRange, buffer: NonNull<CGPoint>);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetAdvancesPtr(run: CTRunRef) -> *mut CGSize;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetAdvances(run: CTRunRef, range: CFRange, buffer: NonNull<CGSize>);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetStringIndicesPtr(run: CTRunRef) -> *mut CFIndex;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetStringIndices(run: CTRunRef, range: CFRange, buffer: NonNull<CFIndex>);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetStringRange(run: CTRunRef) -> CFRange;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetTypographicBounds(
        run: CTRunRef,
        range: CFRange,
        ascent: *mut CGFloat,
        descent: *mut CGFloat,
        leading: *mut CGFloat,
    ) -> c_double;
}

extern "C-unwind" {
    #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
    pub fn CTRunGetImageBounds(run: CTRunRef, context: CGContextRef, range: CFRange) -> CGRect;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetTextMatrix(run: CTRunRef) -> CGAffineTransform;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTRunGetBaseAdvancesAndOrigins(
        run_ref: CTRunRef,
        range: CFRange,
        advances_buffer: *mut CGSize,
        origins_buffer: *mut CGPoint,
    );
}

extern "C-unwind" {
    #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
    pub fn CTRunDraw(run: CTRunRef, context: CGContextRef, range: CFRange);
}
