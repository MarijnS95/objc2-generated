//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coretext/ctframesetterref?language=objc)
pub type CTFramesetterRef = *mut c_void;

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFramesetterGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(feature = "CTTypesetter")]
    pub fn CTFramesetterCreateWithTypesetter(typesetter: CTTypesetterRef) -> CTFramesetterRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFramesetterCreateWithAttributedString(
        attr_string: CFAttributedStringRef,
    ) -> CTFramesetterRef;
}

extern "C-unwind" {
    #[cfg(all(
        feature = "CTFrame",
        feature = "objc2-core-foundation",
        feature = "objc2-core-graphics"
    ))]
    pub fn CTFramesetterCreateFrame(
        framesetter: CTFramesetterRef,
        string_range: CFRange,
        path: CGPathRef,
        frame_attributes: CFDictionaryRef,
    ) -> CTFrameRef;
}

extern "C-unwind" {
    #[cfg(feature = "CTTypesetter")]
    pub fn CTFramesetterGetTypesetter(framesetter: CTFramesetterRef) -> CTTypesetterRef;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CTFramesetterSuggestFrameSizeWithConstraints(
        framesetter: CTFramesetterRef,
        string_range: CFRange,
        frame_attributes: CFDictionaryRef,
        constraints: CGSize,
        fit_range: *mut CFRange,
    ) -> CGSize;
}
