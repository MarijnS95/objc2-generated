//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsmatrixunarykernel?language=objc)
    #[unsafe(super(MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSKernel")]
    pub struct MPSMatrixUnaryKernel;
);

#[cfg(feature = "MPSKernel")]
unsafe impl NSCoding for MPSMatrixUnaryKernel {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSCopying for MPSMatrixUnaryKernel {}

#[cfg(feature = "MPSKernel")]
unsafe impl CopyingHelper for MPSMatrixUnaryKernel {
    type Result = Self;
}

#[cfg(feature = "MPSKernel")]
unsafe impl NSObjectProtocol for MPSMatrixUnaryKernel {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSSecureCoding for MPSMatrixUnaryKernel {}

extern_methods!(
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSMatrixUnaryKernel {
        #[method(sourceMatrixOrigin)]
        pub unsafe fn sourceMatrixOrigin(&self) -> MTLOrigin;

        #[method(setSourceMatrixOrigin:)]
        pub unsafe fn setSourceMatrixOrigin(&self, source_matrix_origin: MTLOrigin);

        #[method(resultMatrixOrigin)]
        pub unsafe fn resultMatrixOrigin(&self) -> MTLOrigin;

        #[method(setResultMatrixOrigin:)]
        pub unsafe fn setResultMatrixOrigin(&self, result_matrix_origin: MTLOrigin);

        #[method(batchStart)]
        pub unsafe fn batchStart(&self) -> NSUInteger;

        #[method(setBatchStart:)]
        pub unsafe fn setBatchStart(&self, batch_start: NSUInteger);

        #[method(batchSize)]
        pub unsafe fn batchSize(&self) -> NSUInteger;

        #[method(setBatchSize:)]
        pub unsafe fn setBatchSize(&self, batch_size: NSUInteger);
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSMatrixUnaryKernel {
        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSMatrixUnaryKernel {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsmatrixbinarykernel?language=objc)
    #[unsafe(super(MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSKernel")]
    pub struct MPSMatrixBinaryKernel;
);

#[cfg(feature = "MPSKernel")]
unsafe impl NSCoding for MPSMatrixBinaryKernel {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSCopying for MPSMatrixBinaryKernel {}

#[cfg(feature = "MPSKernel")]
unsafe impl CopyingHelper for MPSMatrixBinaryKernel {
    type Result = Self;
}

#[cfg(feature = "MPSKernel")]
unsafe impl NSObjectProtocol for MPSMatrixBinaryKernel {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSSecureCoding for MPSMatrixBinaryKernel {}

extern_methods!(
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSMatrixBinaryKernel {
        #[method(primarySourceMatrixOrigin)]
        pub unsafe fn primarySourceMatrixOrigin(&self) -> MTLOrigin;

        #[method(setPrimarySourceMatrixOrigin:)]
        pub unsafe fn setPrimarySourceMatrixOrigin(&self, primary_source_matrix_origin: MTLOrigin);

        #[method(secondarySourceMatrixOrigin)]
        pub unsafe fn secondarySourceMatrixOrigin(&self) -> MTLOrigin;

        #[method(setSecondarySourceMatrixOrigin:)]
        pub unsafe fn setSecondarySourceMatrixOrigin(
            &self,
            secondary_source_matrix_origin: MTLOrigin,
        );

        #[method(resultMatrixOrigin)]
        pub unsafe fn resultMatrixOrigin(&self) -> MTLOrigin;

        #[method(setResultMatrixOrigin:)]
        pub unsafe fn setResultMatrixOrigin(&self, result_matrix_origin: MTLOrigin);

        #[method(batchStart)]
        pub unsafe fn batchStart(&self) -> NSUInteger;

        #[method(setBatchStart:)]
        pub unsafe fn setBatchStart(&self, batch_start: NSUInteger);

        #[method(batchSize)]
        pub unsafe fn batchSize(&self) -> NSUInteger;

        #[method(setBatchSize:)]
        pub unsafe fn setBatchSize(&self, batch_size: NSUInteger);
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSMatrixBinaryKernel {
        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSMatrixBinaryKernel {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
