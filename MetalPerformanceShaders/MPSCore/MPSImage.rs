//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsimagedescriptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSImageDescriptor;
);

unsafe impl NSCopying for MPSImageDescriptor {}

unsafe impl CopyingHelper for MPSImageDescriptor {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MPSImageDescriptor {}

extern_methods!(
    unsafe impl MPSImageDescriptor {
        #[method(width)]
        pub unsafe fn width(&self) -> NSUInteger;

        #[method(setWidth:)]
        pub unsafe fn setWidth(&self, width: NSUInteger);

        #[method(height)]
        pub unsafe fn height(&self) -> NSUInteger;

        #[method(setHeight:)]
        pub unsafe fn setHeight(&self, height: NSUInteger);

        #[method(featureChannels)]
        pub unsafe fn featureChannels(&self) -> NSUInteger;

        #[method(setFeatureChannels:)]
        pub unsafe fn setFeatureChannels(&self, feature_channels: NSUInteger);

        #[method(numberOfImages)]
        pub unsafe fn numberOfImages(&self) -> NSUInteger;

        #[method(setNumberOfImages:)]
        pub unsafe fn setNumberOfImages(&self, number_of_images: NSUInteger);

        #[method(pixelFormat)]
        pub unsafe fn pixelFormat(&self) -> MTLPixelFormat;

        #[cfg(feature = "MPSCoreTypes")]
        #[method(channelFormat)]
        pub unsafe fn channelFormat(&self) -> MPSImageFeatureChannelFormat;

        #[cfg(feature = "MPSCoreTypes")]
        #[method(setChannelFormat:)]
        pub unsafe fn setChannelFormat(&self, channel_format: MPSImageFeatureChannelFormat);

        #[method(cpuCacheMode)]
        pub unsafe fn cpuCacheMode(&self) -> MTLCPUCacheMode;

        #[method(setCpuCacheMode:)]
        pub unsafe fn setCpuCacheMode(&self, cpu_cache_mode: MTLCPUCacheMode);

        #[method(storageMode)]
        pub unsafe fn storageMode(&self) -> MTLStorageMode;

        #[method(setStorageMode:)]
        pub unsafe fn setStorageMode(&self, storage_mode: MTLStorageMode);

        #[method(usage)]
        pub unsafe fn usage(&self) -> MTLTextureUsage;

        #[method(setUsage:)]
        pub unsafe fn setUsage(&self, usage: MTLTextureUsage);

        #[cfg(feature = "MPSCoreTypes")]
        #[method_id(@__retain_semantics Other imageDescriptorWithChannelFormat:width:height:featureChannels:)]
        pub unsafe fn imageDescriptorWithChannelFormat_width_height_featureChannels(
            channel_format: MPSImageFeatureChannelFormat,
            width: NSUInteger,
            height: NSUInteger,
            feature_channels: NSUInteger,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSCoreTypes")]
        #[method_id(@__retain_semantics Other imageDescriptorWithChannelFormat:width:height:featureChannels:numberOfImages:usage:)]
        pub unsafe fn imageDescriptorWithChannelFormat_width_height_featureChannels_numberOfImages_usage(
            channel_format: MPSImageFeatureChannelFormat,
            width: NSUInteger,
            height: NSUInteger,
            feature_channels: NSUInteger,
            number_of_images: NSUInteger,
            usage: MTLTextureUsage,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Copy copyWithZone:)]
        pub unsafe fn copyWithZone(&self, zone: *mut NSZone) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSImageDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C-unwind" {
    pub fn MPSImageBatchIncrementReadCount(batch: &MPSImageBatch, amount: NSInteger) -> NSUInteger;
}

extern "C-unwind" {
    pub fn MPSImageBatchSynchronize(
        batch: &MPSImageBatch,
        cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
    );
}

extern "C-unwind" {
    pub fn MPSImageBatchResourceSize(batch: &MPSImageBatch) -> NSUInteger;
}

extern "C-unwind" {
    #[cfg(feature = "block2")]
    pub fn MPSImageBatchIterate(
        batch: &MPSImageBatch,
        iterator_block: &block2::Block<dyn Fn(NonNull<MPSImage>, NSUInteger) -> NSInteger>,
    ) -> NSInteger;
}

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsimageallocator?language=objc)
    pub unsafe trait MPSImageAllocator: NSObjectProtocol + NSSecureCoding {
        #[cfg(feature = "MPSKernel")]
        #[method_id(@__retain_semantics Other imageForCommandBuffer:imageDescriptor:kernel:)]
        unsafe fn imageForCommandBuffer_imageDescriptor_kernel(
            &self,
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MPSImageDescriptor,
            kernel: &MPSKernel,
        ) -> Retained<MPSImage>;

        #[cfg(feature = "MPSKernel")]
        #[optional]
        #[method_id(@__retain_semantics Other imageBatchForCommandBuffer:imageDescriptor:kernel:count:)]
        unsafe fn imageBatchForCommandBuffer_imageDescriptor_kernel_count(
            &self,
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MPSImageDescriptor,
            kernel: &MPSKernel,
            count: NSUInteger,
        ) -> Retained<MPSImageBatch>;
    }

    unsafe impl ProtocolType for dyn MPSImageAllocator {}
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpspurgeablestate?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSPurgeableState(pub NSUInteger);
impl MPSPurgeableState {
    #[doc(alias = "MPSPurgeableStateAllocationDeferred")]
    pub const AllocationDeferred: Self = Self(0);
    #[doc(alias = "MPSPurgeableStateKeepCurrent")]
    pub const KeepCurrent: Self = Self(MTLPurgeableState::KeepCurrent.0);
    #[doc(alias = "MPSPurgeableStateNonVolatile")]
    pub const NonVolatile: Self = Self(MTLPurgeableState::NonVolatile.0);
    #[doc(alias = "MPSPurgeableStateVolatile")]
    pub const Volatile: Self = Self(MTLPurgeableState::Volatile.0);
    #[doc(alias = "MPSPurgeableStateEmpty")]
    pub const Empty: Self = Self(MTLPurgeableState::Empty.0);
}

unsafe impl Encode for MPSPurgeableState {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSPurgeableState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsdatalayout?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSDataLayout(pub NSUInteger);
impl MPSDataLayout {
    #[doc(alias = "MPSDataLayoutHeightxWidthxFeatureChannels")]
    pub const HeightxWidthxFeatureChannels: Self = Self(0);
    #[doc(alias = "MPSDataLayoutFeatureChannelsxHeightxWidth")]
    pub const FeatureChannelsxHeightxWidth: Self = Self(1);
}

unsafe impl Encode for MPSDataLayout {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSDataLayout {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsimagereadwriteparams?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct MPSImageReadWriteParams {
    pub featureChannelOffset: NSUInteger,
    pub numberOfFeatureChannelsToReadWrite: NSUInteger,
}

unsafe impl Encode for MPSImageReadWriteParams {
    const ENCODING: Encoding =
        Encoding::Struct("?", &[<NSUInteger>::ENCODING, <NSUInteger>::ENCODING]);
}

unsafe impl RefEncode for MPSImageReadWriteParams {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsimage?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSImage;
);

unsafe impl NSObjectProtocol for MPSImage {}

extern_methods!(
    unsafe impl MPSImage {
        #[method_id(@__retain_semantics Other defaultAllocator)]
        pub unsafe fn defaultAllocator() -> Retained<ProtocolObject<dyn MPSImageAllocator>>;

        #[method_id(@__retain_semantics Other device)]
        pub unsafe fn device(&self) -> Retained<ProtocolObject<dyn MTLDevice>>;

        #[method(width)]
        pub unsafe fn width(&self) -> NSUInteger;

        #[method(height)]
        pub unsafe fn height(&self) -> NSUInteger;

        #[method(featureChannels)]
        pub unsafe fn featureChannels(&self) -> NSUInteger;

        #[method(numberOfImages)]
        pub unsafe fn numberOfImages(&self) -> NSUInteger;

        #[method(textureType)]
        pub unsafe fn textureType(&self) -> MTLTextureType;

        #[method(pixelFormat)]
        pub unsafe fn pixelFormat(&self) -> MTLPixelFormat;

        #[method(precision)]
        pub unsafe fn precision(&self) -> NSUInteger;

        #[method(usage)]
        pub unsafe fn usage(&self) -> MTLTextureUsage;

        #[cfg(feature = "MPSCoreTypes")]
        #[method(featureChannelFormat)]
        pub unsafe fn featureChannelFormat(&self) -> MPSImageFeatureChannelFormat;

        #[method(pixelSize)]
        pub unsafe fn pixelSize(&self) -> usize;

        #[method_id(@__retain_semantics Other texture)]
        pub unsafe fn texture(&self) -> Retained<ProtocolObject<dyn MTLTexture>>;

        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Option<Retained<NSString>>;

        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: Option<&NSString>);

        #[method_id(@__retain_semantics Other parent)]
        pub unsafe fn parent(&self) -> Option<Retained<MPSImage>>;

        #[method_id(@__retain_semantics Init initWithDevice:imageDescriptor:)]
        pub unsafe fn initWithDevice_imageDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            image_descriptor: &MPSImageDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithParentImage:sliceRange:featureChannels:)]
        pub unsafe fn initWithParentImage_sliceRange_featureChannels(
            this: Allocated<Self>,
            parent: &MPSImage,
            slice_range: NSRange,
            feature_channels: NSUInteger,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithTexture:featureChannels:)]
        pub unsafe fn initWithTexture_featureChannels(
            this: Allocated<Self>,
            texture: &ProtocolObject<dyn MTLTexture>,
            feature_channels: NSUInteger,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics Other batchRepresentationWithSubRange:)]
        pub unsafe fn batchRepresentationWithSubRange(
            &self,
            sub_range: NSRange,
        ) -> Retained<MPSImageBatch>;

        #[method_id(@__retain_semantics Other batchRepresentation)]
        pub unsafe fn batchRepresentation(&self) -> Retained<MPSImageBatch>;

        #[method_id(@__retain_semantics Other subImageWithFeatureChannelRange:)]
        pub unsafe fn subImageWithFeatureChannelRange(&self, range: NSRange) -> Retained<MPSImage>;

        #[method(resourceSize)]
        pub unsafe fn resourceSize(&self) -> NSUInteger;

        #[method(setPurgeableState:)]
        pub unsafe fn setPurgeableState(&self, state: MPSPurgeableState) -> MPSPurgeableState;

        #[method(readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:)]
        pub unsafe fn readBytes_dataLayout_bytesPerRow_region_featureChannelInfo_imageIndex(
            &self,
            data_bytes: NonNull<c_void>,
            data_layout: MPSDataLayout,
            bytes_per_row: NSUInteger,
            region: MTLRegion,
            feature_channel_info: MPSImageReadWriteParams,
            image_index: NSUInteger,
        );

        #[method(writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:)]
        pub unsafe fn writeBytes_dataLayout_bytesPerRow_region_featureChannelInfo_imageIndex(
            &self,
            data_bytes: NonNull<c_void>,
            data_layout: MPSDataLayout,
            bytes_per_row: NSUInteger,
            region: MTLRegion,
            feature_channel_info: MPSImageReadWriteParams,
            image_index: NSUInteger,
        );

        #[method(writeBytes:dataLayout:bytesPerColumn:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:)]
        pub unsafe fn writeBytes_dataLayout_bytesPerColumn_bytesPerRow_bytesPerImage_region_featureChannelInfo_imageIndex(
            &self,
            data_bytes: NonNull<c_void>,
            data_layout: MPSDataLayout,
            bytes_per_column: NSUInteger,
            bytes_per_row: NSUInteger,
            bytes_per_image: NSUInteger,
            region: MTLRegion,
            feature_channel_info: MPSImageReadWriteParams,
            image_index: NSUInteger,
        );

        #[method(readBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:)]
        pub unsafe fn readBytes_dataLayout_bytesPerRow_bytesPerImage_region_featureChannelInfo_imageIndex(
            &self,
            data_bytes: NonNull<c_void>,
            data_layout: MPSDataLayout,
            bytes_per_row: NSUInteger,
            bytes_per_image: NSUInteger,
            region: MTLRegion,
            feature_channel_info: MPSImageReadWriteParams,
            image_index: NSUInteger,
        );

        #[method(writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:)]
        pub unsafe fn writeBytes_dataLayout_bytesPerRow_bytesPerImage_region_featureChannelInfo_imageIndex(
            &self,
            data_bytes: NonNull<c_void>,
            data_layout: MPSDataLayout,
            bytes_per_row: NSUInteger,
            bytes_per_image: NSUInteger,
            region: MTLRegion,
            feature_channel_info: MPSImageReadWriteParams,
            image_index: NSUInteger,
        );

        #[method(readBytes:dataLayout:imageIndex:)]
        pub unsafe fn readBytes_dataLayout_imageIndex(
            &self,
            data_bytes: NonNull<c_void>,
            data_layout: MPSDataLayout,
            image_index: NSUInteger,
        );

        #[method(writeBytes:dataLayout:imageIndex:)]
        pub unsafe fn writeBytes_dataLayout_imageIndex(
            &self,
            data_bytes: NonNull<c_void>,
            data_layout: MPSDataLayout,
            image_index: NSUInteger,
        );

        #[method(synchronizeOnCommandBuffer:)]
        pub unsafe fn synchronizeOnCommandBuffer(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSImage {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpstemporaryimage?language=objc)
    #[unsafe(super(MPSImage, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSTemporaryImage;
);

unsafe impl NSObjectProtocol for MPSTemporaryImage {}

extern_methods!(
    unsafe impl MPSTemporaryImage {
        #[method_id(@__retain_semantics Other defaultAllocator)]
        pub unsafe fn defaultAllocator() -> Retained<ProtocolObject<dyn MPSImageAllocator>>;

        #[method_id(@__retain_semantics Other temporaryImageWithCommandBuffer:imageDescriptor:)]
        pub unsafe fn temporaryImageWithCommandBuffer_imageDescriptor(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            image_descriptor: &MPSImageDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryImageWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryImageWithCommandBuffer_textureDescriptor(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            texture_descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryImageWithCommandBuffer:textureDescriptor:featureChannels:)]
        pub unsafe fn temporaryImageWithCommandBuffer_textureDescriptor_featureChannels(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            texture_descriptor: &MTLTextureDescriptor,
            feature_channels: NSUInteger,
        ) -> Retained<Self>;

        #[method(prefetchStorageWithCommandBuffer:imageDescriptorList:)]
        pub unsafe fn prefetchStorageWithCommandBuffer_imageDescriptorList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor_list: &NSArray<MPSImageDescriptor>,
        );

        #[method_id(@__retain_semantics Init initWithTexture:featureChannels:)]
        pub unsafe fn initWithTexture_featureChannels(
            this: Allocated<Self>,
            texture: &ProtocolObject<dyn MTLTexture>,
            feature_channels: NSUInteger,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:imageDescriptor:)]
        pub unsafe fn initWithDevice_imageDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            image_descriptor: &MPSImageDescriptor,
        ) -> Retained<Self>;

        #[method(readCount)]
        pub unsafe fn readCount(&self) -> NSUInteger;

        #[method(setReadCount:)]
        pub unsafe fn setReadCount(&self, read_count: NSUInteger);
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSImage`
    unsafe impl MPSTemporaryImage {
        #[method_id(@__retain_semantics Init initWithParentImage:sliceRange:featureChannels:)]
        pub unsafe fn initWithParentImage_sliceRange_featureChannels(
            this: Allocated<Self>,
            parent: &MPSImage,
            slice_range: NSRange,
            feature_channels: NSUInteger,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSTemporaryImage {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
