//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsdevicecapsvalues?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSDeviceCapsValues(pub u32);
impl MPSDeviceCapsValues {
    pub const MPSDeviceCapsNull: Self = Self(0);
    pub const MPSDeviceSupportsReadableArrayOfTextures: Self = Self(1 << 0);
    pub const MPSDeviceSupportsWritableArrayOfTextures: Self = Self(1 << 1);
    pub const MPSDeviceSupportsReadWriteTextures: Self = Self(1 << 2);
    pub const MPSDeviceSupportsSimdgroupBarrier: Self = Self(1 << 3);
    pub const MPSDeviceSupportsQuadShuffle: Self = Self(1 << 4);
    pub const MPSDeviceSupportsSimdShuffle: Self = Self(1 << 5);
    pub const MPSDeviceSupportsSimdReduction: Self = Self(1 << 6);
    pub const MPSDeviceSupportsFloat32Filtering: Self = Self(1 << 7);
    pub const MPSDeviceSupportsNorm16BicubicFiltering: Self = Self(1 << 8);
    pub const MPSDeviceSupportsFloat16BicubicFiltering: Self = Self(1 << 9);
    pub const MPSDeviceIsAppleDevice: Self = Self(1 << 10);
    pub const MPSDeviceSupportsSimdShuffleAndFill: Self = Self(1 << 11);
    pub const MPSDeviceSupportsBFloat16Arithmetic: Self = Self(1 << 12);
    pub const MPSDeviceCapsLast: Self = Self(1 << 13);
}

unsafe impl Encode for MPSDeviceCapsValues {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for MPSDeviceCapsValues {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsdevicecaps?language=objc)
pub type MPSDeviceCaps = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscustomkernelindex?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSCustomKernelIndex(pub c_uint);
impl MPSCustomKernelIndex {
    #[doc(alias = "MPSCustomKernelIndexDestIndex")]
    pub const DestIndex: Self = Self(0);
    #[doc(alias = "MPSCustomKernelIndexSrc0Index")]
    pub const Src0Index: Self = Self(0);
    #[doc(alias = "MPSCustomKernelIndexSrc1Index")]
    pub const Src1Index: Self = Self(1);
    #[doc(alias = "MPSCustomKernelIndexSrc2Index")]
    pub const Src2Index: Self = Self(2);
    #[doc(alias = "MPSCustomKernelIndexSrc3Index")]
    pub const Src3Index: Self = Self(3);
    #[doc(alias = "MPSCustomKernelIndexSrc4Index")]
    pub const Src4Index: Self = Self(4);
    #[doc(alias = "MPSCustomKernelIndexUserDataIndex")]
    pub const UserDataIndex: Self = Self(30);
}

unsafe impl Encode for MPSCustomKernelIndex {
    const ENCODING: Encoding = c_uint::ENCODING;
}

unsafe impl RefEncode for MPSCustomKernelIndex {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsmatrixoffset?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct MPSMatrixOffset {
    pub rowOffset: u32,
    pub columnOffset: u32,
}

unsafe impl Encode for MPSMatrixOffset {
    const ENCODING: Encoding = Encoding::Struct("?", &[<u32>::ENCODING, <u32>::ENCODING]);
}

unsafe impl RefEncode for MPSMatrixOffset {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsintegerdivisionparams?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct MPSIntegerDivisionParams {
    pub divisor: u16,
    pub recip: u16,
    pub addend: u16,
    pub shift: u16,
}

unsafe impl Encode for MPSIntegerDivisionParams {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u16>::ENCODING,
            <u16>::ENCODING,
            <u16>::ENCODING,
            <u16>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for MPSIntegerDivisionParams {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsimagetype?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSImageType(pub u32);
impl MPSImageType {
    pub const MPSImageType2d: Self = Self(0);
    pub const MPSImageType2d_array: Self = Self(1);
    #[doc(alias = "MPSImageTypeArray2d")]
    pub const Array2d: Self = Self(2);
    #[doc(alias = "MPSImageTypeArray2d_array")]
    pub const Array2d_array: Self = Self(3);
    #[doc(alias = "MPSImageType_ArrayMask")]
    pub const _ArrayMask: Self = Self(1);
    #[doc(alias = "MPSImageType_BatchMask")]
    pub const _BatchMask: Self = Self(2);
    #[doc(alias = "MPSImageType_typeMask")]
    pub const _typeMask: Self = Self(3);
    #[doc(alias = "MPSImageType_noAlpha")]
    pub const _noAlpha: Self = Self(4);
    #[doc(alias = "MPSImageType_texelFormatMask")]
    pub const _texelFormatMask: Self = Self(0x38);
    #[doc(alias = "MPSImageType_texelFormatShift")]
    pub const _texelFormatShift: Self = Self(3);
    #[doc(alias = "MPSImageType_texelFormatStandard")]
    pub const _texelFormatStandard: Self = Self(0 << MPSImageType::_texelFormatShift.0);
    #[doc(alias = "MPSImageType_texelFormatUnorm8")]
    pub const _texelFormatUnorm8: Self = Self(1 << MPSImageType::_texelFormatShift.0);
    #[doc(alias = "MPSImageType_texelFormatFloat16")]
    pub const _texelFormatFloat16: Self = Self(2 << MPSImageType::_texelFormatShift.0);
    #[doc(alias = "MPSImageType_texelFormatBFloat16")]
    pub const _texelFormatBFloat16: Self = Self(3 << MPSImageType::_texelFormatShift.0);
    #[doc(alias = "MPSImageType_bitCount")]
    pub const _bitCount: Self = Self(6);
    #[doc(alias = "MPSImageType_mask")]
    pub const _mask: Self = Self((1 << MPSImageType::_bitCount.0) - 1);
    pub const MPSImageType2d_noAlpha: Self =
        Self(MPSImageType::MPSImageType2d.0 | MPSImageType::_noAlpha.0);
    pub const MPSImageType2d_array_noAlpha: Self =
        Self(MPSImageType::MPSImageType2d_array.0 | MPSImageType::_noAlpha.0);
    #[doc(alias = "MPSImageTypeArray2d_noAlpha")]
    pub const Array2d_noAlpha: Self = Self(
        MPSImageType::MPSImageType2d.0 | MPSImageType::_BatchMask.0 | MPSImageType::_noAlpha.0,
    );
    #[doc(alias = "MPSImageTypeArray2d_array_noAlpha")]
    pub const Array2d_array_noAlpha: Self = Self(
        MPSImageType::MPSImageType2d_array.0
            | MPSImageType::_BatchMask.0
            | MPSImageType::_noAlpha.0,
    );
}

unsafe impl Encode for MPSImageType {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for MPSImageType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    #[cfg(feature = "MPSImage")]
    pub fn MPSGetImageType(image: &MPSImage) -> MPSImageType;
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsfunctionconstant?language=objc)
pub type MPSFunctionConstant = i64;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsfunctionconstantinmetal?language=objc)
pub type MPSFunctionConstantInMetal = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsfunctionconstantnone?language=objc)
pub static MPSFunctionConstantNone: MPSFunctionConstant = -1;

// TODO: pub fn MPSFindIntegerDivisionParams(divisor: u16,) -> MPSIntegerDivisionParams;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscustomkernelargumentcount?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct MPSCustomKernelArgumentCount {
    pub destinationTextureCount: c_ulong,
    pub sourceTextureCount: c_ulong,
    pub broadcastTextureCount: c_ulong,
}

unsafe impl Encode for MPSCustomKernelArgumentCount {
    const ENCODING: Encoding = Encoding::Struct(
        "MPSCustomKernelArgumentCount",
        &[Encoding::C_ULONG, Encoding::C_ULONG, Encoding::C_ULONG],
    );
}

unsafe impl RefEncode for MPSCustomKernelArgumentCount {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

// TODO: pub fn MPSGetCustomKernelMaxBatchSize(c: MPSCustomKernelArgumentCount,mps_max_textures: c_ulong,) -> c_ulong;

// TODO: pub fn MPSGetCustomKernelBatchedDestinationIndex(c: MPSCustomKernelArgumentCount,) -> c_ulong;

// TODO: pub fn MPSGetCustomKernelBatchedSourceIndex(c: MPSCustomKernelArgumentCount,source_index: c_ulong,mps_max_textures: c_ulong,) -> c_ulong;

// TODO: pub fn MPSGetCustomKernelBroadcastSourceIndex(c: MPSCustomKernelArgumentCount,source_index: c_ulong,mps_max_textures: c_ulong,) -> c_ulong;
