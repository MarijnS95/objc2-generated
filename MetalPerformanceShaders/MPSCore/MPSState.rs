//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsstateresourcelist?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSStateResourceList;
);

unsafe impl NSObjectProtocol for MPSStateResourceList {}

extern_methods!(
    unsafe impl MPSStateResourceList {
        #[method_id(@__retain_semantics Other resourceList)]
        pub unsafe fn resourceList() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(appendTexture:)]
        pub unsafe fn appendTexture(&self, descriptor: &MTLTextureDescriptor);

        #[method(appendBuffer:)]
        pub unsafe fn appendBuffer(&self, size: NSUInteger);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSStateResourceList {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsstatetextureinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct MPSStateTextureInfo {
    pub width: NSUInteger,
    pub height: NSUInteger,
    pub depth: NSUInteger,
    pub arrayLength: NSUInteger,
    pub pixelFormat: MTLPixelFormat,
    pub textureType: MTLTextureType,
    pub usage: MTLTextureUsage,
    pub(crate) _reserved: [NSUInteger; 4],
}

unsafe impl Encode for MPSStateTextureInfo {
    const ENCODING: Encoding = Encoding::Struct(
        "MPSStateTextureInfo",
        &[
            <NSUInteger>::ENCODING,
            <NSUInteger>::ENCODING,
            <NSUInteger>::ENCODING,
            <NSUInteger>::ENCODING,
            <MTLPixelFormat>::ENCODING,
            <MTLTextureType>::ENCODING,
            <MTLTextureUsage>::ENCODING,
            <[NSUInteger; 4]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for MPSStateTextureInfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsstateresourcetype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSStateResourceType(pub NSUInteger);
impl MPSStateResourceType {
    #[doc(alias = "MPSStateResourceTypeNone")]
    pub const None: Self = Self(0);
    #[doc(alias = "MPSStateResourceTypeBuffer")]
    pub const Buffer: Self = Self(1);
    #[doc(alias = "MPSStateResourceTypeTexture")]
    pub const Texture: Self = Self(2);
}

unsafe impl Encode for MPSStateResourceType {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSStateResourceType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsstate?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSState;
);

unsafe impl NSObjectProtocol for MPSState {}

extern_methods!(
    unsafe impl MPSState {
        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:bufferSize:)]
        pub unsafe fn temporaryStateWithCommandBuffer_bufferSize(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryStateWithCommandBuffer_textureDescriptor(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:)]
        pub unsafe fn temporaryStateWithCommandBuffer(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:bufferSize:)]
        pub unsafe fn initWithDevice_bufferSize(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:textureDescriptor:)]
        pub unsafe fn initWithDevice_textureDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResource:)]
        pub unsafe fn initWithResource(
            this: Allocated<Self>,
            resource: Option<&ProtocolObject<dyn MTLResource>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:resourceList:)]
        pub unsafe fn initWithDevice_resourceList(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:resourceList:)]
        pub unsafe fn temporaryStateWithCommandBuffer_resourceList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResources:)]
        pub unsafe fn initWithResources(
            this: Allocated<Self>,
            resources: Option<&NSArray<ProtocolObject<dyn MTLResource>>>,
        ) -> Retained<Self>;

        #[method(resourceCount)]
        pub unsafe fn resourceCount(&self) -> NSUInteger;

        #[method_id(@__retain_semantics Other resourceAtIndex:allocateMemory:)]
        pub unsafe fn resourceAtIndex_allocateMemory(
            &self,
            index: NSUInteger,
            allocate_memory: bool,
        ) -> Option<Retained<ProtocolObject<dyn MTLResource>>>;

        #[method(readCount)]
        pub unsafe fn readCount(&self) -> NSUInteger;

        #[method(setReadCount:)]
        pub unsafe fn setReadCount(&self, read_count: NSUInteger);

        #[method(isTemporary)]
        pub unsafe fn isTemporary(&self) -> bool;

        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Option<Retained<NSString>>;

        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: Option<&NSString>);

        #[method(bufferSizeAtIndex:)]
        pub unsafe fn bufferSizeAtIndex(&self, index: NSUInteger) -> NSUInteger;

        #[method(textureInfoAtIndex:)]
        pub unsafe fn textureInfoAtIndex(&self, index: NSUInteger) -> MPSStateTextureInfo;

        #[method(resourceTypeAtIndex:)]
        pub unsafe fn resourceTypeAtIndex(&self, index: NSUInteger) -> MPSStateResourceType;

        #[method(synchronizeOnCommandBuffer:)]
        pub unsafe fn synchronizeOnCommandBuffer(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
        );

        #[method(resourceSize)]
        pub unsafe fn resourceSize(&self) -> NSUInteger;

        #[cfg(all(feature = "MPSImage", feature = "MPSKernel"))]
        #[method_id(@__retain_semantics Other destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:)]
        pub unsafe fn destinationImageDescriptorForSourceImages_sourceStates_forKernel_suggestedDescriptor(
            &self,
            source_images: &NSArray<MPSImage>,
            source_states: Option<&NSArray<MPSState>>,
            kernel: &MPSKernel,
            in_descriptor: &MPSImageDescriptor,
        ) -> Retained<MPSImageDescriptor>;

        #[deprecated]
        #[method_id(@__retain_semantics Other resource)]
        pub unsafe fn resource(&self) -> Option<Retained<ProtocolObject<dyn MTLResource>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSState {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsstatebatch?language=objc)
pub type MPSStateBatch = NSArray<MPSState>;

extern "C-unwind" {
    pub fn MPSStateBatchIncrementReadCount(
        batch: Option<&MPSStateBatch>,
        amount: NSInteger,
    ) -> NSUInteger;
}

extern "C-unwind" {
    pub fn MPSStateBatchSynchronize(
        batch: &MPSStateBatch,
        cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
    );
}

extern "C-unwind" {
    pub fn MPSStateBatchResourceSize(batch: Option<&MPSStateBatch>) -> NSUInteger;
}
