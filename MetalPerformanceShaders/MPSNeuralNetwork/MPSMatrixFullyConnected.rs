//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsmatrixfullyconnected?language=objc)
    #[unsafe(super(MPSMatrixBinaryKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    pub struct MPSMatrixFullyConnected;
);

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSCoding for MPSMatrixFullyConnected {}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSCopying for MPSMatrixFullyConnected {}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl CopyingHelper for MPSMatrixFullyConnected {
    type Result = Self;
}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSObjectProtocol for MPSMatrixFullyConnected {}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSSecureCoding for MPSMatrixFullyConnected {}

extern_methods!(
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    unsafe impl MPSMatrixFullyConnected {
        #[method(sourceNumberOfFeatureVectors)]
        pub unsafe fn sourceNumberOfFeatureVectors(&self) -> NSUInteger;

        #[method(setSourceNumberOfFeatureVectors:)]
        pub unsafe fn setSourceNumberOfFeatureVectors(
            &self,
            source_number_of_feature_vectors: NSUInteger,
        );

        #[method(sourceInputFeatureChannels)]
        pub unsafe fn sourceInputFeatureChannels(&self) -> NSUInteger;

        #[method(setSourceInputFeatureChannels:)]
        pub unsafe fn setSourceInputFeatureChannels(
            &self,
            source_input_feature_channels: NSUInteger,
        );

        #[method(sourceOutputFeatureChannels)]
        pub unsafe fn sourceOutputFeatureChannels(&self) -> NSUInteger;

        #[method(setSourceOutputFeatureChannels:)]
        pub unsafe fn setSourceOutputFeatureChannels(
            &self,
            source_output_feature_channels: NSUInteger,
        );

        #[method(alpha)]
        pub unsafe fn alpha(&self) -> c_double;

        #[method(setAlpha:)]
        pub unsafe fn setAlpha(&self, alpha: c_double);

        #[cfg(feature = "MPSCNNNeuronType")]
        #[method(setNeuronType:parameterA:parameterB:parameterC:)]
        pub unsafe fn setNeuronType_parameterA_parameterB_parameterC(
            &self,
            neuron_type: MPSCNNNeuronType,
            parameter_a: c_float,
            parameter_b: c_float,
            parameter_c: c_float,
        );

        #[cfg(feature = "MPSCNNNeuronType")]
        #[method(neuronType)]
        pub unsafe fn neuronType(&self) -> MPSCNNNeuronType;

        #[method(neuronParameterA)]
        pub unsafe fn neuronParameterA(&self) -> c_float;

        #[method(neuronParameterB)]
        pub unsafe fn neuronParameterB(&self) -> c_float;

        #[method(neuronParameterC)]
        pub unsafe fn neuronParameterC(&self) -> c_float;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSMatrix")]
        #[method(encodeToCommandBuffer:inputMatrix:weightMatrix:biasVector:resultMatrix:)]
        pub unsafe fn encodeToCommandBuffer_inputMatrix_weightMatrix_biasVector_resultMatrix(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            input_matrix: &MPSMatrix,
            weight_matrix: &MPSMatrix,
            bias_vector: Option<&MPSVector>,
            result_matrix: &MPSMatrix,
        );

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Copy copyWithZone:device:)]
        pub unsafe fn copyWithZone_device(
            &self,
            zone: *mut NSZone,
            device: Option<&ProtocolObject<dyn MTLDevice>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    unsafe impl MPSMatrixFullyConnected {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    unsafe impl MPSMatrixFullyConnected {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsmatrixfullyconnectedgradient?language=objc)
    #[unsafe(super(MPSMatrixBinaryKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    pub struct MPSMatrixFullyConnectedGradient;
);

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSCoding for MPSMatrixFullyConnectedGradient {}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSCopying for MPSMatrixFullyConnectedGradient {}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl CopyingHelper for MPSMatrixFullyConnectedGradient {
    type Result = Self;
}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSObjectProtocol for MPSMatrixFullyConnectedGradient {}

#[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
unsafe impl NSSecureCoding for MPSMatrixFullyConnectedGradient {}

extern_methods!(
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    unsafe impl MPSMatrixFullyConnectedGradient {
        #[method(sourceNumberOfFeatureVectors)]
        pub unsafe fn sourceNumberOfFeatureVectors(&self) -> NSUInteger;

        #[method(setSourceNumberOfFeatureVectors:)]
        pub unsafe fn setSourceNumberOfFeatureVectors(
            &self,
            source_number_of_feature_vectors: NSUInteger,
        );

        #[method(sourceOutputFeatureChannels)]
        pub unsafe fn sourceOutputFeatureChannels(&self) -> NSUInteger;

        #[method(setSourceOutputFeatureChannels:)]
        pub unsafe fn setSourceOutputFeatureChannels(
            &self,
            source_output_feature_channels: NSUInteger,
        );

        #[method(sourceInputFeatureChannels)]
        pub unsafe fn sourceInputFeatureChannels(&self) -> NSUInteger;

        #[method(setSourceInputFeatureChannels:)]
        pub unsafe fn setSourceInputFeatureChannels(
            &self,
            source_input_feature_channels: NSUInteger,
        );

        #[method(alpha)]
        pub unsafe fn alpha(&self) -> c_double;

        #[method(setAlpha:)]
        pub unsafe fn setAlpha(&self, alpha: c_double);

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSMatrix")]
        #[method(encodeGradientForDataToCommandBuffer:gradientMatrix:weightMatrix:resultGradientForDataMatrix:)]
        pub unsafe fn encodeGradientForDataToCommandBuffer_gradientMatrix_weightMatrix_resultGradientForDataMatrix(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            gradient_matrix: &MPSMatrix,
            weight_matrix: &MPSMatrix,
            result_gradient_for_data_matrix: &MPSMatrix,
        );

        #[cfg(feature = "MPSMatrix")]
        #[method(encodeGradientForWeightsAndBiasToCommandBuffer:gradientMatrix:inputMatrix:resultGradientForWeightMatrix:resultGradientForBiasVector:)]
        pub unsafe fn encodeGradientForWeightsAndBiasToCommandBuffer_gradientMatrix_inputMatrix_resultGradientForWeightMatrix_resultGradientForBiasVector(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            gradient_matrix: &MPSMatrix,
            input_matrix: &MPSMatrix,
            result_gradient_for_weight_matrix: &MPSMatrix,
            result_gradient_for_bias_vector: Option<&MPSVector>,
        );

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Copy copyWithZone:device:)]
        pub unsafe fn copyWithZone_device(
            &self,
            zone: *mut NSZone,
            device: Option<&ProtocolObject<dyn MTLDevice>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    unsafe impl MPSMatrixFullyConnectedGradient {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSKernel", feature = "MPSMatrixTypes"))]
    unsafe impl MPSMatrixFullyConnectedGradient {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
