//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiondescriptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSCNNConvolutionDescriptor;
);

unsafe impl NSCoding for MPSCNNConvolutionDescriptor {}

unsafe impl NSCopying for MPSCNNConvolutionDescriptor {}

unsafe impl CopyingHelper for MPSCNNConvolutionDescriptor {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MPSCNNConvolutionDescriptor {}

unsafe impl NSSecureCoding for MPSCNNConvolutionDescriptor {}

extern_methods!(
    unsafe impl MPSCNNConvolutionDescriptor {
        #[method(kernelWidth)]
        pub unsafe fn kernelWidth(&self) -> NSUInteger;

        #[method(setKernelWidth:)]
        pub unsafe fn setKernelWidth(&self, kernel_width: NSUInteger);

        #[method(kernelHeight)]
        pub unsafe fn kernelHeight(&self) -> NSUInteger;

        #[method(setKernelHeight:)]
        pub unsafe fn setKernelHeight(&self, kernel_height: NSUInteger);

        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(setInputFeatureChannels:)]
        pub unsafe fn setInputFeatureChannels(&self, input_feature_channels: NSUInteger);

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[method(setOutputFeatureChannels:)]
        pub unsafe fn setOutputFeatureChannels(&self, output_feature_channels: NSUInteger);

        #[method(strideInPixelsX)]
        pub unsafe fn strideInPixelsX(&self) -> NSUInteger;

        #[method(setStrideInPixelsX:)]
        pub unsafe fn setStrideInPixelsX(&self, stride_in_pixels_x: NSUInteger);

        #[method(strideInPixelsY)]
        pub unsafe fn strideInPixelsY(&self) -> NSUInteger;

        #[method(setStrideInPixelsY:)]
        pub unsafe fn setStrideInPixelsY(&self, stride_in_pixels_y: NSUInteger);

        #[method(groups)]
        pub unsafe fn groups(&self) -> NSUInteger;

        #[method(setGroups:)]
        pub unsafe fn setGroups(&self, groups: NSUInteger);

        #[method(dilationRateX)]
        pub unsafe fn dilationRateX(&self) -> NSUInteger;

        #[method(setDilationRateX:)]
        pub unsafe fn setDilationRateX(&self, dilation_rate_x: NSUInteger);

        #[method(dilationRateY)]
        pub unsafe fn dilationRateY(&self) -> NSUInteger;

        #[method(setDilationRateY:)]
        pub unsafe fn setDilationRateY(&self, dilation_rate_y: NSUInteger);

        #[cfg(feature = "MPSCNNNeuron")]
        #[method_id(@__retain_semantics Other fusedNeuronDescriptor)]
        pub unsafe fn fusedNeuronDescriptor(&self) -> Retained<MPSNNNeuronDescriptor>;

        #[cfg(feature = "MPSCNNNeuron")]
        #[method(setFusedNeuronDescriptor:)]
        pub unsafe fn setFusedNeuronDescriptor(
            &self,
            fused_neuron_descriptor: &MPSNNNeuronDescriptor,
        );

        #[cfg(all(
            feature = "MPSCNNKernel",
            feature = "MPSCNNNeuron",
            feature = "MPSKernel"
        ))]
        #[deprecated]
        #[method_id(@__retain_semantics Other neuron)]
        pub unsafe fn neuron(&self) -> Option<Retained<MPSCNNNeuron>>;

        #[cfg(all(
            feature = "MPSCNNKernel",
            feature = "MPSCNNNeuron",
            feature = "MPSKernel"
        ))]
        #[deprecated]
        #[method(setNeuron:)]
        pub unsafe fn setNeuron(&self, neuron: Option<&MPSCNNNeuron>);

        #[method(supportsSecureCoding)]
        pub unsafe fn supportsSecureCoding() -> bool;

        #[method(encodeWithCoder:)]
        pub unsafe fn encodeWithCoder(&self, a_coder: &NSCoder);

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "MPSCNNKernel",
            feature = "MPSCNNNeuron",
            feature = "MPSKernel"
        ))]
        #[deprecated]
        #[method_id(@__retain_semantics Other cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:neuronFilter:)]
        pub unsafe fn cnnConvolutionDescriptorWithKernelWidth_kernelHeight_inputFeatureChannels_outputFeatureChannels_neuronFilter(
            kernel_width: NSUInteger,
            kernel_height: NSUInteger,
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
            neuron_filter: Option<&MPSCNNNeuron>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:)]
        pub unsafe fn cnnConvolutionDescriptorWithKernelWidth_kernelHeight_inputFeatureChannels_outputFeatureChannels(
            kernel_width: NSUInteger,
            kernel_height: NSUInteger,
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
        ) -> Retained<Self>;

        #[method(setBatchNormalizationParametersForInferenceWithMean:variance:gamma:beta:epsilon:)]
        pub unsafe fn setBatchNormalizationParametersForInferenceWithMean_variance_gamma_beta_epsilon(
            &self,
            mean: *mut c_float,
            variance: *mut c_float,
            gamma: *mut c_float,
            beta: *mut c_float,
            epsilon: c_float,
        );

        #[cfg(feature = "MPSCNNNeuronType")]
        #[deprecated]
        #[method(setNeuronType:parameterA:parameterB:)]
        pub unsafe fn setNeuronType_parameterA_parameterB(
            &self,
            neuron_type: MPSCNNNeuronType,
            parameter_a: c_float,
            parameter_b: c_float,
        );

        #[cfg(feature = "MPSCNNNeuronType")]
        #[deprecated]
        #[method(neuronType)]
        pub unsafe fn neuronType(&self) -> MPSCNNNeuronType;

        #[deprecated]
        #[method(neuronParameterA)]
        pub unsafe fn neuronParameterA(&self) -> c_float;

        #[deprecated]
        #[method(neuronParameterB)]
        pub unsafe fn neuronParameterB(&self) -> c_float;

        #[deprecated]
        #[method(setNeuronToPReLUWithParametersA:)]
        pub unsafe fn setNeuronToPReLUWithParametersA(&self, a: &NSData);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSCNNConvolutionDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnsubpixelconvolutiondescriptor?language=objc)
    #[unsafe(super(MPSCNNConvolutionDescriptor, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSCNNSubPixelConvolutionDescriptor;
);

unsafe impl NSCoding for MPSCNNSubPixelConvolutionDescriptor {}

unsafe impl NSCopying for MPSCNNSubPixelConvolutionDescriptor {}

unsafe impl CopyingHelper for MPSCNNSubPixelConvolutionDescriptor {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MPSCNNSubPixelConvolutionDescriptor {}

unsafe impl NSSecureCoding for MPSCNNSubPixelConvolutionDescriptor {}

extern_methods!(
    unsafe impl MPSCNNSubPixelConvolutionDescriptor {
        #[method(subPixelScaleFactor)]
        pub unsafe fn subPixelScaleFactor(&self) -> NSUInteger;

        #[method(setSubPixelScaleFactor:)]
        pub unsafe fn setSubPixelScaleFactor(&self, sub_pixel_scale_factor: NSUInteger);
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSCNNConvolutionDescriptor`
    unsafe impl MPSCNNSubPixelConvolutionDescriptor {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "MPSCNNKernel",
            feature = "MPSCNNNeuron",
            feature = "MPSKernel"
        ))]
        #[deprecated]
        #[method_id(@__retain_semantics Other cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:neuronFilter:)]
        pub unsafe fn cnnConvolutionDescriptorWithKernelWidth_kernelHeight_inputFeatureChannels_outputFeatureChannels_neuronFilter(
            kernel_width: NSUInteger,
            kernel_height: NSUInteger,
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
            neuron_filter: Option<&MPSCNNNeuron>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:)]
        pub unsafe fn cnnConvolutionDescriptorWithKernelWidth_kernelHeight_inputFeatureChannels_outputFeatureChannels(
            kernel_width: NSUInteger,
            kernel_height: NSUInteger,
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSCNNSubPixelConvolutionDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnndepthwiseconvolutiondescriptor?language=objc)
    #[unsafe(super(MPSCNNConvolutionDescriptor, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSCNNDepthWiseConvolutionDescriptor;
);

unsafe impl NSCoding for MPSCNNDepthWiseConvolutionDescriptor {}

unsafe impl NSCopying for MPSCNNDepthWiseConvolutionDescriptor {}

unsafe impl CopyingHelper for MPSCNNDepthWiseConvolutionDescriptor {
    type Result = Self;
}

unsafe impl NSObjectProtocol for MPSCNNDepthWiseConvolutionDescriptor {}

unsafe impl NSSecureCoding for MPSCNNDepthWiseConvolutionDescriptor {}

extern_methods!(
    unsafe impl MPSCNNDepthWiseConvolutionDescriptor {
        #[method(channelMultiplier)]
        pub unsafe fn channelMultiplier(&self) -> NSUInteger;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSCNNConvolutionDescriptor`
    unsafe impl MPSCNNDepthWiseConvolutionDescriptor {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "MPSCNNKernel",
            feature = "MPSCNNNeuron",
            feature = "MPSKernel"
        ))]
        #[deprecated]
        #[method_id(@__retain_semantics Other cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:neuronFilter:)]
        pub unsafe fn cnnConvolutionDescriptorWithKernelWidth_kernelHeight_inputFeatureChannels_outputFeatureChannels_neuronFilter(
            kernel_width: NSUInteger,
            kernel_height: NSUInteger,
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
            neuron_filter: Option<&MPSCNNNeuron>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:)]
        pub unsafe fn cnnConvolutionDescriptorWithKernelWidth_kernelHeight_inputFeatureChannels_outputFeatureChannels(
            kernel_width: NSUInteger,
            kernel_height: NSUInteger,
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSCNNDepthWiseConvolutionDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutionweightslayout?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSCNNConvolutionWeightsLayout(pub u32);
impl MPSCNNConvolutionWeightsLayout {
    #[doc(alias = "MPSCNNConvolutionWeightsLayoutOHWI")]
    pub const OHWI: Self = Self(0);
}

unsafe impl Encode for MPSCNNConvolutionWeightsLayout {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for MPSCNNConvolutionWeightsLayout {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnweightsquantizationtype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSCNNWeightsQuantizationType(pub u32);
impl MPSCNNWeightsQuantizationType {
    #[doc(alias = "MPSCNNWeightsQuantizationTypeNone")]
    pub const None: Self = Self(0);
    #[doc(alias = "MPSCNNWeightsQuantizationTypeLinear")]
    pub const Linear: Self = Self(1);
    #[doc(alias = "MPSCNNWeightsQuantizationTypeLookupTable")]
    pub const LookupTable: Self = Self(2);
}

unsafe impl Encode for MPSCNNWeightsQuantizationType {
    const ENCODING: Encoding = u32::ENCODING;
}

unsafe impl RefEncode for MPSCNNWeightsQuantizationType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiongradientstate?language=objc)
    #[unsafe(super(MPSNNGradientState, MPSState, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    pub struct MPSCNNConvolutionGradientState;
);

#[cfg(all(
    feature = "MPSNNGradientState",
    feature = "MPSNeuralNetworkTypes",
    feature = "MPSState"
))]
unsafe impl MPSImageSizeEncodingState for MPSCNNConvolutionGradientState {}

#[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
unsafe impl NSObjectProtocol for MPSCNNConvolutionGradientState {}

extern_methods!(
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    unsafe impl MPSCNNConvolutionGradientState {
        #[method_id(@__retain_semantics Other gradientForWeights)]
        pub unsafe fn gradientForWeights(&self) -> Retained<ProtocolObject<dyn MTLBuffer>>;

        #[method_id(@__retain_semantics Other gradientForBiases)]
        pub unsafe fn gradientForBiases(&self) -> Retained<ProtocolObject<dyn MTLBuffer>>;

        #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
        #[method_id(@__retain_semantics Other convolution)]
        pub unsafe fn convolution(&self) -> Retained<MPSCNNConvolution>;

        #[method(gradientForWeightsLayout)]
        pub unsafe fn gradientForWeightsLayout(&self) -> MPSCNNConvolutionWeightsLayout;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSState`
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    unsafe impl MPSCNNConvolutionGradientState {
        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:bufferSize:)]
        pub unsafe fn temporaryStateWithCommandBuffer_bufferSize(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryStateWithCommandBuffer_textureDescriptor(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:)]
        pub unsafe fn temporaryStateWithCommandBuffer(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:bufferSize:)]
        pub unsafe fn initWithDevice_bufferSize(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:textureDescriptor:)]
        pub unsafe fn initWithDevice_textureDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResource:)]
        pub unsafe fn initWithResource(
            this: Allocated<Self>,
            resource: Option<&ProtocolObject<dyn MTLResource>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:resourceList:)]
        pub unsafe fn initWithDevice_resourceList(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:resourceList:)]
        pub unsafe fn temporaryStateWithCommandBuffer_resourceList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResources:)]
        pub unsafe fn initWithResources(
            this: Allocated<Self>,
            resources: Option<&NSArray<ProtocolObject<dyn MTLResource>>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    unsafe impl MPSCNNConvolutionGradientState {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiongradientstatebatch?language=objc)
#[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
pub type MPSCNNConvolutionGradientStateBatch = NSArray<MPSCNNConvolutionGradientState>;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiontransposegradientstate?language=objc)
    #[unsafe(super(MPSCNNConvolutionGradientState, MPSNNGradientState, MPSState, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    pub struct MPSCNNConvolutionTransposeGradientState;
);

#[cfg(all(
    feature = "MPSNNGradientState",
    feature = "MPSNeuralNetworkTypes",
    feature = "MPSState"
))]
unsafe impl MPSImageSizeEncodingState for MPSCNNConvolutionTransposeGradientState {}

#[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
unsafe impl NSObjectProtocol for MPSCNNConvolutionTransposeGradientState {}

extern_methods!(
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    unsafe impl MPSCNNConvolutionTransposeGradientState {
        #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
        #[method_id(@__retain_semantics Other convolutionTranspose)]
        pub unsafe fn convolutionTranspose(&self) -> Retained<MPSCNNConvolutionTranspose>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSState`
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    unsafe impl MPSCNNConvolutionTransposeGradientState {
        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:bufferSize:)]
        pub unsafe fn temporaryStateWithCommandBuffer_bufferSize(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryStateWithCommandBuffer_textureDescriptor(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:)]
        pub unsafe fn temporaryStateWithCommandBuffer(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:bufferSize:)]
        pub unsafe fn initWithDevice_bufferSize(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:textureDescriptor:)]
        pub unsafe fn initWithDevice_textureDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResource:)]
        pub unsafe fn initWithResource(
            this: Allocated<Self>,
            resource: Option<&ProtocolObject<dyn MTLResource>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:resourceList:)]
        pub unsafe fn initWithDevice_resourceList(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:resourceList:)]
        pub unsafe fn temporaryStateWithCommandBuffer_resourceList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResources:)]
        pub unsafe fn initWithResources(
            this: Allocated<Self>,
            resources: Option<&NSArray<ProtocolObject<dyn MTLResource>>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
    unsafe impl MPSCNNConvolutionTransposeGradientState {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiontransposegradientstatebatch?language=objc)
#[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
pub type MPSCNNConvolutionTransposeGradientStateBatch =
    NSArray<MPSCNNConvolutionTransposeGradientState>;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutionweightsandbiasesstate?language=objc)
    #[unsafe(super(MPSState, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSState")]
    pub struct MPSCNNConvolutionWeightsAndBiasesState;
);

#[cfg(feature = "MPSState")]
unsafe impl NSObjectProtocol for MPSCNNConvolutionWeightsAndBiasesState {}

extern_methods!(
    #[cfg(feature = "MPSState")]
    unsafe impl MPSCNNConvolutionWeightsAndBiasesState {
        #[method_id(@__retain_semantics Other weights)]
        pub unsafe fn weights(&self) -> Retained<ProtocolObject<dyn MTLBuffer>>;

        #[method_id(@__retain_semantics Other biases)]
        pub unsafe fn biases(&self) -> Option<Retained<ProtocolObject<dyn MTLBuffer>>>;

        #[method(weightsOffset)]
        pub unsafe fn weightsOffset(&self) -> NSUInteger;

        #[method(biasesOffset)]
        pub unsafe fn biasesOffset(&self) -> NSUInteger;

        #[method_id(@__retain_semantics Init initWithWeights:biases:)]
        pub unsafe fn initWithWeights_biases(
            this: Allocated<Self>,
            weights: &ProtocolObject<dyn MTLBuffer>,
            biases: Option<&ProtocolObject<dyn MTLBuffer>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:cnnConvolutionDescriptor:)]
        pub unsafe fn initWithDevice_cnnConvolutionDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MPSCNNConvolutionDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryCNNConvolutionWeightsAndBiasesStateWithCommandBuffer:cnnConvolutionDescriptor:)]
        pub unsafe fn temporaryCNNConvolutionWeightsAndBiasesStateWithCommandBuffer_cnnConvolutionDescriptor(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MPSCNNConvolutionDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithWeights:weightsOffset:biases:biasesOffset:cnnConvolutionDescriptor:)]
        pub unsafe fn initWithWeights_weightsOffset_biases_biasesOffset_cnnConvolutionDescriptor(
            this: Allocated<Self>,
            weights: &ProtocolObject<dyn MTLBuffer>,
            weights_offset: NSUInteger,
            biases: Option<&ProtocolObject<dyn MTLBuffer>>,
            biases_offset: NSUInteger,
            descriptor: &MPSCNNConvolutionDescriptor,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSState`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSCNNConvolutionWeightsAndBiasesState {
        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:bufferSize:)]
        pub unsafe fn temporaryStateWithCommandBuffer_bufferSize(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryStateWithCommandBuffer_textureDescriptor(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:)]
        pub unsafe fn temporaryStateWithCommandBuffer(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:bufferSize:)]
        pub unsafe fn initWithDevice_bufferSize(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:textureDescriptor:)]
        pub unsafe fn initWithDevice_textureDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResource:)]
        pub unsafe fn initWithResource(
            this: Allocated<Self>,
            resource: Option<&ProtocolObject<dyn MTLResource>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:resourceList:)]
        pub unsafe fn initWithDevice_resourceList(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:resourceList:)]
        pub unsafe fn temporaryStateWithCommandBuffer_resourceList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResources:)]
        pub unsafe fn initWithResources(
            this: Allocated<Self>,
            resources: Option<&NSArray<ProtocolObject<dyn MTLResource>>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSCNNConvolutionWeightsAndBiasesState {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiondatasource?language=objc)
    pub unsafe trait MPSCNNConvolutionDataSource: NSCopying + NSObjectProtocol {
        #[cfg(feature = "MPSCoreTypes")]
        #[method(dataType)]
        unsafe fn dataType(&self) -> MPSDataType;

        #[method_id(@__retain_semantics Other descriptor)]
        unsafe fn descriptor(&self) -> Retained<MPSCNNConvolutionDescriptor>;

        #[method(weights)]
        unsafe fn weights(&self) -> NonNull<c_void>;

        #[method(biasTerms)]
        unsafe fn biasTerms(&self) -> *mut c_float;

        #[method(load)]
        unsafe fn load(&self) -> bool;

        #[method(purge)]
        unsafe fn purge(&self);

        #[method_id(@__retain_semantics Other label)]
        unsafe fn label(&self) -> Option<Retained<NSString>>;

        #[optional]
        #[method(lookupTableForUInt8Kernel)]
        unsafe fn lookupTableForUInt8Kernel(&self) -> NonNull<c_float>;

        #[optional]
        #[method(weightsQuantizationType)]
        unsafe fn weightsQuantizationType(&self) -> MPSCNNWeightsQuantizationType;

        #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
        #[optional]
        #[method_id(@__retain_semantics Other updateWithCommandBuffer:gradientState:sourceState:)]
        unsafe fn updateWithCommandBuffer_gradientState_sourceState(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            gradient_state: &MPSCNNConvolutionGradientState,
            source_state: &MPSCNNConvolutionWeightsAndBiasesState,
        ) -> Option<Retained<MPSCNNConvolutionWeightsAndBiasesState>>;

        #[cfg(all(feature = "MPSNNGradientState", feature = "MPSState"))]
        #[optional]
        #[method(updateWithGradientState:sourceState:)]
        unsafe fn updateWithGradientState_sourceState(
            &self,
            gradient_state: &MPSCNNConvolutionGradientState,
            source_state: &MPSCNNConvolutionWeightsAndBiasesState,
        ) -> bool;

        #[optional]
        #[method_id(@__retain_semantics Copy copyWithZone:device:)]
        unsafe fn copyWithZone_device(
            &self,
            zone: *mut NSZone,
            device: Option<&ProtocolObject<dyn MTLDevice>>,
        ) -> Retained<Self>;

        #[optional]
        #[method(weightsLayout)]
        unsafe fn weightsLayout(&self) -> MPSCNNConvolutionWeightsLayout;

        #[cfg(feature = "MPSCoreTypes")]
        #[optional]
        #[method(kernelWeightsDataType)]
        unsafe fn kernelWeightsDataType(&self) -> MPSDataType;
    }

    unsafe impl ProtocolType for dyn MPSCNNConvolutionDataSource {}
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolution?language=objc)
    #[unsafe(super(MPSCNNKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNConvolution;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNConvolution {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNConvolution {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNConvolution {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNConvolution {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNConvolution {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolution {
        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[method(groups)]
        pub unsafe fn groups(&self) -> NSUInteger;

        #[method_id(@__retain_semantics Other dataSource)]
        pub unsafe fn dataSource(
            &self,
        ) -> Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>;

        #[method(subPixelScaleFactor)]
        pub unsafe fn subPixelScaleFactor(&self) -> NSUInteger;

        #[cfg(feature = "MPSCNNNeuron")]
        #[deprecated]
        #[method_id(@__retain_semantics Other neuron)]
        pub unsafe fn neuron(&self) -> Option<Retained<MPSCNNNeuron>>;

        #[cfg(feature = "MPSCNNNeuronType")]
        #[deprecated]
        #[method(neuronType)]
        pub unsafe fn neuronType(&self) -> MPSCNNNeuronType;

        #[deprecated]
        #[method(neuronParameterA)]
        pub unsafe fn neuronParameterA(&self) -> c_float;

        #[deprecated]
        #[method(neuronParameterB)]
        pub unsafe fn neuronParameterB(&self) -> c_float;

        #[deprecated]
        #[method(neuronParameterC)]
        pub unsafe fn neuronParameterC(&self) -> c_float;

        #[cfg(feature = "MPSCNNNeuron")]
        #[method_id(@__retain_semantics Other fusedNeuronDescriptor)]
        pub unsafe fn fusedNeuronDescriptor(&self) -> Option<Retained<MPSNNNeuronDescriptor>>;

        #[method(channelMultiplier)]
        pub unsafe fn channelMultiplier(&self) -> NSUInteger;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method(accumulatorPrecisionOption)]
        pub unsafe fn accumulatorPrecisionOption(
            &self,
        ) -> MPSNNConvolutionAccumulatorPrecisionOption;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method(setAccumulatorPrecisionOption:)]
        pub unsafe fn setAccumulatorPrecisionOption(
            &self,
            accumulator_precision_option: MPSNNConvolutionAccumulatorPrecisionOption,
        );

        #[method_id(@__retain_semantics Init initWithDevice:weights:)]
        pub unsafe fn initWithDevice_weights(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            weights: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Init initWithDevice:convolutionDescriptor:kernelWeights:biasTerms:flags:)]
        pub unsafe fn initWithDevice_convolutionDescriptor_kernelWeights_biasTerms_flags(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            convolution_descriptor: &MPSCNNConvolutionDescriptor,
            kernel_weights: NonNull<c_float>,
            bias_terms: *mut c_float,
            flags: MPSCNNConvolutionFlags,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other resultStateForSourceImage:sourceStates:destinationImage:)]
        pub unsafe fn resultStateForSourceImage_sourceStates_destinationImage(
            &self,
            source_image: &MPSImage,
            source_states: Option<&NSArray<MPSState>>,
            destination_image: &MPSImage,
        ) -> Option<Retained<MPSCNNConvolutionGradientState>>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNDArray",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other resultStateBatchForSourceImage:sourceStates:destinationImage:)]
        pub unsafe fn resultStateBatchForSourceImage_sourceStates_destinationImage(
            &self,
            source_image: &MPSImageBatch,
            source_states: Option<&NSArray<MPSStateBatch>>,
            destination_image: &MPSImageBatch,
        ) -> Option<Retained<MPSCNNConvolutionGradientStateBatch>>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other temporaryResultStateForCommandBuffer:sourceImage:sourceStates:destinationImage:)]
        pub unsafe fn temporaryResultStateForCommandBuffer_sourceImage_sourceStates_destinationImage(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImage,
            source_states: Option<&NSArray<MPSState>>,
            destination_image: &MPSImage,
        ) -> Option<Retained<MPSCNNConvolutionGradientState>>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNDArray",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other temporaryResultStateBatchForCommandBuffer:sourceImage:sourceStates:destinationImage:)]
        pub unsafe fn temporaryResultStateBatchForCommandBuffer_sourceImage_sourceStates_destinationImage(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImageBatch,
            source_states: Option<&NSArray<MPSStateBatch>>,
            destination_image: &MPSImageBatch,
        ) -> Option<Retained<MPSCNNConvolutionGradientStateBatch>>;

        #[method(reloadWeightsAndBiasesFromDataSource)]
        pub unsafe fn reloadWeightsAndBiasesFromDataSource(&self);

        #[deprecated]
        #[method(reloadWeightsAndBiasesWithDataSource:)]
        pub unsafe fn reloadWeightsAndBiasesWithDataSource(
            &self,
            data_source: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
        );

        #[cfg(feature = "MPSState")]
        #[method(reloadWeightsAndBiasesWithCommandBuffer:state:)]
        pub unsafe fn reloadWeightsAndBiasesWithCommandBuffer_state(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            state: &MPSCNNConvolutionWeightsAndBiasesState,
        );

        #[cfg(feature = "MPSState")]
        #[method_id(@__retain_semantics Other exportWeightsAndBiasesWithCommandBuffer:resultStateCanBeTemporary:)]
        pub unsafe fn exportWeightsAndBiasesWithCommandBuffer_resultStateCanBeTemporary(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            result_state_can_be_temporary: bool,
        ) -> Retained<MPSCNNConvolutionWeightsAndBiasesState>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolution {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolution {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiongradientoption?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSCNNConvolutionGradientOption(pub NSUInteger);
bitflags::bitflags! {
    impl MPSCNNConvolutionGradientOption: NSUInteger {
        #[doc(alias = "MPSCNNConvolutionGradientOptionGradientWithData")]
        const GradientWithData = 1;
        #[doc(alias = "MPSCNNConvolutionGradientOptionGradientWithWeightsAndBias")]
        const GradientWithWeightsAndBias = 2;
        #[doc(alias = "MPSCNNConvolutionGradientOptionAll")]
        const All = MPSCNNConvolutionGradientOption::GradientWithData.0|MPSCNNConvolutionGradientOption::GradientWithWeightsAndBias.0;
    }
}

unsafe impl Encode for MPSCNNConvolutionGradientOption {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSCNNConvolutionGradientOption {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiongradient?language=objc)
    #[unsafe(super(MPSCNNGradientKernel, MPSCNNBinaryKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNConvolutionGradient;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNConvolutionGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNConvolutionGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNConvolutionGradient {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNConvolutionGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNConvolutionGradient {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionGradient {
        #[method(sourceGradientFeatureChannels)]
        pub unsafe fn sourceGradientFeatureChannels(&self) -> NSUInteger;

        #[method(sourceImageFeatureChannels)]
        pub unsafe fn sourceImageFeatureChannels(&self) -> NSUInteger;

        #[method(groups)]
        pub unsafe fn groups(&self) -> NSUInteger;

        #[method(channelMultiplier)]
        pub unsafe fn channelMultiplier(&self) -> NSUInteger;

        #[method_id(@__retain_semantics Other dataSource)]
        pub unsafe fn dataSource(
            &self,
        ) -> Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>;

        #[method(gradientOption)]
        pub unsafe fn gradientOption(&self) -> MPSCNNConvolutionGradientOption;

        #[method(setGradientOption:)]
        pub unsafe fn setGradientOption(&self, gradient_option: MPSCNNConvolutionGradientOption);

        #[deprecated]
        #[method(serializeWeightsAndBiases)]
        pub unsafe fn serializeWeightsAndBiases(&self) -> bool;

        #[deprecated]
        #[method(setSerializeWeightsAndBiases:)]
        pub unsafe fn setSerializeWeightsAndBiases(&self, serialize_weights_and_biases: bool);

        #[method_id(@__retain_semantics Init initWithDevice:weights:)]
        pub unsafe fn initWithDevice_weights(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            weights: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[method(reloadWeightsAndBiasesFromDataSource)]
        pub unsafe fn reloadWeightsAndBiasesFromDataSource(&self);

        #[cfg(feature = "MPSState")]
        #[method(reloadWeightsAndBiasesWithCommandBuffer:state:)]
        pub unsafe fn reloadWeightsAndBiasesWithCommandBuffer_state(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            state: &MPSCNNConvolutionWeightsAndBiasesState,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionGradient {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionGradient {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnfullyconnected?language=objc)
    #[unsafe(super(MPSCNNConvolution, MPSCNNKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNFullyConnected;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNFullyConnected {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNFullyConnected {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNFullyConnected {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNFullyConnected {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNFullyConnected {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNFullyConnected {
        #[method_id(@__retain_semantics Init initWithDevice:weights:)]
        pub unsafe fn initWithDevice_weights(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            weights: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[deprecated]
        #[method_id(@__retain_semantics Init initWithDevice:convolutionDescriptor:kernelWeights:biasTerms:flags:)]
        pub unsafe fn initWithDevice_convolutionDescriptor_kernelWeights_biasTerms_flags(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            convolution_descriptor: &MPSCNNConvolutionDescriptor,
            kernel_weights: NonNull<c_float>,
            bias_terms: *mut c_float,
            flags: MPSCNNConvolutionFlags,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNFullyConnected {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNFullyConnected {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnfullyconnectedgradient?language=objc)
    #[unsafe(super(
        MPSCNNConvolutionGradient,
        MPSCNNGradientKernel,
        MPSCNNBinaryKernel,
        MPSKernel,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNFullyConnectedGradient;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNFullyConnectedGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNFullyConnectedGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNFullyConnectedGradient {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNFullyConnectedGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNFullyConnectedGradient {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNFullyConnectedGradient {
        #[method_id(@__retain_semantics Init initWithDevice:weights:)]
        pub unsafe fn initWithDevice_weights(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            weights: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNFullyConnectedGradient {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNFullyConnectedGradient {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiontranspose?language=objc)
    #[unsafe(super(MPSCNNKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNConvolutionTranspose;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNConvolutionTranspose {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNConvolutionTranspose {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNConvolutionTranspose {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNConvolutionTranspose {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNConvolutionTranspose {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionTranspose {
        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[method(kernelOffsetX)]
        pub unsafe fn kernelOffsetX(&self) -> NSInteger;

        #[method(setKernelOffsetX:)]
        pub unsafe fn setKernelOffsetX(&self, kernel_offset_x: NSInteger);

        #[method(kernelOffsetY)]
        pub unsafe fn kernelOffsetY(&self) -> NSInteger;

        #[method(setKernelOffsetY:)]
        pub unsafe fn setKernelOffsetY(&self, kernel_offset_y: NSInteger);

        #[method(groups)]
        pub unsafe fn groups(&self) -> NSUInteger;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method(accumulatorPrecisionOption)]
        pub unsafe fn accumulatorPrecisionOption(
            &self,
        ) -> MPSNNConvolutionAccumulatorPrecisionOption;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method(setAccumulatorPrecisionOption:)]
        pub unsafe fn setAccumulatorPrecisionOption(
            &self,
            accumulator_precision_option: MPSNNConvolutionAccumulatorPrecisionOption,
        );

        #[method_id(@__retain_semantics Other dataSource)]
        pub unsafe fn dataSource(
            &self,
        ) -> Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>;

        #[method_id(@__retain_semantics Init initWithDevice:weights:)]
        pub unsafe fn initWithDevice_weights(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            weights: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other encodeToCommandBuffer:sourceImage:convolutionGradientState:)]
        pub unsafe fn encodeToCommandBuffer_sourceImage_convolutionGradientState(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImage,
            convolution_gradient_state: Option<&MPSCNNConvolutionGradientState>,
        ) -> Retained<MPSImage>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNDArray",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other encodeBatchToCommandBuffer:sourceImages:convolutionGradientStates:)]
        pub unsafe fn encodeBatchToCommandBuffer_sourceImages_convolutionGradientStates(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImageBatch,
            convolution_gradient_state: Option<&MPSCNNConvolutionGradientStateBatch>,
        ) -> Retained<MPSImageBatch>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method(encodeToCommandBuffer:sourceImage:convolutionGradientState:destinationImage:)]
        pub unsafe fn encodeToCommandBuffer_sourceImage_convolutionGradientState_destinationImage(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImage,
            convolution_gradient_state: Option<&MPSCNNConvolutionGradientState>,
            destination_image: &MPSImage,
        );

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNDArray",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method(encodeBatchToCommandBuffer:sourceImages:convolutionGradientStates:destinationImages:)]
        pub unsafe fn encodeBatchToCommandBuffer_sourceImages_convolutionGradientStates_destinationImages(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImageBatch,
            convolution_gradient_state: Option<&MPSCNNConvolutionGradientStateBatch>,
            destination_image: &MPSImageBatch,
        );

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other resultStateForSourceImage:sourceStates:destinationImage:)]
        pub unsafe fn resultStateForSourceImage_sourceStates_destinationImage(
            &self,
            source_image: &MPSImage,
            source_states: Option<&NSArray<MPSCNNConvolutionGradientState>>,
            destination_image: &MPSImage,
        ) -> Option<Retained<MPSCNNConvolutionTransposeGradientState>>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNDArray",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other resultStateBatchForSourceImage:sourceStates:destinationImage:)]
        pub unsafe fn resultStateBatchForSourceImage_sourceStates_destinationImage(
            &self,
            source_image: &MPSImageBatch,
            source_states: Option<&NSArray<MPSCNNConvolutionGradientStateBatch>>,
            destination_image: &MPSImageBatch,
        ) -> Option<Retained<MPSCNNConvolutionTransposeGradientStateBatch>>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other temporaryResultStateForCommandBuffer:sourceImage:sourceStates:destinationImage:)]
        pub unsafe fn temporaryResultStateForCommandBuffer_sourceImage_sourceStates_destinationImage(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImage,
            source_states: Option<&NSArray<MPSCNNConvolutionGradientState>>,
            destination_image: &MPSImage,
        ) -> Option<Retained<MPSCNNConvolutionTransposeGradientState>>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNDArray",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other temporaryResultStateBatchForCommandBuffer:sourceImage:sourceStates:destinationImage:)]
        pub unsafe fn temporaryResultStateBatchForCommandBuffer_sourceImage_sourceStates_destinationImage(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImageBatch,
            source_states: Option<&NSArray<MPSCNNConvolutionGradientStateBatch>>,
            destination_image: &MPSImageBatch,
        ) -> Option<Retained<MPSCNNConvolutionTransposeGradientStateBatch>>;

        #[method(reloadWeightsAndBiasesFromDataSource)]
        pub unsafe fn reloadWeightsAndBiasesFromDataSource(&self);

        #[cfg(feature = "MPSState")]
        #[method(reloadWeightsAndBiasesWithCommandBuffer:state:)]
        pub unsafe fn reloadWeightsAndBiasesWithCommandBuffer_state(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            state: &MPSCNNConvolutionWeightsAndBiasesState,
        );

        #[cfg(feature = "MPSState")]
        #[method_id(@__retain_semantics Other exportWeightsAndBiasesWithCommandBuffer:resultStateCanBeTemporary:)]
        pub unsafe fn exportWeightsAndBiasesWithCommandBuffer_resultStateCanBeTemporary(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            result_state_can_be_temporary: bool,
        ) -> Retained<MPSCNNConvolutionWeightsAndBiasesState>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other encodeToCommandBuffer:sourceImage:convolutionGradientState:destinationState:destinationStateIsTemporary:)]
        pub unsafe fn encodeToCommandBuffer_sourceImage_convolutionGradientState_destinationState_destinationStateIsTemporary(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_image: &MPSImage,
            convolution_gradient_state: Option<&MPSCNNConvolutionGradientState>,
            out_state: &mut Option<Retained<MPSCNNConvolutionTransposeGradientState>>,
            is_temporary: bool,
        ) -> Retained<MPSImage>;

        #[cfg(all(
            feature = "MPSImage",
            feature = "MPSNDArray",
            feature = "MPSNNGradientState",
            feature = "MPSState"
        ))]
        #[method_id(@__retain_semantics Other encodeBatchToCommandBuffer:sourceImages:convolutionGradientStates:destinationStates:destinationStateIsTemporary:)]
        pub unsafe fn encodeBatchToCommandBuffer_sourceImages_convolutionGradientStates_destinationStates_destinationStateIsTemporary(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_images: &MPSImageBatch,
            convolution_gradient_states: Option<&MPSCNNConvolutionGradientStateBatch>,
            out_states: &mut Option<Retained<MPSCNNConvolutionTransposeGradientStateBatch>>,
            is_temporary: bool,
        ) -> Retained<MPSImageBatch>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionTranspose {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionTranspose {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiontransposegradient?language=objc)
    #[unsafe(super(MPSCNNGradientKernel, MPSCNNBinaryKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNConvolutionTransposeGradient;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNConvolutionTransposeGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNConvolutionTransposeGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNConvolutionTransposeGradient {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNConvolutionTransposeGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNConvolutionTransposeGradient {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionTransposeGradient {
        #[method(sourceGradientFeatureChannels)]
        pub unsafe fn sourceGradientFeatureChannels(&self) -> NSUInteger;

        #[method(sourceImageFeatureChannels)]
        pub unsafe fn sourceImageFeatureChannels(&self) -> NSUInteger;

        #[method(groups)]
        pub unsafe fn groups(&self) -> NSUInteger;

        #[method_id(@__retain_semantics Other dataSource)]
        pub unsafe fn dataSource(
            &self,
        ) -> Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>;

        #[method(gradientOption)]
        pub unsafe fn gradientOption(&self) -> MPSCNNConvolutionGradientOption;

        #[method(setGradientOption:)]
        pub unsafe fn setGradientOption(&self, gradient_option: MPSCNNConvolutionGradientOption);

        #[method_id(@__retain_semantics Init initWithDevice:weights:)]
        pub unsafe fn initWithDevice_weights(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            weights: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[method(reloadWeightsAndBiasesFromDataSource)]
        pub unsafe fn reloadWeightsAndBiasesFromDataSource(&self);

        #[cfg(feature = "MPSState")]
        #[method(reloadWeightsAndBiasesWithCommandBuffer:state:)]
        pub unsafe fn reloadWeightsAndBiasesWithCommandBuffer_state(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            state: &MPSCNNConvolutionWeightsAndBiasesState,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionTransposeGradient {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNConvolutionTransposeGradient {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnbinaryconvolution?language=objc)
    #[unsafe(super(MPSCNNKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNBinaryConvolution;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNBinaryConvolution {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNBinaryConvolution {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNBinaryConvolution {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNBinaryConvolution {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNBinaryConvolution {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNBinaryConvolution {
        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method_id(@__retain_semantics Init initWithDevice:convolutionData:scaleValue:type:flags:)]
        pub unsafe fn initWithDevice_convolutionData_scaleValue_type_flags(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            convolution_data: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
            scale_value: c_float,
            r#type: MPSCNNBinaryConvolutionType,
            flags: MPSCNNBinaryConvolutionFlags,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method_id(@__retain_semantics Init initWithDevice:convolutionData:outputBiasTerms:outputScaleTerms:inputBiasTerms:inputScaleTerms:type:flags:)]
        pub unsafe fn initWithDevice_convolutionData_outputBiasTerms_outputScaleTerms_inputBiasTerms_inputScaleTerms_type_flags(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            convolution_data: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
            output_bias_terms: *mut c_float,
            output_scale_terms: *mut c_float,
            input_bias_terms: *mut c_float,
            input_scale_terms: *mut c_float,
            r#type: MPSCNNBinaryConvolutionType,
            flags: MPSCNNBinaryConvolutionFlags,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNBinaryConvolution {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNBinaryConvolution {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpscnnbinaryfullyconnected?language=objc)
    #[unsafe(super(MPSCNNBinaryConvolution, MPSCNNKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSCNNBinaryFullyConnected;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSCNNBinaryFullyConnected {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSCNNBinaryFullyConnected {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSCNNBinaryFullyConnected {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSCNNBinaryFullyConnected {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSCNNBinaryFullyConnected {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNBinaryFullyConnected {
        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method_id(@__retain_semantics Init initWithDevice:convolutionData:scaleValue:type:flags:)]
        pub unsafe fn initWithDevice_convolutionData_scaleValue_type_flags(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            convolution_data: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
            scale_value: c_float,
            r#type: MPSCNNBinaryConvolutionType,
            flags: MPSCNNBinaryConvolutionFlags,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSNeuralNetworkTypes")]
        #[method_id(@__retain_semantics Init initWithDevice:convolutionData:outputBiasTerms:outputScaleTerms:inputBiasTerms:inputScaleTerms:type:flags:)]
        pub unsafe fn initWithDevice_convolutionData_outputBiasTerms_outputScaleTerms_inputBiasTerms_inputScaleTerms_type_flags(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            convolution_data: &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
            output_bias_terms: *mut c_float,
            output_scale_terms: *mut c_float,
            input_bias_terms: *mut c_float,
            input_scale_terms: *mut c_float,
            r#type: MPSCNNBinaryConvolutionType,
            flags: MPSCNNBinaryConvolutionFlags,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNBinaryFullyConnected {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSCNNBinaryFullyConnected {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsnngrammatrixcalculation?language=objc)
    #[unsafe(super(MPSCNNKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSNNGramMatrixCalculation;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSNNGramMatrixCalculation {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSNNGramMatrixCalculation {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSNNGramMatrixCalculation {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSNNGramMatrixCalculation {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSNNGramMatrixCalculation {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSNNGramMatrixCalculation {
        #[method(alpha)]
        pub unsafe fn alpha(&self) -> c_float;

        #[method(setAlpha:)]
        pub unsafe fn setAlpha(&self, alpha: c_float);

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:alpha:)]
        pub unsafe fn initWithDevice_alpha(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            alpha: c_float,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSNNGramMatrixCalculation {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSNNGramMatrixCalculation {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsnngrammatrixcalculationgradient?language=objc)
    #[unsafe(super(MPSCNNGradientKernel, MPSCNNBinaryKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSNNGramMatrixCalculationGradient;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSNNGramMatrixCalculationGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSNNGramMatrixCalculationGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSNNGramMatrixCalculationGradient {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSNNGramMatrixCalculationGradient {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSNNGramMatrixCalculationGradient {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSNNGramMatrixCalculationGradient {
        #[method(alpha)]
        pub unsafe fn alpha(&self) -> c_float;

        #[method(setAlpha:)]
        pub unsafe fn setAlpha(&self, alpha: c_float);

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:alpha:)]
        pub unsafe fn initWithDevice_alpha(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            alpha: c_float,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSNNGramMatrixCalculationGradient {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSNNGramMatrixCalculationGradient {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
