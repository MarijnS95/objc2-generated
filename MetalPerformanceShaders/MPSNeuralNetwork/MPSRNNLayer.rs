//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnsequencedirection?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSRNNSequenceDirection(pub NSUInteger);
impl MPSRNNSequenceDirection {
    #[doc(alias = "MPSRNNSequenceDirectionForward")]
    pub const Forward: Self = Self(0);
    #[doc(alias = "MPSRNNSequenceDirectionBackward")]
    pub const Backward: Self = Self(1);
}

unsafe impl Encode for MPSRNNSequenceDirection {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSRNNSequenceDirection {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnbidirectionalcombinemode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSRNNBidirectionalCombineMode(pub NSUInteger);
impl MPSRNNBidirectionalCombineMode {
    #[doc(alias = "MPSRNNBidirectionalCombineModeNone")]
    pub const None: Self = Self(0);
    #[doc(alias = "MPSRNNBidirectionalCombineModeAdd")]
    pub const Add: Self = Self(1);
    #[doc(alias = "MPSRNNBidirectionalCombineModeConcatenate")]
    pub const Concatenate: Self = Self(2);
}

unsafe impl Encode for MPSRNNBidirectionalCombineMode {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSRNNBidirectionalCombineMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnndescriptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSRNNDescriptor;
);

unsafe impl NSObjectProtocol for MPSRNNDescriptor {}

extern_methods!(
    unsafe impl MPSRNNDescriptor {
        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(setInputFeatureChannels:)]
        pub unsafe fn setInputFeatureChannels(&self, input_feature_channels: NSUInteger);

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[method(setOutputFeatureChannels:)]
        pub unsafe fn setOutputFeatureChannels(&self, output_feature_channels: NSUInteger);

        #[method(useLayerInputUnitTransformMode)]
        pub unsafe fn useLayerInputUnitTransformMode(&self) -> bool;

        #[method(setUseLayerInputUnitTransformMode:)]
        pub unsafe fn setUseLayerInputUnitTransformMode(
            &self,
            use_layer_input_unit_transform_mode: bool,
        );

        #[method(useFloat32Weights)]
        pub unsafe fn useFloat32Weights(&self) -> bool;

        #[method(setUseFloat32Weights:)]
        pub unsafe fn setUseFloat32Weights(&self, use_float32_weights: bool);

        #[method(layerSequenceDirection)]
        pub unsafe fn layerSequenceDirection(&self) -> MPSRNNSequenceDirection;

        #[method(setLayerSequenceDirection:)]
        pub unsafe fn setLayerSequenceDirection(
            &self,
            layer_sequence_direction: MPSRNNSequenceDirection,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSRNNDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnsinglegatedescriptor?language=objc)
    #[unsafe(super(MPSRNNDescriptor, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSRNNSingleGateDescriptor;
);

unsafe impl NSObjectProtocol for MPSRNNSingleGateDescriptor {}

extern_methods!(
    unsafe impl MPSRNNSingleGateDescriptor {
        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other inputWeights)]
        pub unsafe fn inputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setInputWeights:)]
        pub unsafe fn setInputWeights(
            &self,
            input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other recurrentWeights)]
        pub unsafe fn recurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setRecurrentWeights:)]
        pub unsafe fn setRecurrentWeights(
            &self,
            recurrent_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[method_id(@__retain_semantics Other createRNNSingleGateDescriptorWithInputFeatureChannels:outputFeatureChannels:)]
        pub unsafe fn createRNNSingleGateDescriptorWithInputFeatureChannels_outputFeatureChannels(
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSRNNSingleGateDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsgrudescriptor?language=objc)
    #[unsafe(super(MPSRNNDescriptor, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSGRUDescriptor;
);

unsafe impl NSObjectProtocol for MPSGRUDescriptor {}

extern_methods!(
    unsafe impl MPSGRUDescriptor {
        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other inputGateInputWeights)]
        pub unsafe fn inputGateInputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setInputGateInputWeights:)]
        pub unsafe fn setInputGateInputWeights(
            &self,
            input_gate_input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other inputGateRecurrentWeights)]
        pub unsafe fn inputGateRecurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setInputGateRecurrentWeights:)]
        pub unsafe fn setInputGateRecurrentWeights(
            &self,
            input_gate_recurrent_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other recurrentGateInputWeights)]
        pub unsafe fn recurrentGateInputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setRecurrentGateInputWeights:)]
        pub unsafe fn setRecurrentGateInputWeights(
            &self,
            recurrent_gate_input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other recurrentGateRecurrentWeights)]
        pub unsafe fn recurrentGateRecurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setRecurrentGateRecurrentWeights:)]
        pub unsafe fn setRecurrentGateRecurrentWeights(
            &self,
            recurrent_gate_recurrent_weights: Option<
                &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
            >,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other outputGateInputWeights)]
        pub unsafe fn outputGateInputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setOutputGateInputWeights:)]
        pub unsafe fn setOutputGateInputWeights(
            &self,
            output_gate_input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other outputGateRecurrentWeights)]
        pub unsafe fn outputGateRecurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setOutputGateRecurrentWeights:)]
        pub unsafe fn setOutputGateRecurrentWeights(
            &self,
            output_gate_recurrent_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other outputGateInputGateWeights)]
        pub unsafe fn outputGateInputGateWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setOutputGateInputGateWeights:)]
        pub unsafe fn setOutputGateInputGateWeights(
            &self,
            output_gate_input_gate_weights: Option<
                &ProtocolObject<dyn MPSCNNConvolutionDataSource>,
            >,
        );

        #[method(gatePnormValue)]
        pub unsafe fn gatePnormValue(&self) -> c_float;

        #[method(setGatePnormValue:)]
        pub unsafe fn setGatePnormValue(&self, gate_pnorm_value: c_float);

        #[method(flipOutputGates)]
        pub unsafe fn flipOutputGates(&self) -> bool;

        #[method(setFlipOutputGates:)]
        pub unsafe fn setFlipOutputGates(&self, flip_output_gates: bool);

        #[method_id(@__retain_semantics Other createGRUDescriptorWithInputFeatureChannels:outputFeatureChannels:)]
        pub unsafe fn createGRUDescriptorWithInputFeatureChannels_outputFeatureChannels(
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSGRUDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpslstmdescriptor?language=objc)
    #[unsafe(super(MPSRNNDescriptor, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSLSTMDescriptor;
);

unsafe impl NSObjectProtocol for MPSLSTMDescriptor {}

extern_methods!(
    unsafe impl MPSLSTMDescriptor {
        #[method(memoryWeightsAreDiagonal)]
        pub unsafe fn memoryWeightsAreDiagonal(&self) -> bool;

        #[method(setMemoryWeightsAreDiagonal:)]
        pub unsafe fn setMemoryWeightsAreDiagonal(&self, memory_weights_are_diagonal: bool);

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other inputGateInputWeights)]
        pub unsafe fn inputGateInputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setInputGateInputWeights:)]
        pub unsafe fn setInputGateInputWeights(
            &self,
            input_gate_input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other inputGateRecurrentWeights)]
        pub unsafe fn inputGateRecurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setInputGateRecurrentWeights:)]
        pub unsafe fn setInputGateRecurrentWeights(
            &self,
            input_gate_recurrent_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other inputGateMemoryWeights)]
        pub unsafe fn inputGateMemoryWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setInputGateMemoryWeights:)]
        pub unsafe fn setInputGateMemoryWeights(
            &self,
            input_gate_memory_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other forgetGateInputWeights)]
        pub unsafe fn forgetGateInputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setForgetGateInputWeights:)]
        pub unsafe fn setForgetGateInputWeights(
            &self,
            forget_gate_input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other forgetGateRecurrentWeights)]
        pub unsafe fn forgetGateRecurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setForgetGateRecurrentWeights:)]
        pub unsafe fn setForgetGateRecurrentWeights(
            &self,
            forget_gate_recurrent_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other forgetGateMemoryWeights)]
        pub unsafe fn forgetGateMemoryWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setForgetGateMemoryWeights:)]
        pub unsafe fn setForgetGateMemoryWeights(
            &self,
            forget_gate_memory_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other outputGateInputWeights)]
        pub unsafe fn outputGateInputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setOutputGateInputWeights:)]
        pub unsafe fn setOutputGateInputWeights(
            &self,
            output_gate_input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other outputGateRecurrentWeights)]
        pub unsafe fn outputGateRecurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setOutputGateRecurrentWeights:)]
        pub unsafe fn setOutputGateRecurrentWeights(
            &self,
            output_gate_recurrent_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other outputGateMemoryWeights)]
        pub unsafe fn outputGateMemoryWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setOutputGateMemoryWeights:)]
        pub unsafe fn setOutputGateMemoryWeights(
            &self,
            output_gate_memory_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other cellGateInputWeights)]
        pub unsafe fn cellGateInputWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setCellGateInputWeights:)]
        pub unsafe fn setCellGateInputWeights(
            &self,
            cell_gate_input_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other cellGateRecurrentWeights)]
        pub unsafe fn cellGateRecurrentWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setCellGateRecurrentWeights:)]
        pub unsafe fn setCellGateRecurrentWeights(
            &self,
            cell_gate_recurrent_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNConvolution")]
        #[method_id(@__retain_semantics Other cellGateMemoryWeights)]
        pub unsafe fn cellGateMemoryWeights(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn MPSCNNConvolutionDataSource>>>;

        #[cfg(feature = "MPSCNNConvolution")]
        #[method(setCellGateMemoryWeights:)]
        pub unsafe fn setCellGateMemoryWeights(
            &self,
            cell_gate_memory_weights: Option<&ProtocolObject<dyn MPSCNNConvolutionDataSource>>,
        );

        #[cfg(feature = "MPSCNNNeuronType")]
        #[method(cellToOutputNeuronType)]
        pub unsafe fn cellToOutputNeuronType(&self) -> MPSCNNNeuronType;

        #[cfg(feature = "MPSCNNNeuronType")]
        #[method(setCellToOutputNeuronType:)]
        pub unsafe fn setCellToOutputNeuronType(
            &self,
            cell_to_output_neuron_type: MPSCNNNeuronType,
        );

        #[method(cellToOutputNeuronParamA)]
        pub unsafe fn cellToOutputNeuronParamA(&self) -> c_float;

        #[method(setCellToOutputNeuronParamA:)]
        pub unsafe fn setCellToOutputNeuronParamA(&self, cell_to_output_neuron_param_a: c_float);

        #[method(cellToOutputNeuronParamB)]
        pub unsafe fn cellToOutputNeuronParamB(&self) -> c_float;

        #[method(setCellToOutputNeuronParamB:)]
        pub unsafe fn setCellToOutputNeuronParamB(&self, cell_to_output_neuron_param_b: c_float);

        #[method(cellToOutputNeuronParamC)]
        pub unsafe fn cellToOutputNeuronParamC(&self) -> c_float;

        #[method(setCellToOutputNeuronParamC:)]
        pub unsafe fn setCellToOutputNeuronParamC(&self, cell_to_output_neuron_param_c: c_float);

        #[method_id(@__retain_semantics Other createLSTMDescriptorWithInputFeatureChannels:outputFeatureChannels:)]
        pub unsafe fn createLSTMDescriptorWithInputFeatureChannels_outputFeatureChannels(
            input_feature_channels: NSUInteger,
            output_feature_channels: NSUInteger,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MPSLSTMDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnrecurrentimagestate?language=objc)
    #[unsafe(super(MPSState, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSState")]
    pub struct MPSRNNRecurrentImageState;
);

#[cfg(feature = "MPSState")]
unsafe impl NSObjectProtocol for MPSRNNRecurrentImageState {}

extern_methods!(
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNRecurrentImageState {
        #[cfg(feature = "MPSImage")]
        #[method_id(@__retain_semantics Other getRecurrentOutputImageForLayerIndex:)]
        pub unsafe fn getRecurrentOutputImageForLayerIndex(
            &self,
            layer_index: NSUInteger,
        ) -> Option<Retained<MPSImage>>;

        #[cfg(feature = "MPSImage")]
        #[method_id(@__retain_semantics Other getMemoryCellImageForLayerIndex:)]
        pub unsafe fn getMemoryCellImageForLayerIndex(
            &self,
            layer_index: NSUInteger,
        ) -> Option<Retained<MPSImage>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSState`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNRecurrentImageState {
        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:bufferSize:)]
        pub unsafe fn temporaryStateWithCommandBuffer_bufferSize(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryStateWithCommandBuffer_textureDescriptor(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:)]
        pub unsafe fn temporaryStateWithCommandBuffer(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:bufferSize:)]
        pub unsafe fn initWithDevice_bufferSize(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:textureDescriptor:)]
        pub unsafe fn initWithDevice_textureDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResource:)]
        pub unsafe fn initWithResource(
            this: Allocated<Self>,
            resource: Option<&ProtocolObject<dyn MTLResource>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:resourceList:)]
        pub unsafe fn initWithDevice_resourceList(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:resourceList:)]
        pub unsafe fn temporaryStateWithCommandBuffer_resourceList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResources:)]
        pub unsafe fn initWithResources(
            this: Allocated<Self>,
            resources: Option<&NSArray<ProtocolObject<dyn MTLResource>>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNRecurrentImageState {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnimageinferencelayer?language=objc)
    #[unsafe(super(MPSCNNKernel, MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    pub struct MPSRNNImageInferenceLayer;
);

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCoding for MPSRNNImageInferenceLayer {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSCopying for MPSRNNImageInferenceLayer {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl CopyingHelper for MPSRNNImageInferenceLayer {
    type Result = Self;
}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSObjectProtocol for MPSRNNImageInferenceLayer {}

#[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
unsafe impl NSSecureCoding for MPSRNNImageInferenceLayer {}

extern_methods!(
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSRNNImageInferenceLayer {
        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[method(numberOfLayers)]
        pub unsafe fn numberOfLayers(&self) -> NSUInteger;

        #[method(recurrentOutputIsTemporary)]
        pub unsafe fn recurrentOutputIsTemporary(&self) -> bool;

        #[method(setRecurrentOutputIsTemporary:)]
        pub unsafe fn setRecurrentOutputIsTemporary(&self, recurrent_output_is_temporary: bool);

        #[method(storeAllIntermediateStates)]
        pub unsafe fn storeAllIntermediateStates(&self) -> bool;

        #[method(setStoreAllIntermediateStates:)]
        pub unsafe fn setStoreAllIntermediateStates(&self, store_all_intermediate_states: bool);

        #[method(bidirectionalCombineMode)]
        pub unsafe fn bidirectionalCombineMode(&self) -> MPSRNNBidirectionalCombineMode;

        #[method(setBidirectionalCombineMode:)]
        pub unsafe fn setBidirectionalCombineMode(
            &self,
            bidirectional_combine_mode: MPSRNNBidirectionalCombineMode,
        );

        #[method_id(@__retain_semantics Init initWithDevice:rnnDescriptor:)]
        pub unsafe fn initWithDevice_rnnDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            rnn_descriptor: &MPSRNNDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:rnnDescriptors:)]
        pub unsafe fn initWithDevice_rnnDescriptors(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            rnn_descriptors: &NSArray<MPSRNNDescriptor>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MPSImage", feature = "MPSState"))]
        #[method(encodeSequenceToCommandBuffer:sourceImages:destinationImages:recurrentInputState:recurrentOutputStates:)]
        pub unsafe fn encodeSequenceToCommandBuffer_sourceImages_destinationImages_recurrentInputState_recurrentOutputStates(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_images: &NSArray<MPSImage>,
            destination_images: &NSArray<MPSImage>,
            recurrent_input_state: Option<&MPSRNNRecurrentImageState>,
            recurrent_output_states: Option<&NSMutableArray<MPSRNNRecurrentImageState>>,
        );

        #[cfg(feature = "MPSImage")]
        #[method(encodeBidirectionalSequenceToCommandBuffer:sourceSequence:destinationForwardImages:destinationBackwardImages:)]
        pub unsafe fn encodeBidirectionalSequenceToCommandBuffer_sourceSequence_destinationForwardImages_destinationBackwardImages(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_sequence: &NSArray<MPSImage>,
            destination_forward_images: &NSArray<MPSImage>,
            destination_backward_images: Option<&NSArray<MPSImage>>,
        );

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Copy copyWithZone:device:)]
        pub unsafe fn copyWithZone_device(
            &self,
            zone: *mut NSZone,
            device: Option<&ProtocolObject<dyn MTLDevice>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSRNNImageInferenceLayer {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "MPSCNNKernel", feature = "MPSKernel"))]
    unsafe impl MPSRNNImageInferenceLayer {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnrecurrentmatrixstate?language=objc)
    #[unsafe(super(MPSState, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSState")]
    pub struct MPSRNNRecurrentMatrixState;
);

#[cfg(feature = "MPSState")]
unsafe impl NSObjectProtocol for MPSRNNRecurrentMatrixState {}

extern_methods!(
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNRecurrentMatrixState {
        #[cfg(feature = "MPSMatrix")]
        #[method_id(@__retain_semantics Other getRecurrentOutputMatrixForLayerIndex:)]
        pub unsafe fn getRecurrentOutputMatrixForLayerIndex(
            &self,
            layer_index: NSUInteger,
        ) -> Option<Retained<MPSMatrix>>;

        #[cfg(feature = "MPSMatrix")]
        #[method_id(@__retain_semantics Other getMemoryCellMatrixForLayerIndex:)]
        pub unsafe fn getMemoryCellMatrixForLayerIndex(
            &self,
            layer_index: NSUInteger,
        ) -> Option<Retained<MPSMatrix>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSState`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNRecurrentMatrixState {
        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:bufferSize:)]
        pub unsafe fn temporaryStateWithCommandBuffer_bufferSize(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryStateWithCommandBuffer_textureDescriptor(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:)]
        pub unsafe fn temporaryStateWithCommandBuffer(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:bufferSize:)]
        pub unsafe fn initWithDevice_bufferSize(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:textureDescriptor:)]
        pub unsafe fn initWithDevice_textureDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResource:)]
        pub unsafe fn initWithResource(
            this: Allocated<Self>,
            resource: Option<&ProtocolObject<dyn MTLResource>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:resourceList:)]
        pub unsafe fn initWithDevice_resourceList(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:resourceList:)]
        pub unsafe fn temporaryStateWithCommandBuffer_resourceList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResources:)]
        pub unsafe fn initWithResources(
            this: Allocated<Self>,
            resources: Option<&NSArray<ProtocolObject<dyn MTLResource>>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNRecurrentMatrixState {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnmatrixinferencelayer?language=objc)
    #[unsafe(super(MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSKernel")]
    pub struct MPSRNNMatrixInferenceLayer;
);

#[cfg(feature = "MPSKernel")]
unsafe impl NSCoding for MPSRNNMatrixInferenceLayer {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSCopying for MPSRNNMatrixInferenceLayer {}

#[cfg(feature = "MPSKernel")]
unsafe impl CopyingHelper for MPSRNNMatrixInferenceLayer {
    type Result = Self;
}

#[cfg(feature = "MPSKernel")]
unsafe impl NSObjectProtocol for MPSRNNMatrixInferenceLayer {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSSecureCoding for MPSRNNMatrixInferenceLayer {}

extern_methods!(
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSRNNMatrixInferenceLayer {
        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[method(numberOfLayers)]
        pub unsafe fn numberOfLayers(&self) -> NSUInteger;

        #[method(recurrentOutputIsTemporary)]
        pub unsafe fn recurrentOutputIsTemporary(&self) -> bool;

        #[method(setRecurrentOutputIsTemporary:)]
        pub unsafe fn setRecurrentOutputIsTemporary(&self, recurrent_output_is_temporary: bool);

        #[method(storeAllIntermediateStates)]
        pub unsafe fn storeAllIntermediateStates(&self) -> bool;

        #[method(setStoreAllIntermediateStates:)]
        pub unsafe fn setStoreAllIntermediateStates(&self, store_all_intermediate_states: bool);

        #[method(bidirectionalCombineMode)]
        pub unsafe fn bidirectionalCombineMode(&self) -> MPSRNNBidirectionalCombineMode;

        #[method(setBidirectionalCombineMode:)]
        pub unsafe fn setBidirectionalCombineMode(
            &self,
            bidirectional_combine_mode: MPSRNNBidirectionalCombineMode,
        );

        #[method_id(@__retain_semantics Init initWithDevice:rnnDescriptor:)]
        pub unsafe fn initWithDevice_rnnDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            rnn_descriptor: &MPSRNNDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:rnnDescriptors:)]
        pub unsafe fn initWithDevice_rnnDescriptors(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            rnn_descriptors: &NSArray<MPSRNNDescriptor>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MPSMatrix", feature = "MPSState"))]
        #[method(encodeSequenceToCommandBuffer:sourceMatrices:sourceOffsets:destinationMatrices:destinationOffsets:recurrentInputState:recurrentOutputStates:)]
        pub unsafe fn encodeSequenceToCommandBuffer_sourceMatrices_sourceOffsets_destinationMatrices_destinationOffsets_recurrentInputState_recurrentOutputStates(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_matrices: &NSArray<MPSMatrix>,
            source_offsets: *mut NSUInteger,
            destination_matrices: &NSArray<MPSMatrix>,
            destination_offsets: *mut NSUInteger,
            recurrent_input_state: Option<&MPSRNNRecurrentMatrixState>,
            recurrent_output_states: Option<&NSMutableArray<MPSRNNRecurrentMatrixState>>,
        );

        #[cfg(all(feature = "MPSMatrix", feature = "MPSState"))]
        #[method(encodeSequenceToCommandBuffer:sourceMatrices:destinationMatrices:recurrentInputState:recurrentOutputStates:)]
        pub unsafe fn encodeSequenceToCommandBuffer_sourceMatrices_destinationMatrices_recurrentInputState_recurrentOutputStates(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_matrices: &NSArray<MPSMatrix>,
            destination_matrices: &NSArray<MPSMatrix>,
            recurrent_input_state: Option<&MPSRNNRecurrentMatrixState>,
            recurrent_output_states: Option<&NSMutableArray<MPSRNNRecurrentMatrixState>>,
        );

        #[cfg(feature = "MPSMatrix")]
        #[method(encodeBidirectionalSequenceToCommandBuffer:sourceSequence:destinationForwardMatrices:destinationBackwardMatrices:)]
        pub unsafe fn encodeBidirectionalSequenceToCommandBuffer_sourceSequence_destinationForwardMatrices_destinationBackwardMatrices(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_sequence: &NSArray<MPSMatrix>,
            destination_forward_matrices: &NSArray<MPSMatrix>,
            destination_backward_matrices: Option<&NSArray<MPSMatrix>>,
        );

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Copy copyWithZone:device:)]
        pub unsafe fn copyWithZone_device(
            &self,
            zone: *mut NSZone,
            device: Option<&ProtocolObject<dyn MTLDevice>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSRNNMatrixInferenceLayer {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSRNNMatrixInferenceLayer {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnmatrixtrainingstate?language=objc)
    #[unsafe(super(MPSState, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSState")]
    pub struct MPSRNNMatrixTrainingState;
);

#[cfg(feature = "MPSState")]
unsafe impl NSObjectProtocol for MPSRNNMatrixTrainingState {}

extern_methods!(
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNMatrixTrainingState {}
);

extern_methods!(
    /// Methods declared on superclass `MPSState`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNMatrixTrainingState {
        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:bufferSize:)]
        pub unsafe fn temporaryStateWithCommandBuffer_bufferSize(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:textureDescriptor:)]
        pub unsafe fn temporaryStateWithCommandBuffer_textureDescriptor(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:)]
        pub unsafe fn temporaryStateWithCommandBuffer(
            cmd_buf: &ProtocolObject<dyn MTLCommandBuffer>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:bufferSize:)]
        pub unsafe fn initWithDevice_bufferSize(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            buffer_size: usize,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:textureDescriptor:)]
        pub unsafe fn initWithDevice_textureDescriptor(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            descriptor: &MTLTextureDescriptor,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResource:)]
        pub unsafe fn initWithResource(
            this: Allocated<Self>,
            resource: Option<&ProtocolObject<dyn MTLResource>>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Init initWithDevice:resourceList:)]
        pub unsafe fn initWithDevice_resourceList(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other temporaryStateWithCommandBuffer:resourceList:)]
        pub unsafe fn temporaryStateWithCommandBuffer_resourceList(
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            resource_list: &MPSStateResourceList,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithResources:)]
        pub unsafe fn initWithResources(
            this: Allocated<Self>,
            resources: Option<&NSArray<ProtocolObject<dyn MTLResource>>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSState")]
    unsafe impl MPSRNNMatrixTrainingState {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnmatrixid?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSRNNMatrixId(pub NSUInteger);
impl MPSRNNMatrixId {
    #[doc(alias = "MPSRNNMatrixIdSingleGateInputWeights")]
    pub const SingleGateInputWeights: Self = Self(0);
    #[doc(alias = "MPSRNNMatrixIdSingleGateRecurrentWeights")]
    pub const SingleGateRecurrentWeights: Self = Self(1);
    #[doc(alias = "MPSRNNMatrixIdSingleGateBiasTerms")]
    pub const SingleGateBiasTerms: Self = Self(2);
    #[doc(alias = "MPSRNNMatrixIdLSTMInputGateInputWeights")]
    pub const LSTMInputGateInputWeights: Self = Self(3);
    #[doc(alias = "MPSRNNMatrixIdLSTMInputGateRecurrentWeights")]
    pub const LSTMInputGateRecurrentWeights: Self = Self(4);
    #[doc(alias = "MPSRNNMatrixIdLSTMInputGateMemoryWeights")]
    pub const LSTMInputGateMemoryWeights: Self = Self(5);
    #[doc(alias = "MPSRNNMatrixIdLSTMInputGateBiasTerms")]
    pub const LSTMInputGateBiasTerms: Self = Self(6);
    #[doc(alias = "MPSRNNMatrixIdLSTMForgetGateInputWeights")]
    pub const LSTMForgetGateInputWeights: Self = Self(7);
    #[doc(alias = "MPSRNNMatrixIdLSTMForgetGateRecurrentWeights")]
    pub const LSTMForgetGateRecurrentWeights: Self = Self(8);
    #[doc(alias = "MPSRNNMatrixIdLSTMForgetGateMemoryWeights")]
    pub const LSTMForgetGateMemoryWeights: Self = Self(9);
    #[doc(alias = "MPSRNNMatrixIdLSTMForgetGateBiasTerms")]
    pub const LSTMForgetGateBiasTerms: Self = Self(10);
    #[doc(alias = "MPSRNNMatrixIdLSTMMemoryGateInputWeights")]
    pub const LSTMMemoryGateInputWeights: Self = Self(11);
    #[doc(alias = "MPSRNNMatrixIdLSTMMemoryGateRecurrentWeights")]
    pub const LSTMMemoryGateRecurrentWeights: Self = Self(12);
    #[doc(alias = "MPSRNNMatrixIdLSTMMemoryGateMemoryWeights")]
    pub const LSTMMemoryGateMemoryWeights: Self = Self(13);
    #[doc(alias = "MPSRNNMatrixIdLSTMMemoryGateBiasTerms")]
    pub const LSTMMemoryGateBiasTerms: Self = Self(14);
    #[doc(alias = "MPSRNNMatrixIdLSTMOutputGateInputWeights")]
    pub const LSTMOutputGateInputWeights: Self = Self(15);
    #[doc(alias = "MPSRNNMatrixIdLSTMOutputGateRecurrentWeights")]
    pub const LSTMOutputGateRecurrentWeights: Self = Self(16);
    #[doc(alias = "MPSRNNMatrixIdLSTMOutputGateMemoryWeights")]
    pub const LSTMOutputGateMemoryWeights: Self = Self(17);
    #[doc(alias = "MPSRNNMatrixIdLSTMOutputGateBiasTerms")]
    pub const LSTMOutputGateBiasTerms: Self = Self(18);
    #[doc(alias = "MPSRNNMatrixIdGRUInputGateInputWeights")]
    pub const GRUInputGateInputWeights: Self = Self(19);
    #[doc(alias = "MPSRNNMatrixIdGRUInputGateRecurrentWeights")]
    pub const GRUInputGateRecurrentWeights: Self = Self(20);
    #[doc(alias = "MPSRNNMatrixIdGRUInputGateBiasTerms")]
    pub const GRUInputGateBiasTerms: Self = Self(21);
    #[doc(alias = "MPSRNNMatrixIdGRURecurrentGateInputWeights")]
    pub const GRURecurrentGateInputWeights: Self = Self(22);
    #[doc(alias = "MPSRNNMatrixIdGRURecurrentGateRecurrentWeights")]
    pub const GRURecurrentGateRecurrentWeights: Self = Self(23);
    #[doc(alias = "MPSRNNMatrixIdGRURecurrentGateBiasTerms")]
    pub const GRURecurrentGateBiasTerms: Self = Self(24);
    #[doc(alias = "MPSRNNMatrixIdGRUOutputGateInputWeights")]
    pub const GRUOutputGateInputWeights: Self = Self(25);
    #[doc(alias = "MPSRNNMatrixIdGRUOutputGateRecurrentWeights")]
    pub const GRUOutputGateRecurrentWeights: Self = Self(26);
    #[doc(alias = "MPSRNNMatrixIdGRUOutputGateInputGateWeights")]
    pub const GRUOutputGateInputGateWeights: Self = Self(27);
    #[doc(alias = "MPSRNNMatrixIdGRUOutputGateBiasTerms")]
    pub const GRUOutputGateBiasTerms: Self = Self(28);
    #[doc(alias = "MPSRNNMatrixId_count")]
    pub const _count: Self = Self(29);
}

unsafe impl Encode for MPSRNNMatrixId {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSRNNMatrixId {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsrnnmatrixtraininglayer?language=objc)
    #[unsafe(super(MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSKernel")]
    pub struct MPSRNNMatrixTrainingLayer;
);

#[cfg(feature = "MPSKernel")]
unsafe impl NSCoding for MPSRNNMatrixTrainingLayer {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSCopying for MPSRNNMatrixTrainingLayer {}

#[cfg(feature = "MPSKernel")]
unsafe impl CopyingHelper for MPSRNNMatrixTrainingLayer {
    type Result = Self;
}

#[cfg(feature = "MPSKernel")]
unsafe impl NSObjectProtocol for MPSRNNMatrixTrainingLayer {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSSecureCoding for MPSRNNMatrixTrainingLayer {}

extern_methods!(
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSRNNMatrixTrainingLayer {
        #[method(inputFeatureChannels)]
        pub unsafe fn inputFeatureChannels(&self) -> NSUInteger;

        #[method(outputFeatureChannels)]
        pub unsafe fn outputFeatureChannels(&self) -> NSUInteger;

        #[method(storeAllIntermediateStates)]
        pub unsafe fn storeAllIntermediateStates(&self) -> bool;

        #[method(setStoreAllIntermediateStates:)]
        pub unsafe fn setStoreAllIntermediateStates(&self, store_all_intermediate_states: bool);

        #[method(recurrentOutputIsTemporary)]
        pub unsafe fn recurrentOutputIsTemporary(&self) -> bool;

        #[method(setRecurrentOutputIsTemporary:)]
        pub unsafe fn setRecurrentOutputIsTemporary(&self, recurrent_output_is_temporary: bool);

        #[method(trainingStateIsTemporary)]
        pub unsafe fn trainingStateIsTemporary(&self) -> bool;

        #[method(setTrainingStateIsTemporary:)]
        pub unsafe fn setTrainingStateIsTemporary(&self, training_state_is_temporary: bool);

        #[method(accumulateWeightGradients)]
        pub unsafe fn accumulateWeightGradients(&self) -> bool;

        #[method(setAccumulateWeightGradients:)]
        pub unsafe fn setAccumulateWeightGradients(&self, accumulate_weight_gradients: bool);

        #[cfg(feature = "MPSMatrix")]
        #[method_id(@__retain_semantics Init initWithDevice:rnnDescriptor:trainableWeights:)]
        pub unsafe fn initWithDevice_rnnDescriptor_trainableWeights(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            rnn_descriptor: &MPSRNNDescriptor,
            trainable_weights: &NSMutableArray<MPSMatrix>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "MPSCoreTypes", feature = "MPSMatrix"))]
        #[method(createWeightGradientMatrices:dataType:)]
        pub unsafe fn createWeightGradientMatrices_dataType(
            &self,
            matrices_out: &NSMutableArray<MPSMatrix>,
            data_type: MPSDataType,
        );

        #[cfg(all(feature = "MPSCoreTypes", feature = "MPSMatrix"))]
        #[method(createTemporaryWeightGradientMatrices:dataType:commandBuffer:)]
        pub unsafe fn createTemporaryWeightGradientMatrices_dataType_commandBuffer(
            &self,
            matrices_out: &NSMutableArray<MPSMatrix>,
            data_type: MPSDataType,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
        );

        #[cfg(feature = "MPSMatrix")]
        #[method(createWeightMatrices:)]
        pub unsafe fn createWeightMatrices(&self, matrices_out: &NSMutableArray<MPSMatrix>);

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSMatrix")]
        #[method(encodeCopyWeightsToCommandBuffer:weights:matrixId:matrix:copyFromWeightsToMatrix:matrixOffset:)]
        pub unsafe fn encodeCopyWeightsToCommandBuffer_weights_matrixId_matrix_copyFromWeightsToMatrix_matrixOffset(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            weights: &NSArray<MPSMatrix>,
            matrix_id: MPSRNNMatrixId,
            matrix: &MPSMatrix,
            copy_from_weights_to_matrix: bool,
            matrix_offset: MTLOrigin,
        );

        #[cfg(all(feature = "MPSMatrix", feature = "MPSState"))]
        #[method(encodeForwardSequenceToCommandBuffer:sourceMatrices:sourceOffsets:destinationMatrices:destinationOffsets:trainingStates:recurrentInputState:recurrentOutputStates:weights:)]
        pub unsafe fn encodeForwardSequenceToCommandBuffer_sourceMatrices_sourceOffsets_destinationMatrices_destinationOffsets_trainingStates_recurrentInputState_recurrentOutputStates_weights(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_matrices: &NSArray<MPSMatrix>,
            source_offsets: *mut NSUInteger,
            destination_matrices: &NSArray<MPSMatrix>,
            destination_offsets: *mut NSUInteger,
            training_states: &NSMutableArray<MPSRNNMatrixTrainingState>,
            recurrent_input_state: Option<&MPSRNNRecurrentMatrixState>,
            recurrent_output_states: Option<&NSMutableArray<MPSRNNRecurrentMatrixState>>,
            weights: &NSArray<MPSMatrix>,
        );

        #[cfg(all(feature = "MPSMatrix", feature = "MPSState"))]
        #[method(encodeForwardSequenceToCommandBuffer:sourceMatrices:destinationMatrices:trainingStates:weights:)]
        pub unsafe fn encodeForwardSequenceToCommandBuffer_sourceMatrices_destinationMatrices_trainingStates_weights(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source_matrices: &NSArray<MPSMatrix>,
            destination_matrices: &NSArray<MPSMatrix>,
            training_states: &NSMutableArray<MPSRNNMatrixTrainingState>,
            weights: &NSArray<MPSMatrix>,
        );

        #[cfg(all(feature = "MPSMatrix", feature = "MPSState"))]
        #[method(encodeGradientSequenceToCommandBuffer:forwardSources:forwardSourceOffsets:sourceGradients:sourceGradientOffsets:destinationGradients:destinationOffsets:weightGradients:trainingStates:recurrentInputState:recurrentOutputStates:weights:)]
        pub unsafe fn encodeGradientSequenceToCommandBuffer_forwardSources_forwardSourceOffsets_sourceGradients_sourceGradientOffsets_destinationGradients_destinationOffsets_weightGradients_trainingStates_recurrentInputState_recurrentOutputStates_weights(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            forward_sources: &NSArray<MPSMatrix>,
            forward_source_offsets: *mut NSUInteger,
            source_gradients: &NSArray<MPSMatrix>,
            source_gradient_offsets: *mut NSUInteger,
            destination_gradients: Option<&NSArray<MPSMatrix>>,
            destination_offsets: *mut NSUInteger,
            weight_gradients: Option<&NSArray<MPSMatrix>>,
            training_states: &NSArray<MPSRNNMatrixTrainingState>,
            recurrent_input_state: Option<&MPSRNNRecurrentMatrixState>,
            recurrent_output_states: Option<&NSMutableArray<MPSRNNRecurrentMatrixState>>,
            weights: &NSArray<MPSMatrix>,
        );

        #[cfg(all(feature = "MPSMatrix", feature = "MPSState"))]
        #[method(encodeGradientSequenceToCommandBuffer:forwardSources:sourceGradients:destinationGradients:weightGradients:trainingStates:weights:)]
        pub unsafe fn encodeGradientSequenceToCommandBuffer_forwardSources_sourceGradients_destinationGradients_weightGradients_trainingStates_weights(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            forward_sources: &NSArray<MPSMatrix>,
            source_gradients: &NSArray<MPSMatrix>,
            destination_gradients: Option<&NSArray<MPSMatrix>>,
            weight_gradients: Option<&NSArray<MPSMatrix>>,
            training_states: &NSArray<MPSRNNMatrixTrainingState>,
            weights: &NSArray<MPSMatrix>,
        );

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method_id(@__retain_semantics Copy copyWithZone:device:)]
        pub unsafe fn copyWithZone_device(
            &self,
            zone: *mut NSZone,
            device: Option<&ProtocolObject<dyn MTLDevice>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSRNNMatrixTrainingLayer {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSRNNMatrixTrainingLayer {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
