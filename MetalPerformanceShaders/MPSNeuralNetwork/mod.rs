//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "MPSCNNBatchNormalization")]
#[path = "MPSCNNBatchNormalization.rs"]
mod __MPSCNNBatchNormalization;
#[cfg(feature = "MPSCNNConvolution")]
#[path = "MPSCNNConvolution.rs"]
mod __MPSCNNConvolution;
#[cfg(feature = "MPSCNNDropout")]
#[path = "MPSCNNDropout.rs"]
mod __MPSCNNDropout;
#[cfg(feature = "MPSCNNGroupNormalization")]
#[path = "MPSCNNGroupNormalization.rs"]
mod __MPSCNNGroupNormalization;
#[cfg(feature = "MPSCNNInstanceNormalization")]
#[path = "MPSCNNInstanceNormalization.rs"]
mod __MPSCNNInstanceNormalization;
#[cfg(feature = "MPSCNNKernel")]
#[path = "MPSCNNKernel.rs"]
mod __MPSCNNKernel;
#[cfg(feature = "MPSCNNLoss")]
#[path = "MPSCNNLoss.rs"]
mod __MPSCNNLoss;
#[cfg(feature = "MPSCNNMath")]
#[path = "MPSCNNMath.rs"]
mod __MPSCNNMath;
#[cfg(feature = "MPSCNNNeuron")]
#[path = "MPSCNNNeuron.rs"]
mod __MPSCNNNeuron;
#[cfg(feature = "MPSCNNNeuronType")]
#[path = "MPSCNNNeuronType.rs"]
mod __MPSCNNNeuronType;
#[cfg(feature = "MPSCNNNormalization")]
#[path = "MPSCNNNormalization.rs"]
mod __MPSCNNNormalization;
#[cfg(feature = "MPSCNNNormalizationWeights")]
#[path = "MPSCNNNormalizationWeights.rs"]
mod __MPSCNNNormalizationWeights;
#[cfg(feature = "MPSCNNPooling")]
#[path = "MPSCNNPooling.rs"]
mod __MPSCNNPooling;
#[cfg(feature = "MPSCNNSoftMax")]
#[path = "MPSCNNSoftMax.rs"]
mod __MPSCNNSoftMax;
#[cfg(feature = "MPSCNNTypes")]
#[path = "MPSCNNTypes.rs"]
mod __MPSCNNTypes;
#[cfg(feature = "MPSCNNUpsampling")]
#[path = "MPSCNNUpsampling.rs"]
mod __MPSCNNUpsampling;
#[cfg(feature = "MPSMatrixBatchNormalization")]
#[path = "MPSMatrixBatchNormalization.rs"]
mod __MPSMatrixBatchNormalization;
#[cfg(feature = "MPSMatrixFullyConnected")]
#[path = "MPSMatrixFullyConnected.rs"]
mod __MPSMatrixFullyConnected;
#[cfg(feature = "MPSMatrixLayer")]
#[path = "MPSMatrixLayer.rs"]
mod __MPSMatrixLayer;
#[cfg(feature = "MPSMatrixNeuron")]
#[path = "MPSMatrixNeuron.rs"]
mod __MPSMatrixNeuron;
#[cfg(feature = "MPSMatrixSum")]
#[path = "MPSMatrixSum.rs"]
mod __MPSMatrixSum;
#[cfg(feature = "MPSNNGradientState")]
#[path = "MPSNNGradientState.rs"]
mod __MPSNNGradientState;
#[cfg(feature = "MPSNNGraph")]
#[path = "MPSNNGraph.rs"]
mod __MPSNNGraph;
#[cfg(feature = "MPSNNGraphNodes")]
#[path = "MPSNNGraphNodes.rs"]
mod __MPSNNGraphNodes;
#[cfg(feature = "MPSNNGridSample")]
#[path = "MPSNNGridSample.rs"]
mod __MPSNNGridSample;
#[cfg(feature = "MPSNNOptimizers")]
#[path = "MPSNNOptimizers.rs"]
mod __MPSNNOptimizers;
#[cfg(feature = "MPSNNReduce")]
#[path = "MPSNNReduce.rs"]
mod __MPSNNReduce;
#[cfg(feature = "MPSNNReshape")]
#[path = "MPSNNReshape.rs"]
mod __MPSNNReshape;
#[cfg(feature = "MPSNNResize")]
#[path = "MPSNNResize.rs"]
mod __MPSNNResize;
#[cfg(feature = "MPSNNSlice")]
#[path = "MPSNNSlice.rs"]
mod __MPSNNSlice;
#[cfg(feature = "MPSNeuralNetworkTypes")]
#[path = "MPSNeuralNetworkTypes.rs"]
mod __MPSNeuralNetworkTypes;
#[cfg(feature = "MPSRNNLayer")]
#[path = "MPSRNNLayer.rs"]
mod __MPSRNNLayer;

#[cfg(all(
    feature = "MPSCNNBatchNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNBatchNormalization::MPSCNNBatchNormalization;
#[cfg(feature = "MPSCNNBatchNormalization")]
pub use self::__MPSCNNBatchNormalization::MPSCNNBatchNormalizationDataSource;
#[cfg(all(
    feature = "MPSCNNBatchNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNBatchNormalization::MPSCNNBatchNormalizationGradient;
#[cfg(all(
    feature = "MPSCNNBatchNormalization",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNBatchNormalization::MPSCNNBatchNormalizationState;
#[cfg(all(
    feature = "MPSCNNBatchNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNBatchNormalization::MPSCNNBatchNormalizationStatistics;
#[cfg(all(
    feature = "MPSCNNBatchNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNBatchNormalization::MPSCNNBatchNormalizationStatisticsGradient;
#[cfg(all(
    feature = "MPSCNNBatchNormalization",
    feature = "MPSCore",
    feature = "MPSState"
))]
pub use self::__MPSCNNBatchNormalization::MPSCNNNormalizationMeanAndVarianceState;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNBinaryConvolution;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNBinaryFullyConnected;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolution;
#[cfg(feature = "MPSCNNConvolution")]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionDataSource;
#[cfg(feature = "MPSCNNConvolution")]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionDescriptor;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionGradient;
#[cfg(feature = "MPSCNNConvolution")]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionGradientOption;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionGradientState;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionGradientStateBatch;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionTranspose;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionTransposeGradient;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionTransposeGradientState;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionTransposeGradientStateBatch;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCore",
    feature = "MPSState"
))]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionWeightsAndBiasesState;
#[cfg(feature = "MPSCNNConvolution")]
pub use self::__MPSCNNConvolution::MPSCNNConvolutionWeightsLayout;
#[cfg(feature = "MPSCNNConvolution")]
pub use self::__MPSCNNConvolution::MPSCNNDepthWiseConvolutionDescriptor;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNFullyConnected;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSCNNFullyConnectedGradient;
#[cfg(feature = "MPSCNNConvolution")]
pub use self::__MPSCNNConvolution::MPSCNNSubPixelConvolutionDescriptor;
#[cfg(feature = "MPSCNNConvolution")]
pub use self::__MPSCNNConvolution::MPSCNNWeightsQuantizationType;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSNNGramMatrixCalculation;
#[cfg(all(
    feature = "MPSCNNConvolution",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNConvolution::MPSNNGramMatrixCalculationGradient;
#[cfg(all(
    feature = "MPSCNNDropout",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNDropout::MPSCNNDropout;
#[cfg(all(
    feature = "MPSCNNDropout",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNDropout::MPSCNNDropoutGradient;
#[cfg(all(
    feature = "MPSCNNDropout",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNDropout::MPSCNNDropoutGradientState;
#[cfg(all(
    feature = "MPSCNNDropout",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNDropout::MPSCNNDropoutGradientStateBatch;
#[cfg(all(
    feature = "MPSCNNGroupNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNGroupNormalization::MPSCNNGroupNormalization;
#[cfg(feature = "MPSCNNGroupNormalization")]
pub use self::__MPSCNNGroupNormalization::MPSCNNGroupNormalizationDataSource;
#[cfg(all(
    feature = "MPSCNNGroupNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNGroupNormalization::MPSCNNGroupNormalizationGradient;
#[cfg(all(
    feature = "MPSCNNGroupNormalization",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNGroupNormalization::MPSCNNGroupNormalizationGradientState;
#[cfg(all(
    feature = "MPSCNNGroupNormalization",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNGroupNormalization::MPSCNNGroupNormalizationGradientStateBatch;
#[cfg(all(
    feature = "MPSCNNInstanceNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNInstanceNormalization::MPSCNNInstanceNormalization;
#[cfg(feature = "MPSCNNInstanceNormalization")]
pub use self::__MPSCNNInstanceNormalization::MPSCNNInstanceNormalizationDataSource;
#[cfg(all(
    feature = "MPSCNNInstanceNormalization",
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNInstanceNormalization::MPSCNNInstanceNormalizationGradient;
#[cfg(all(
    feature = "MPSCNNInstanceNormalization",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNInstanceNormalization::MPSCNNInstanceNormalizationGradientState;
#[cfg(all(
    feature = "MPSCNNInstanceNormalization",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNInstanceNormalization::MPSCNNInstanceNormalizationGradientStateBatch;
#[cfg(all(feature = "MPSCNNKernel", feature = "MPSCore", feature = "MPSKernel"))]
pub use self::__MPSCNNKernel::MPSCNNBinaryKernel;
#[cfg(all(feature = "MPSCNNKernel", feature = "MPSCore", feature = "MPSKernel"))]
pub use self::__MPSCNNKernel::MPSCNNGradientKernel;
#[cfg(all(feature = "MPSCNNKernel", feature = "MPSCore", feature = "MPSKernel"))]
pub use self::__MPSCNNKernel::MPSCNNKernel;
#[cfg(all(feature = "MPSCNNKernel", feature = "MPSCore", feature = "MPSKernel"))]
pub use self::__MPSCNNKernel::MPSCNNMultiaryKernel;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNLoss",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNLoss::MPSCNNLoss;
#[cfg(feature = "MPSCNNLoss")]
pub use self::__MPSCNNLoss::MPSCNNLossDataDescriptor;
#[cfg(feature = "MPSCNNLoss")]
pub use self::__MPSCNNLoss::MPSCNNLossDescriptor;
#[cfg(all(feature = "MPSCNNLoss", feature = "MPSCore", feature = "MPSState"))]
pub use self::__MPSCNNLoss::MPSCNNLossLabels;
#[cfg(all(feature = "MPSCNNLoss", feature = "MPSCore", feature = "MPSState"))]
pub use self::__MPSCNNLoss::MPSCNNLossLabelsBatch;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNLoss",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNLoss::MPSCNNYOLOLoss;
#[cfg(feature = "MPSCNNLoss")]
pub use self::__MPSCNNLoss::MPSCNNYOLOLossDescriptor;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNLoss",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNLoss::MPSNNForwardLoss;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNLoss",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNLoss::MPSNNInitialGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNLoss",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNLoss::MPSNNLossGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNAdd;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNAddGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNArithmetic;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNArithmeticGradient;
#[cfg(all(
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNMath::MPSCNNArithmeticGradientState;
#[cfg(all(
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSCNNMath::MPSCNNArithmeticGradientStateBatch;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNDivide;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNMultiply;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNMultiplyGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNSubtract;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSCNNSubtractGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNMath",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNMath::MPSNNCompare;
#[cfg(feature = "MPSCNNMath")]
pub use self::__MPSCNNMath::MPSNNComparisonType;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuron;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronAbsolute;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronELU;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronExponential;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronHardSigmoid;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronLinear;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronLogarithm;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronPReLU;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronPower;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronReLU;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronReLUN;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronSigmoid;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronSoftPlus;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronSoftSign;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNeuron",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNeuron::MPSCNNNeuronTanH;
#[cfg(feature = "MPSCNNNeuron")]
pub use self::__MPSCNNNeuron::MPSNNNeuronDescriptor;
#[cfg(feature = "MPSCNNNeuronType")]
pub use self::__MPSCNNNeuronType::MPSCNNNeuronType;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNormalization",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNormalization::MPSCNNCrossChannelNormalization;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNormalization",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNormalization::MPSCNNCrossChannelNormalizationGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNormalization",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNormalization::MPSCNNLocalContrastNormalization;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNormalization",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNormalization::MPSCNNLocalContrastNormalizationGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNormalization",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNormalization::MPSCNNSpatialNormalization;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNNormalization",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNNormalization::MPSCNNSpatialNormalizationGradient;
#[cfg(all(
    feature = "MPSCNNNormalizationWeights",
    feature = "MPSCore",
    feature = "MPSState"
))]
pub use self::__MPSCNNNormalizationWeights::MPSCNNNormalizationGammaAndBetaState;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNDilatedPoolingMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNDilatedPoolingMaxGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPooling;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPoolingAverage;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPoolingAverageGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPoolingGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPoolingL2Norm;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPoolingL2NormGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPoolingMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNPooling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNPooling::MPSCNNPoolingMaxGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNSoftMax",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNSoftMax::MPSCNNLogSoftMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNSoftMax",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNSoftMax::MPSCNNLogSoftMaxGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNSoftMax",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNSoftMax::MPSCNNSoftMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNSoftMax",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNSoftMax::MPSCNNSoftMaxGradient;
#[cfg(feature = "MPSCNNTypes")]
pub use self::__MPSCNNTypes::MPSCNNLossType;
#[cfg(feature = "MPSCNNTypes")]
pub use self::__MPSCNNTypes::MPSCNNReductionType;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNUpsampling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNUpsampling::MPSCNNUpsampling;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNUpsampling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNUpsampling::MPSCNNUpsamplingBilinear;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNUpsampling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNUpsampling::MPSCNNUpsamplingBilinearGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNUpsampling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNUpsampling::MPSCNNUpsamplingGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNUpsampling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNUpsampling::MPSCNNUpsamplingNearest;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCNNUpsampling",
    feature = "MPSCore",
    feature = "MPSKernel"
))]
pub use self::__MPSCNNUpsampling::MPSCNNUpsamplingNearestGradient;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSMatrix",
    feature = "MPSMatrixBatchNormalization",
    feature = "MPSMatrixTypes"
))]
pub use self::__MPSMatrixBatchNormalization::MPSMatrixBatchNormalization;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSMatrix",
    feature = "MPSMatrixBatchNormalization",
    feature = "MPSMatrixTypes"
))]
pub use self::__MPSMatrixBatchNormalization::MPSMatrixBatchNormalizationGradient;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSMatrix",
    feature = "MPSMatrixFullyConnected",
    feature = "MPSMatrixTypes"
))]
pub use self::__MPSMatrixFullyConnected::MPSMatrixFullyConnected;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSMatrix",
    feature = "MPSMatrixFullyConnected",
    feature = "MPSMatrixTypes"
))]
pub use self::__MPSMatrixFullyConnected::MPSMatrixFullyConnectedGradient;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSMatrix",
    feature = "MPSMatrixNeuron",
    feature = "MPSMatrixTypes"
))]
pub use self::__MPSMatrixNeuron::MPSMatrixNeuron;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSMatrix",
    feature = "MPSMatrixNeuron",
    feature = "MPSMatrixTypes"
))]
pub use self::__MPSMatrixNeuron::MPSMatrixNeuronGradient;
#[cfg(all(feature = "MPSCore", feature = "MPSKernel", feature = "MPSMatrixSum"))]
pub use self::__MPSMatrixSum::MPSMatrixSum;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSNNGradientState::MPSNNBinaryGradientState;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSNNGradientState::MPSNNBinaryGradientStateBatch;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSNNGradientState::MPSNNGradientState;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSNNGradientState::MPSNNGradientStateBatch;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSNNGradientState::MPSNNMultiaryGradientState;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSNNGradientState",
    feature = "MPSState"
))]
pub use self::__MPSNNGradientState::MPSNNMultiaryGradientStateBatch;
#[cfg(all(feature = "MPSCore", feature = "MPSKernel", feature = "MPSNNGraph"))]
pub use self::__MPSNNGraph::MPSNNGraph;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSImage",
    feature = "MPSNNGraph",
    feature = "block2"
))]
pub use self::__MPSNNGraph::MPSNNGraphCompletionHandler;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNBatchNormalizationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNBatchNormalizationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNBinaryConvolutionNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNBinaryFullyConnectedNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNConvolutionGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNConvolutionGradientStateNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNConvolutionNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNConvolutionTransposeGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNConvolutionTransposeGradientStateNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNConvolutionTransposeNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNCrossChannelNormalizationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNCrossChannelNormalizationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNDilatedPoolingMaxGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNDilatedPoolingMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNDropoutGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNDropoutNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNFullyConnectedGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNFullyConnectedNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNGroupNormalizationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNGroupNormalizationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNInstanceNormalizationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNInstanceNormalizationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNLocalContrastNormalizationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNLocalContrastNormalizationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNLogSoftMaxGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNLogSoftMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNLossNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronAbsoluteNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronELUNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronExponentialNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronGeLUNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronHardSigmoidNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronLinearNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronLogarithmNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronPReLUNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronPowerNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronReLUNNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronReLUNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronSigmoidNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronSoftPlusNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronSoftSignNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNeuronTanHNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNNormalizationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingAverageGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingAverageNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingL2NormGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingL2NormNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingMaxGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNPoolingNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNSoftMaxGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNSoftMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNSpatialNormalizationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNSpatialNormalizationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNUpsamplingBilinearGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNUpsamplingBilinearNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNUpsamplingNearestGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNUpsamplingNearestNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSCNNYOLOLossNode;
#[cfg(all(feature = "MPSNNGraphNodes", feature = "block2"))]
pub use self::__MPSNNGraphNodes::MPSGradientNodeBlock;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSHandle;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSImageTransformProvider;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNAdditionGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNAdditionNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNArithmeticGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNArithmeticGradientStateNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNBilinearScaleNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNBinaryArithmeticNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNBinaryGradientStateNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNComparisonNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNConcatenationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNConcatenationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNDivisionNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNFilterNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNForwardLossNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNGradientFilterNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNGradientStateNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNGramMatrixCalculationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNGramMatrixCalculationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNGramMatrixCallback;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNImageNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNInitialGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNLabelsNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNLanczosScaleNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNLossCallback;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNLossGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNMultiaryGradientStateNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNMultiplicationGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNMultiplicationNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNPadGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNPadNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionColumnMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionColumnMeanNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionColumnMinNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionColumnSumNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionFeatureChannelsArgumentMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionFeatureChannelsArgumentMinNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionFeatureChannelsMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionFeatureChannelsMeanNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionFeatureChannelsMinNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionFeatureChannelsSumNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionRowMaxNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionRowMeanNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionRowMinNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionRowSumNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionSpatialMeanGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReductionSpatialMeanNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReshapeGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNReshapeNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNScaleNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNStateNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNSubtractionGradientNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNSubtractionNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNTrainableNode;
#[cfg(feature = "MPSNNGraphNodes")]
pub use self::__MPSNNGraphNodes::MPSNNUnaryReductionNode;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNGridSample"
))]
pub use self::__MPSNNGridSample::MPSNNGridSample;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNOptimizers"
))]
pub use self::__MPSNNOptimizers::MPSNNOptimizer;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNOptimizers"
))]
pub use self::__MPSNNOptimizers::MPSNNOptimizerAdam;
#[cfg(feature = "MPSNNOptimizers")]
pub use self::__MPSNNOptimizers::MPSNNOptimizerDescriptor;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNOptimizers"
))]
pub use self::__MPSNNOptimizers::MPSNNOptimizerRMSProp;
#[cfg(all(
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNOptimizers"
))]
pub use self::__MPSNNOptimizers::MPSNNOptimizerStochasticGradientDescent;
#[cfg(feature = "MPSNNOptimizers")]
pub use self::__MPSNNOptimizers::MPSNNRegularizationType;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNLocalCorrelation;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceBinary;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceColumnMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceColumnMean;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceColumnMin;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceColumnSum;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsAndWeightsMean;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsAndWeightsSum;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsArgumentMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsArgumentMin;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsMean;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsMin;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceFeatureChannelsSum;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceRowMax;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceRowMean;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceRowMin;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceRowSum;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReduce"
))]
pub use self::__MPSNNReduce::MPSNNReduceUnary;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReshape"
))]
pub use self::__MPSNNReshape::MPSNNPad;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReshape"
))]
pub use self::__MPSNNReshape::MPSNNPadGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReshape"
))]
pub use self::__MPSNNReshape::MPSNNReshape;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNReshape"
))]
pub use self::__MPSNNReshape::MPSNNReshapeGradient;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNResize"
))]
pub use self::__MPSNNResize::MPSNNCropAndResizeBilinear;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNResize"
))]
pub use self::__MPSNNResize::MPSNNResizeBilinear;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSNNSlice"
))]
pub use self::__MPSNNSlice::MPSNNSlice;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSCNNBatchNormalizationFlags;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSCNNBinaryConvolutionFlags;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSCNNBinaryConvolutionType;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSCNNConvolutionFlags;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSImageSizeEncodingState;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSNNConvolutionAccumulatorPrecisionOption;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSNNDefaultPadding;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSNNPadding;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSNNPaddingMethod;
#[cfg(feature = "MPSNeuralNetworkTypes")]
pub use self::__MPSNeuralNetworkTypes::MPSNNTrainingStyle;
#[cfg(feature = "MPSRNNLayer")]
pub use self::__MPSRNNLayer::MPSGRUDescriptor;
#[cfg(feature = "MPSRNNLayer")]
pub use self::__MPSRNNLayer::MPSLSTMDescriptor;
#[cfg(feature = "MPSRNNLayer")]
pub use self::__MPSRNNLayer::MPSRNNBidirectionalCombineMode;
#[cfg(feature = "MPSRNNLayer")]
pub use self::__MPSRNNLayer::MPSRNNDescriptor;
#[cfg(all(
    feature = "MPSCNNKernel",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSRNNLayer"
))]
pub use self::__MPSRNNLayer::MPSRNNImageInferenceLayer;
#[cfg(feature = "MPSRNNLayer")]
pub use self::__MPSRNNLayer::MPSRNNMatrixId;
#[cfg(all(feature = "MPSCore", feature = "MPSKernel", feature = "MPSRNNLayer"))]
pub use self::__MPSRNNLayer::MPSRNNMatrixInferenceLayer;
#[cfg(all(feature = "MPSCore", feature = "MPSKernel", feature = "MPSRNNLayer"))]
pub use self::__MPSRNNLayer::MPSRNNMatrixTrainingLayer;
#[cfg(all(feature = "MPSCore", feature = "MPSRNNLayer", feature = "MPSState"))]
pub use self::__MPSRNNLayer::MPSRNNMatrixTrainingState;
#[cfg(all(feature = "MPSCore", feature = "MPSRNNLayer", feature = "MPSState"))]
pub use self::__MPSRNNLayer::MPSRNNRecurrentImageState;
#[cfg(all(feature = "MPSCore", feature = "MPSRNNLayer", feature = "MPSState"))]
pub use self::__MPSRNNLayer::MPSRNNRecurrentMatrixState;
#[cfg(feature = "MPSRNNLayer")]
pub use self::__MPSRNNLayer::MPSRNNSequenceDirection;
#[cfg(feature = "MPSRNNLayer")]
pub use self::__MPSRNNLayer::MPSRNNSingleGateDescriptor;
