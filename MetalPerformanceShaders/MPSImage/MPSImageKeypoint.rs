//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsimagekeypointrangeinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct MPSImageKeypointRangeInfo {
    pub maximumKeypoints: NSUInteger,
    pub minimumThresholdValue: c_float,
}

unsafe impl Encode for MPSImageKeypointRangeInfo {
    const ENCODING: Encoding =
        Encoding::Struct("?", &[<NSUInteger>::ENCODING, <c_float>::ENCODING]);
}

unsafe impl RefEncode for MPSImageKeypointRangeInfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpsimagefindkeypoints?language=objc)
    #[unsafe(super(MPSKernel, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSKernel")]
    pub struct MPSImageFindKeypoints;
);

#[cfg(feature = "MPSKernel")]
unsafe impl NSCoding for MPSImageFindKeypoints {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSCopying for MPSImageFindKeypoints {}

#[cfg(feature = "MPSKernel")]
unsafe impl CopyingHelper for MPSImageFindKeypoints {
    type Result = Self;
}

#[cfg(feature = "MPSKernel")]
unsafe impl NSObjectProtocol for MPSImageFindKeypoints {}

#[cfg(feature = "MPSKernel")]
unsafe impl NSSecureCoding for MPSImageFindKeypoints {}

extern_methods!(
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSImageFindKeypoints {
        #[method(keypointRangeInfo)]
        pub unsafe fn keypointRangeInfo(&self) -> MPSImageKeypointRangeInfo;

        #[method_id(@__retain_semantics Init initWithDevice:info:)]
        pub unsafe fn initWithDevice_info(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
            info: NonNull<MPSImageKeypointRangeInfo>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithDevice:)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:device:)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[method(encodeToCommandBuffer:sourceTexture:regions:numberOfRegions:keypointCountBuffer:keypointCountBufferOffset:keypointDataBuffer:keypointDataBufferOffset:)]
        pub unsafe fn encodeToCommandBuffer_sourceTexture_regions_numberOfRegions_keypointCountBuffer_keypointCountBufferOffset_keypointDataBuffer_keypointDataBufferOffset(
            &self,
            command_buffer: &ProtocolObject<dyn MTLCommandBuffer>,
            source: &ProtocolObject<dyn MTLTexture>,
            regions: NonNull<MTLRegion>,
            number_of_regions: NSUInteger,
            keypoint_count_buffer: &ProtocolObject<dyn MTLBuffer>,
            keypoint_count_buffer_offset: NSUInteger,
            keypoint_data_buffer: &ProtocolObject<dyn MTLBuffer>,
            keypoint_data_buffer_offset: NSUInteger,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `MPSKernel`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSImageFindKeypoints {
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MPSKernel")]
    unsafe impl MPSImageFindKeypoints {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
