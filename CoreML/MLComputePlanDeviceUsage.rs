//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// The anticipated compute devices that would be used for executing a layer/operation.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreml/mlcomputeplandeviceusage?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MLComputePlanDeviceUsage;
);

unsafe impl Send for MLComputePlanDeviceUsage {}

unsafe impl Sync for MLComputePlanDeviceUsage {}

unsafe impl NSObjectProtocol for MLComputePlanDeviceUsage {}

extern_methods!(
    unsafe impl MLComputePlanDeviceUsage {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "MLComputeDeviceProtocol")]
        /// The compute devices that can execute the layer/operation.
        #[method_id(@__retain_semantics Other supportedComputeDevices)]
        pub unsafe fn supportedComputeDevices(
            &self,
        ) -> Retained<NSArray<ProtocolObject<dyn MLComputeDeviceProtocol>>>;

        #[cfg(feature = "MLComputeDeviceProtocol")]
        /// The compute device that the framework prefers to execute the layer/operation.
        #[method_id(@__retain_semantics Other preferredComputeDevice)]
        pub unsafe fn preferredComputeDevice(
            &self,
        ) -> Retained<ProtocolObject<dyn MLComputeDeviceProtocol>>;
    }
);
