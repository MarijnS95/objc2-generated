//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MLTaskState(pub NSInteger);
impl MLTaskState {
    #[doc(alias = "MLTaskStateSuspended")]
    pub const Suspended: Self = Self(1);
    #[doc(alias = "MLTaskStateRunning")]
    pub const Running: Self = Self(2);
    #[doc(alias = "MLTaskStateCancelling")]
    pub const Cancelling: Self = Self(3);
    #[doc(alias = "MLTaskStateCompleted")]
    pub const Completed: Self = Self(4);
    #[doc(alias = "MLTaskStateFailed")]
    pub const Failed: Self = Self(5);
}

unsafe impl Encode for MLTaskState {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for MLTaskState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MLTask;
);

unsafe impl NSObjectProtocol for MLTask {}

extern_methods!(
    unsafe impl MLTask {
        #[method_id(@__retain_semantics Other taskIdentifier)]
        pub unsafe fn taskIdentifier(&self) -> Retained<NSString>;

        #[method(state)]
        pub unsafe fn state(&self) -> MLTaskState;

        #[method_id(@__retain_semantics Other error)]
        pub unsafe fn error(&self) -> Option<Retained<NSError>>;

        #[method(resume)]
        pub unsafe fn resume(&self);

        #[method(cancel)]
        pub unsafe fn cancel(&self);

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
