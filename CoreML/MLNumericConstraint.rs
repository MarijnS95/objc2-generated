//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Allows enforcement of constraints on the values of update parameters.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreml/mlnumericconstraint?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MLNumericConstraint;
);

unsafe impl NSCoding for MLNumericConstraint {}

unsafe impl NSObjectProtocol for MLNumericConstraint {}

unsafe impl NSSecureCoding for MLNumericConstraint {}

extern_methods!(
    unsafe impl MLNumericConstraint {
        #[method_id(minNumber)]
        #[unsafe(method_family = none)]
        pub unsafe fn minNumber(&self) -> Retained<NSNumber>;

        #[method_id(maxNumber)]
        #[unsafe(method_family = none)]
        pub unsafe fn maxNumber(&self) -> Retained<NSNumber>;

        #[method_id(enumeratedNumbers)]
        #[unsafe(method_family = none)]
        pub unsafe fn enumeratedNumbers(&self) -> Option<Retained<NSSet<NSNumber>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MLNumericConstraint {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
