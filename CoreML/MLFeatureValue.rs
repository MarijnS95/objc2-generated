//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MLFeatureValue;

    unsafe impl ClassType for MLFeatureValue {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for MLFeatureValue {}

unsafe impl NSCopying for MLFeatureValue {}

unsafe impl NSObjectProtocol for MLFeatureValue {}

unsafe impl NSSecureCoding for MLFeatureValue {}

extern_methods!(
    unsafe impl MLFeatureValue {
        #[cfg(feature = "MLFeatureType")]
        #[method(type)]
        pub unsafe fn r#type(&self) -> MLFeatureType;

        #[method(isUndefined)]
        pub unsafe fn isUndefined(&self) -> bool;

        #[method(int64Value)]
        pub unsafe fn int64Value(&self) -> i64;

        #[method(doubleValue)]
        pub unsafe fn doubleValue(&self) -> c_double;

        #[method_id(@__retain_semantics Other stringValue)]
        pub unsafe fn stringValue(&self) -> Id<NSString>;

        #[cfg(feature = "MLMultiArray")]
        #[method_id(@__retain_semantics Other multiArrayValue)]
        pub unsafe fn multiArrayValue(&self) -> Option<Id<MLMultiArray>>;

        #[method_id(@__retain_semantics Other dictionaryValue)]
        pub unsafe fn dictionaryValue(&self) -> Id<NSDictionary<AnyObject, NSNumber>>;

        #[cfg(feature = "MLSequence")]
        #[method_id(@__retain_semantics Other sequenceValue)]
        pub unsafe fn sequenceValue(&self) -> Option<Id<MLSequence>>;

        #[method_id(@__retain_semantics Other featureValueWithInt64:)]
        pub unsafe fn featureValueWithInt64(value: i64) -> Id<Self>;

        #[method_id(@__retain_semantics Other featureValueWithDouble:)]
        pub unsafe fn featureValueWithDouble(value: c_double) -> Id<Self>;

        #[method_id(@__retain_semantics Other featureValueWithString:)]
        pub unsafe fn featureValueWithString(value: &NSString) -> Id<Self>;

        #[cfg(feature = "MLMultiArray")]
        #[method_id(@__retain_semantics Other featureValueWithMultiArray:)]
        pub unsafe fn featureValueWithMultiArray(value: &MLMultiArray) -> Id<Self>;

        #[cfg(feature = "MLSequence")]
        #[method_id(@__retain_semantics Other featureValueWithSequence:)]
        pub unsafe fn featureValueWithSequence(sequence: &MLSequence) -> Id<Self>;

        #[cfg(feature = "MLFeatureType")]
        #[method_id(@__retain_semantics Other undefinedFeatureValueWithType:)]
        pub unsafe fn undefinedFeatureValueWithType(r#type: MLFeatureType) -> Id<Self>;

        #[method_id(@__retain_semantics Other featureValueWithDictionary:error:_)]
        pub unsafe fn featureValueWithDictionary_error(
            value: &NSDictionary<AnyObject, NSNumber>,
        ) -> Result<Id<Self>, Id<NSError>>;

        #[method(isEqualToFeatureValue:)]
        pub unsafe fn isEqualToFeatureValue(&self, value: &MLFeatureValue) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MLFeatureValue {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
