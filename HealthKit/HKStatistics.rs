//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkstatisticsoptions?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKStatisticsOptions(pub NSUInteger);
bitflags::bitflags! {
    impl HKStatisticsOptions: NSUInteger {
        const HKStatisticsOptionNone = 0;
        const HKStatisticsOptionSeparateBySource = 1<<0;
        const HKStatisticsOptionDiscreteAverage = 1<<1;
        const HKStatisticsOptionDiscreteMin = 1<<2;
        const HKStatisticsOptionDiscreteMax = 1<<3;
        const HKStatisticsOptionCumulativeSum = 1<<4;
        const HKStatisticsOptionMostRecent = 1<<5;
#[deprecated]
        const HKStatisticsOptionDiscreteMostRecent = HKStatisticsOptions::HKStatisticsOptionMostRecent.0;
        const HKStatisticsOptionDuration = 1<<6;
    }
}

unsafe impl Encode for HKStatisticsOptions {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for HKStatisticsOptions {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkstatistics?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKStatistics;
);

unsafe impl Send for HKStatistics {}

unsafe impl Sync for HKStatistics {}

unsafe impl NSCoding for HKStatistics {}

unsafe impl NSCopying for HKStatistics {}

unsafe impl CopyingHelper for HKStatistics {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKStatistics {}

unsafe impl NSSecureCoding for HKStatistics {}

extern_methods!(
    unsafe impl HKStatistics {
        #[cfg(feature = "HKObjectType")]
        #[method_id(@__retain_semantics Other quantityType)]
        pub unsafe fn quantityType(&self) -> Retained<HKQuantityType>;

        #[method_id(@__retain_semantics Other startDate)]
        pub unsafe fn startDate(&self) -> Retained<NSDate>;

        #[method_id(@__retain_semantics Other endDate)]
        pub unsafe fn endDate(&self) -> Retained<NSDate>;

        #[cfg(feature = "HKSource")]
        #[method_id(@__retain_semantics Other sources)]
        pub unsafe fn sources(&self) -> Option<Retained<NSArray<HKSource>>>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "HKQuantity", feature = "HKSource"))]
        #[method_id(@__retain_semantics Other averageQuantityForSource:)]
        pub unsafe fn averageQuantityForSource(
            &self,
            source: &HKSource,
        ) -> Option<Retained<HKQuantity>>;

        #[cfg(feature = "HKQuantity")]
        #[method_id(@__retain_semantics Other averageQuantity)]
        pub unsafe fn averageQuantity(&self) -> Option<Retained<HKQuantity>>;

        #[cfg(all(feature = "HKQuantity", feature = "HKSource"))]
        #[method_id(@__retain_semantics Other minimumQuantityForSource:)]
        pub unsafe fn minimumQuantityForSource(
            &self,
            source: &HKSource,
        ) -> Option<Retained<HKQuantity>>;

        #[cfg(feature = "HKQuantity")]
        #[method_id(@__retain_semantics Other minimumQuantity)]
        pub unsafe fn minimumQuantity(&self) -> Option<Retained<HKQuantity>>;

        #[cfg(all(feature = "HKQuantity", feature = "HKSource"))]
        #[method_id(@__retain_semantics Other maximumQuantityForSource:)]
        pub unsafe fn maximumQuantityForSource(
            &self,
            source: &HKSource,
        ) -> Option<Retained<HKQuantity>>;

        #[cfg(feature = "HKQuantity")]
        #[method_id(@__retain_semantics Other maximumQuantity)]
        pub unsafe fn maximumQuantity(&self) -> Option<Retained<HKQuantity>>;

        #[cfg(all(feature = "HKQuantity", feature = "HKSource"))]
        #[method_id(@__retain_semantics Other mostRecentQuantityForSource:)]
        pub unsafe fn mostRecentQuantityForSource(
            &self,
            source: &HKSource,
        ) -> Option<Retained<HKQuantity>>;

        #[cfg(feature = "HKQuantity")]
        #[method_id(@__retain_semantics Other mostRecentQuantity)]
        pub unsafe fn mostRecentQuantity(&self) -> Option<Retained<HKQuantity>>;

        #[cfg(feature = "HKSource")]
        #[method_id(@__retain_semantics Other mostRecentQuantityDateIntervalForSource:)]
        pub unsafe fn mostRecentQuantityDateIntervalForSource(
            &self,
            source: &HKSource,
        ) -> Option<Retained<NSDateInterval>>;

        #[method_id(@__retain_semantics Other mostRecentQuantityDateInterval)]
        pub unsafe fn mostRecentQuantityDateInterval(&self) -> Option<Retained<NSDateInterval>>;

        #[cfg(all(feature = "HKQuantity", feature = "HKSource"))]
        #[method_id(@__retain_semantics Other sumQuantityForSource:)]
        pub unsafe fn sumQuantityForSource(
            &self,
            source: &HKSource,
        ) -> Option<Retained<HKQuantity>>;

        #[cfg(feature = "HKQuantity")]
        #[method_id(@__retain_semantics Other sumQuantity)]
        pub unsafe fn sumQuantity(&self) -> Option<Retained<HKQuantity>>;

        #[cfg(feature = "HKQuantity")]
        #[method_id(@__retain_semantics Other duration)]
        pub unsafe fn duration(&self) -> Option<Retained<HKQuantity>>;

        #[cfg(all(feature = "HKQuantity", feature = "HKSource"))]
        #[method_id(@__retain_semantics Other durationForSource:)]
        pub unsafe fn durationForSource(&self, source: &HKSource) -> Option<Retained<HKQuantity>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKStatistics {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
