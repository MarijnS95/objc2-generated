//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;

use crate::*;

/// This category value is to be used for types which don't have a specific value defined.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalue?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValue(pub NSInteger);
impl HKCategoryValue {
    #[doc(alias = "HKCategoryValueNotApplicable")]
    pub const NotApplicable: Self = Self(0);
}

unsafe impl Encode for HKCategoryValue {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValue {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values to indicate the direction of appetite changes.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueappetitechanges?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueAppetiteChanges(pub NSInteger);
impl HKCategoryValueAppetiteChanges {
    #[doc(alias = "HKCategoryValueAppetiteChangesUnspecified")]
    pub const Unspecified: Self = Self(0);
    #[doc(alias = "HKCategoryValueAppetiteChangesNoChange")]
    pub const NoChange: Self = Self(1);
    #[doc(alias = "HKCategoryValueAppetiteChangesDecreased")]
    pub const Decreased: Self = Self(2);
    #[doc(alias = "HKCategoryValueAppetiteChangesIncreased")]
    pub const Increased: Self = Self(3);
}

unsafe impl Encode for HKCategoryValueAppetiteChanges {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueAppetiteChanges {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values that may be used for HKCategorySamples with the HKCategoryTypeIdentifierAppleStandHour
/// type.
///
///
/// the sample.
///
/// continuous minute during the sample.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueapplestandhour?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueAppleStandHour(pub NSInteger);
impl HKCategoryValueAppleStandHour {
    #[doc(alias = "HKCategoryValueAppleStandHourStood")]
    pub const Stood: Self = Self(0);
    #[doc(alias = "HKCategoryValueAppleStandHourIdle")]
    pub const Idle: Self = Self(1);
}

unsafe impl Encode for HKCategoryValueAppleStandHour {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueAppleStandHour {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values that may be used for HKCategorySamples with the
/// HKCategoryTypeIdentifierAppleWalkingSteadinessEvent type.
///
///
/// Steadiness events associated with the user's
/// walking steadiness being low.
///
/// Steadiness events associated with the user's
/// walking steadiness being very low.
///
/// Steadiness events associated with the user's
/// walking steadiness remaining low over a
/// significant time period.
///
/// Steadiness events associated with the user's
/// walking steadiness remaining very low over a
/// significant time period.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueapplewalkingsteadinessevent?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueAppleWalkingSteadinessEvent(pub NSInteger);
impl HKCategoryValueAppleWalkingSteadinessEvent {
    #[doc(alias = "HKCategoryValueAppleWalkingSteadinessEventInitialLow")]
    pub const InitialLow: Self = Self(1);
    #[doc(alias = "HKCategoryValueAppleWalkingSteadinessEventInitialVeryLow")]
    pub const InitialVeryLow: Self = Self(2);
    #[doc(alias = "HKCategoryValueAppleWalkingSteadinessEventRepeatLow")]
    pub const RepeatLow: Self = Self(3);
    #[doc(alias = "HKCategoryValueAppleWalkingSteadinessEventRepeatVeryLow")]
    pub const RepeatVeryLow: Self = Self(4);
}

unsafe impl Encode for HKCategoryValueAppleWalkingSteadinessEvent {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueAppleWalkingSteadinessEvent {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values that may be used for HKCategorySamples with the
/// HKCategoryTypeIdentifierCervicalMucusQuality type.
///
/// These cervical mucus quality values are ordered from least-fertile (Dry) to most-fertile (EggWhite).
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluecervicalmucusquality?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueCervicalMucusQuality(pub NSInteger);
impl HKCategoryValueCervicalMucusQuality {
    #[doc(alias = "HKCategoryValueCervicalMucusQualityDry")]
    pub const Dry: Self = Self(1);
    #[doc(alias = "HKCategoryValueCervicalMucusQualitySticky")]
    pub const Sticky: Self = Self(2);
    #[doc(alias = "HKCategoryValueCervicalMucusQualityCreamy")]
    pub const Creamy: Self = Self(3);
    #[doc(alias = "HKCategoryValueCervicalMucusQualityWatery")]
    pub const Watery: Self = Self(4);
    #[doc(alias = "HKCategoryValueCervicalMucusQualityEggWhite")]
    pub const EggWhite: Self = Self(5);
}

unsafe impl Encode for HKCategoryValueCervicalMucusQuality {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueCervicalMucusQuality {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values to indicate the type of contraceptive.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluecontraceptive?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueContraceptive(pub NSInteger);
impl HKCategoryValueContraceptive {
    #[doc(alias = "HKCategoryValueContraceptiveUnspecified")]
    pub const Unspecified: Self = Self(1);
    #[doc(alias = "HKCategoryValueContraceptiveImplant")]
    pub const Implant: Self = Self(2);
    #[doc(alias = "HKCategoryValueContraceptiveInjection")]
    pub const Injection: Self = Self(3);
    #[doc(alias = "HKCategoryValueContraceptiveIntrauterineDevice")]
    pub const IntrauterineDevice: Self = Self(4);
    #[doc(alias = "HKCategoryValueContraceptiveIntravaginalRing")]
    pub const IntravaginalRing: Self = Self(5);
    #[doc(alias = "HKCategoryValueContraceptiveOral")]
    pub const Oral: Self = Self(6);
    #[doc(alias = "HKCategoryValueContraceptivePatch")]
    pub const Patch: Self = Self(7);
}

unsafe impl Encode for HKCategoryValueContraceptive {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueContraceptive {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Specifies the kind of environmental audio exposure event associated with the sample.
///
///
/// events associated with the user being
/// exposed to a loud environment during a
/// short timespan.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueenvironmentalaudioexposureevent?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueEnvironmentalAudioExposureEvent(pub NSInteger);
impl HKCategoryValueEnvironmentalAudioExposureEvent {
    #[doc(alias = "HKCategoryValueEnvironmentalAudioExposureEventMomentaryLimit")]
    pub const MomentaryLimit: Self = Self(1);
}

unsafe impl Encode for HKCategoryValueEnvironmentalAudioExposureEvent {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueEnvironmentalAudioExposureEvent {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Specifies the kind of headphone audio exposure event associated with the sample.
///
///
/// associated with the user being exposed to
/// significant audio levels throught a
/// seven-day period.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueheadphoneaudioexposureevent?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueHeadphoneAudioExposureEvent(pub NSInteger);
impl HKCategoryValueHeadphoneAudioExposureEvent {
    #[doc(alias = "HKCategoryValueHeadphoneAudioExposureEventSevenDayLimit")]
    pub const SevenDayLimit: Self = Self(1);
}

unsafe impl Encode for HKCategoryValueHeadphoneAudioExposureEvent {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueHeadphoneAudioExposureEvent {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Specifies the type of cardio fitness event.
///
///
/// measurement was recorded that falls into the "Low"
/// fitness classification
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluelowcardiofitnessevent?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueLowCardioFitnessEvent(pub NSInteger);
impl HKCategoryValueLowCardioFitnessEvent {
    #[doc(alias = "HKCategoryValueLowCardioFitnessEventLowFitness")]
    pub const LowFitness: Self = Self(1);
}

unsafe impl Encode for HKCategoryValueLowCardioFitnessEvent {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueLowCardioFitnessEvent {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values to indicate the type of menstrual flow.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluemenstrualflow?language=objc)
// NS_ENUM
#[deprecated]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueMenstrualFlow(pub NSInteger);
impl HKCategoryValueMenstrualFlow {
    #[doc(alias = "HKCategoryValueMenstrualFlowUnspecified")]
    #[deprecated]
    pub const Unspecified: Self = Self(1);
    #[doc(alias = "HKCategoryValueMenstrualFlowLight")]
    #[deprecated]
    pub const Light: Self = Self(2);
    #[doc(alias = "HKCategoryValueMenstrualFlowMedium")]
    #[deprecated]
    pub const Medium: Self = Self(3);
    #[doc(alias = "HKCategoryValueMenstrualFlowHeavy")]
    #[deprecated]
    pub const Heavy: Self = Self(4);
    #[doc(alias = "HKCategoryValueMenstrualFlowNone")]
    #[deprecated]
    pub const None: Self = Self(5);
}

unsafe impl Encode for HKCategoryValueMenstrualFlow {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueMenstrualFlow {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values that may be used for HKCategorySamples with the
/// HKCategoryTypeIdentifierOvulationTestResult type.
///
/// This category value tracks the result of a home ovulation test that use surges in hormone levels to
/// indicate fertility.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueovulationtestresult?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueOvulationTestResult(pub NSInteger);
impl HKCategoryValueOvulationTestResult {
    #[doc(alias = "HKCategoryValueOvulationTestResultNegative")]
    pub const Negative: Self = Self(1);
    #[doc(alias = "HKCategoryValueOvulationTestResultLuteinizingHormoneSurge")]
    pub const LuteinizingHormoneSurge: Self = Self(2);
    #[doc(alias = "HKCategoryValueOvulationTestResultPositive")]
    #[deprecated]
    pub const Positive: Self = Self(HKCategoryValueOvulationTestResult::LuteinizingHormoneSurge.0);
    #[doc(alias = "HKCategoryValueOvulationTestResultIndeterminate")]
    pub const Indeterminate: Self = Self(3);
    #[doc(alias = "HKCategoryValueOvulationTestResultEstrogenSurge")]
    pub const EstrogenSurge: Self = Self(4);
}

unsafe impl Encode for HKCategoryValueOvulationTestResult {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueOvulationTestResult {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values that may be used for HKCategorySamples with the
/// HKCategoryTypeIdentifierPregnancyTestResult type.
///
/// This category value tracks the result of a home pregnancy test that checks for presence of the human
/// chorionic gonadotrophin (hCG) hormone in urine to confirm pregnancy.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluepregnancytestresult?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValuePregnancyTestResult(pub NSInteger);
impl HKCategoryValuePregnancyTestResult {
    #[doc(alias = "HKCategoryValuePregnancyTestResultNegative")]
    pub const Negative: Self = Self(1);
    #[doc(alias = "HKCategoryValuePregnancyTestResultPositive")]
    pub const Positive: Self = Self(2);
    #[doc(alias = "HKCategoryValuePregnancyTestResultIndeterminate")]
    pub const Indeterminate: Self = Self(3);
}

unsafe impl Encode for HKCategoryValuePregnancyTestResult {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValuePregnancyTestResult {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values to indicate whether a data type is present or not.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluepresence?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValuePresence(pub NSInteger);
impl HKCategoryValuePresence {
    #[doc(alias = "HKCategoryValuePresencePresent")]
    pub const Present: Self = Self(0);
    #[doc(alias = "HKCategoryValuePresenceNotPresent")]
    pub const NotPresent: Self = Self(1);
}

unsafe impl Encode for HKCategoryValuePresence {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValuePresence {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values that may be used for HKCategorySamples with the
/// HKCategoryTypeIdentifierProgesteroneTestResult type.
///
/// This category value tracks the result of a home ovulation confirmation test that use surges in hormone
/// levels to confirm if ovulation has occurred.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueprogesteronetestresult?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueProgesteroneTestResult(pub NSInteger);
impl HKCategoryValueProgesteroneTestResult {
    #[doc(alias = "HKCategoryValueProgesteroneTestResultNegative")]
    pub const Negative: Self = Self(1);
    #[doc(alias = "HKCategoryValueProgesteroneTestResultPositive")]
    pub const Positive: Self = Self(2);
    #[doc(alias = "HKCategoryValueProgesteroneTestResultIndeterminate")]
    pub const Indeterminate: Self = Self(3);
}

unsafe impl Encode for HKCategoryValueProgesteroneTestResult {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueProgesteroneTestResult {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values to indicate the severity of a symptom.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueseverity?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueSeverity(pub NSInteger);
impl HKCategoryValueSeverity {
    #[doc(alias = "HKCategoryValueSeverityUnspecified")]
    pub const Unspecified: Self = Self(0);
    #[doc(alias = "HKCategoryValueSeverityNotPresent")]
    pub const NotPresent: Self = Self(1);
    #[doc(alias = "HKCategoryValueSeverityMild")]
    pub const Mild: Self = Self(2);
    #[doc(alias = "HKCategoryValueSeverityModerate")]
    pub const Moderate: Self = Self(3);
    #[doc(alias = "HKCategoryValueSeveritySevere")]
    pub const Severe: Self = Self(4);
}

unsafe impl Encode for HKCategoryValueSeverity {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueSeverity {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values that may be used for HKCategorySamples with the HKCategoryTypeIdentifierSleepAnalysis
/// type.
///
/// To represent the user being both in bed and asleep, use two or more samples with overlapping times. By
/// comparing the start and end times of these samples, it is possible to calculate a number of secondary
/// statistics:
/// 1) The amount of time it took for the user to fall asleep
/// 2) The percentage of time in bed that the user actually spent sleeping,
/// 3) The number of times the user woke while in bed
/// 4) The total amount of time spent both in bed and asleep.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluesleepanalysis?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueSleepAnalysis(pub NSInteger);
impl HKCategoryValueSleepAnalysis {
    #[doc(alias = "HKCategoryValueSleepAnalysisInBed")]
    pub const InBed: Self = Self(0);
    #[doc(alias = "HKCategoryValueSleepAnalysisAsleepUnspecified")]
    pub const AsleepUnspecified: Self = Self(1);
    #[doc(alias = "HKCategoryValueSleepAnalysisAsleep")]
    #[deprecated]
    pub const Asleep: Self = Self(HKCategoryValueSleepAnalysis::AsleepUnspecified.0);
    #[doc(alias = "HKCategoryValueSleepAnalysisAwake")]
    pub const Awake: Self = Self(2);
    #[doc(alias = "HKCategoryValueSleepAnalysisAsleepCore")]
    pub const AsleepCore: Self = Self(3);
    #[doc(alias = "HKCategoryValueSleepAnalysisAsleepDeep")]
    pub const AsleepDeep: Self = Self(4);
    #[doc(alias = "HKCategoryValueSleepAnalysisAsleepREM")]
    pub const AsleepREM: Self = Self(5);
}

unsafe impl Encode for HKCategoryValueSleepAnalysis {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueSleepAnalysis {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Set of values to indicate the type of bleeding.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvaluevaginalbleeding?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueVaginalBleeding(pub NSInteger);
impl HKCategoryValueVaginalBleeding {
    #[doc(alias = "HKCategoryValueVaginalBleedingUnspecified")]
    pub const Unspecified: Self = Self(1);
    #[doc(alias = "HKCategoryValueVaginalBleedingLight")]
    pub const Light: Self = Self(2);
    #[doc(alias = "HKCategoryValueVaginalBleedingMedium")]
    pub const Medium: Self = Self(3);
    #[doc(alias = "HKCategoryValueVaginalBleedingHeavy")]
    pub const Heavy: Self = Self(4);
    #[doc(alias = "HKCategoryValueVaginalBleedingNone")]
    pub const None: Self = Self(5);
}

unsafe impl Encode for HKCategoryValueVaginalBleeding {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueVaginalBleeding {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// Specifies the kind of audio exposure event associated with the sample.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategoryvalueaudioexposureevent?language=objc)
// NS_ENUM
#[deprecated]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKCategoryValueAudioExposureEvent(pub NSInteger);
impl HKCategoryValueAudioExposureEvent {
    #[doc(alias = "HKCategoryValueAudioExposureEventLoudEnvironment")]
    #[deprecated]
    pub const LoudEnvironment: Self = Self(1);
}

unsafe impl Encode for HKCategoryValueAudioExposureEvent {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKCategoryValueAudioExposureEvent {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
