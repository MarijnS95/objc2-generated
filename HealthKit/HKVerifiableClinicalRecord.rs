//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_TYPED_ENUM
pub type HKVerifiableClinicalRecordSourceType = NSString;

extern "C" {
    pub static HKVerifiableClinicalRecordSourceTypeSMARTHealthCard:
        &'static HKVerifiableClinicalRecordSourceType;
}

extern "C" {
    pub static HKVerifiableClinicalRecordSourceTypeEUDigitalCOVIDCertificate:
        &'static HKVerifiableClinicalRecordSourceType;
}

// NS_TYPED_ENUM
pub type HKVerifiableClinicalRecordCredentialType = NSString;

extern "C" {
    pub static HKVerifiableClinicalRecordCredentialTypeCOVID19:
        &'static HKVerifiableClinicalRecordCredentialType;
}

extern "C" {
    pub static HKVerifiableClinicalRecordCredentialTypeImmunization:
        &'static HKVerifiableClinicalRecordCredentialType;
}

extern "C" {
    pub static HKVerifiableClinicalRecordCredentialTypeLaboratory:
        &'static HKVerifiableClinicalRecordCredentialType;
}

extern "C" {
    pub static HKVerifiableClinicalRecordCredentialTypeRecovery:
        &'static HKVerifiableClinicalRecordCredentialType;
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "HKObject", feature = "HKSample"))]
    pub struct HKVerifiableClinicalRecord;

    #[cfg(all(feature = "HKObject", feature = "HKSample"))]
    unsafe impl ClassType for HKVerifiableClinicalRecord {
        #[inherits(HKObject, NSObject)]
        type Super = HKSample;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl NSCoding for HKVerifiableClinicalRecord {}

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl NSObjectProtocol for HKVerifiableClinicalRecord {}

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl NSSecureCoding for HKVerifiableClinicalRecord {}

extern_methods!(
    #[cfg(all(feature = "HKObject", feature = "HKSample"))]
    unsafe impl HKVerifiableClinicalRecord {
        #[method_id(@__retain_semantics Other recordTypes)]
        pub unsafe fn recordTypes(&self) -> Retained<NSArray<NSString>>;

        #[method_id(@__retain_semantics Other issuerIdentifier)]
        pub unsafe fn issuerIdentifier(&self) -> Retained<NSString>;

        #[cfg(feature = "HKVerifiableClinicalRecordSubject")]
        #[method_id(@__retain_semantics Other subject)]
        pub unsafe fn subject(&self) -> Retained<HKVerifiableClinicalRecordSubject>;

        #[method_id(@__retain_semantics Other issuedDate)]
        pub unsafe fn issuedDate(&self) -> Retained<NSDate>;

        #[method_id(@__retain_semantics Other relevantDate)]
        pub unsafe fn relevantDate(&self) -> Retained<NSDate>;

        #[method_id(@__retain_semantics Other expirationDate)]
        pub unsafe fn expirationDate(&self) -> Option<Retained<NSDate>>;

        #[method_id(@__retain_semantics Other itemNames)]
        pub unsafe fn itemNames(&self) -> Retained<NSArray<NSString>>;

        #[method_id(@__retain_semantics Other sourceType)]
        pub unsafe fn sourceType(&self) -> Option<Retained<HKVerifiableClinicalRecordSourceType>>;

        #[method_id(@__retain_semantics Other dataRepresentation)]
        pub unsafe fn dataRepresentation(&self) -> Retained<NSData>;

        #[deprecated]
        #[method_id(@__retain_semantics Other JWSRepresentation)]
        pub unsafe fn JWSRepresentation(&self) -> Retained<NSData>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
