//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An abstract class representing a type of object that can be stored by HealthKit.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkobjecttype?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKObjectType;
);

unsafe impl Send for HKObjectType {}

unsafe impl Sync for HKObjectType {}

unsafe impl NSCoding for HKObjectType {}

unsafe impl NSCopying for HKObjectType {}

unsafe impl CopyingHelper for HKObjectType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKObjectType {}

unsafe impl NSSecureCoding for HKObjectType {}

extern_methods!(
    unsafe impl HKObjectType {
        /// A unique string identifying a type of health object.
        ///
        /// See HKTypeIdentifiers.h for possible values.
        #[method(identifier)]
        #[unsafe(method_family = none)]
        pub unsafe fn identifier(&self) -> Retained<NSString>;

        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "HKTypeIdentifiers")]
        #[method(quantityTypeForIdentifier:)]
        #[unsafe(method_family = none)]
        pub unsafe fn quantityTypeForIdentifier(
            identifier: &HKQuantityTypeIdentifier,
        ) -> Option<Retained<HKQuantityType>>;

        #[cfg(feature = "HKTypeIdentifiers")]
        #[method(categoryTypeForIdentifier:)]
        #[unsafe(method_family = none)]
        pub unsafe fn categoryTypeForIdentifier(
            identifier: &HKCategoryTypeIdentifier,
        ) -> Option<Retained<HKCategoryType>>;

        #[cfg(feature = "HKTypeIdentifiers")]
        #[method(characteristicTypeForIdentifier:)]
        #[unsafe(method_family = none)]
        pub unsafe fn characteristicTypeForIdentifier(
            identifier: &HKCharacteristicTypeIdentifier,
        ) -> Option<Retained<HKCharacteristicType>>;

        #[cfg(feature = "HKTypeIdentifiers")]
        #[method(correlationTypeForIdentifier:)]
        #[unsafe(method_family = none)]
        pub unsafe fn correlationTypeForIdentifier(
            identifier: &HKCorrelationTypeIdentifier,
        ) -> Option<Retained<HKCorrelationType>>;

        #[cfg(feature = "HKTypeIdentifiers")]
        #[method(documentTypeForIdentifier:)]
        #[unsafe(method_family = none)]
        pub unsafe fn documentTypeForIdentifier(
            identifier: &HKDocumentTypeIdentifier,
        ) -> Option<Retained<HKDocumentType>>;

        #[cfg(feature = "HKTypeIdentifiers")]
        #[method(scoredAssessmentTypeForIdentifier:)]
        #[unsafe(method_family = none)]
        pub unsafe fn scoredAssessmentTypeForIdentifier(
            identifier: &HKScoredAssessmentTypeIdentifier,
        ) -> Option<Retained<HKScoredAssessmentType>>;

        #[method(seriesTypeForIdentifier:)]
        #[unsafe(method_family = none)]
        pub unsafe fn seriesTypeForIdentifier(
            identifier: &NSString,
        ) -> Option<Retained<HKSeriesType>>;

        #[method(workoutType)]
        #[unsafe(method_family = none)]
        pub unsafe fn workoutType() -> Retained<HKWorkoutType>;

        #[method(activitySummaryType)]
        #[unsafe(method_family = none)]
        pub unsafe fn activitySummaryType() -> Retained<HKActivitySummaryType>;

        #[method(audiogramSampleType)]
        #[unsafe(method_family = none)]
        pub unsafe fn audiogramSampleType() -> Retained<HKAudiogramSampleType>;

        #[method(electrocardiogramType)]
        #[unsafe(method_family = none)]
        pub unsafe fn electrocardiogramType() -> Retained<HKElectrocardiogramType>;

        #[method(visionPrescriptionType)]
        #[unsafe(method_family = none)]
        pub unsafe fn visionPrescriptionType() -> Retained<HKPrescriptionType>;

        #[method(stateOfMindType)]
        #[unsafe(method_family = none)]
        pub unsafe fn stateOfMindType() -> Retained<HKStateOfMindType>;

        /// Returns YES if the authorization for the object type needs to be requested on per object basis.
        #[method(requiresPerObjectAuthorization)]
        #[unsafe(method_family = none)]
        pub unsafe fn requiresPerObjectAuthorization(&self) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKObjectType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a type of object that describes a characteristic of the user (such as date of birth).
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcharacteristictype?language=objc)
    #[unsafe(super(HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKCharacteristicType;
);

unsafe impl Send for HKCharacteristicType {}

unsafe impl Sync for HKCharacteristicType {}

unsafe impl NSCoding for HKCharacteristicType {}

unsafe impl NSCopying for HKCharacteristicType {}

unsafe impl CopyingHelper for HKCharacteristicType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKCharacteristicType {}

unsafe impl NSSecureCoding for HKCharacteristicType {}

extern_methods!(
    unsafe impl HKCharacteristicType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKCharacteristicType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKCharacteristicType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a type of HKSample.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hksampletype?language=objc)
    #[unsafe(super(HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKSampleType;
);

unsafe impl Send for HKSampleType {}

unsafe impl Sync for HKSampleType {}

unsafe impl NSCoding for HKSampleType {}

unsafe impl NSCopying for HKSampleType {}

unsafe impl CopyingHelper for HKSampleType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKSampleType {}

unsafe impl NSSecureCoding for HKSampleType {}

extern_methods!(
    unsafe impl HKSampleType {
        /// Returns YES if the start and end date for samples of this type are restricted by a maximum duration.
        #[method(isMaximumDurationRestricted)]
        #[unsafe(method_family = none)]
        pub unsafe fn isMaximumDurationRestricted(&self) -> bool;

        /// When the duration is restricted for samples of this type, returns the maximum duration allowed,
        /// calculated as the difference between end and start dates.
        ///
        /// Throws an exception if there is no maximum restriction on duration for samples of this type.
        #[method(maximumAllowedDuration)]
        #[unsafe(method_family = none)]
        pub unsafe fn maximumAllowedDuration(&self) -> NSTimeInterval;

        /// Returns YES if the start and end date for samples of this type are restricted by a minimum duration.
        #[method(isMinimumDurationRestricted)]
        #[unsafe(method_family = none)]
        pub unsafe fn isMinimumDurationRestricted(&self) -> bool;

        /// When the duration is restricted for samples of this type, returns the minimum duration allowed,
        /// calculated as the difference between end and start dates.
        ///
        /// Throws an exception if there is no minimum restriction on duration for samples of this type.
        #[method(minimumAllowedDuration)]
        #[unsafe(method_family = none)]
        pub unsafe fn minimumAllowedDuration(&self) -> NSTimeInterval;

        /// Returns YES if first-party samples of this type are produced using a prediction algorithm, and that algorithm supports recalibration. To recalibrate the
        /// estimates for a sample type, see -[HKHealthStore recalibrateEstimatesForSampleType:atDate:completion:]
        #[method(allowsRecalibrationForEstimates)]
        #[unsafe(method_family = none)]
        pub unsafe fn allowsRecalibrationForEstimates(&self) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKSampleType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKSampleType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represent a type of HKCategorySample.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategorytype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKCategoryType;
);

unsafe impl Send for HKCategoryType {}

unsafe impl Sync for HKCategoryType {}

unsafe impl NSCoding for HKCategoryType {}

unsafe impl NSCopying for HKCategoryType {}

unsafe impl CopyingHelper for HKCategoryType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKCategoryType {}

unsafe impl NSSecureCoding for HKCategoryType {}

extern_methods!(
    unsafe impl HKCategoryType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKCategoryType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKCategoryType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a type of HKCorrelation
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcorrelationtype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKCorrelationType;
);

unsafe impl Send for HKCorrelationType {}

unsafe impl Sync for HKCorrelationType {}

unsafe impl NSCoding for HKCorrelationType {}

unsafe impl NSCopying for HKCorrelationType {}

unsafe impl CopyingHelper for HKCorrelationType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKCorrelationType {}

unsafe impl NSSecureCoding for HKCorrelationType {}

extern_methods!(
    unsafe impl HKCorrelationType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKCorrelationType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKCorrelationType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a type of HKDocument.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkdocumenttype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKDocumentType;
);

unsafe impl Send for HKDocumentType {}

unsafe impl Sync for HKDocumentType {}

unsafe impl NSCoding for HKDocumentType {}

unsafe impl NSCopying for HKDocumentType {}

unsafe impl CopyingHelper for HKDocumentType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKDocumentType {}

unsafe impl NSSecureCoding for HKDocumentType {}

extern_methods!(
    unsafe impl HKDocumentType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKDocumentType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKDocumentType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents types of HKQuantitySamples.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkquantitytype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKQuantityType;
);

unsafe impl Send for HKQuantityType {}

unsafe impl Sync for HKQuantityType {}

unsafe impl NSCoding for HKQuantityType {}

unsafe impl NSCopying for HKQuantityType {}

unsafe impl CopyingHelper for HKQuantityType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKQuantityType {}

unsafe impl NSSecureCoding for HKQuantityType {}

extern_methods!(
    unsafe impl HKQuantityType {
        #[cfg(feature = "HKQuantityAggregationStyle")]
        #[method(aggregationStyle)]
        #[unsafe(method_family = none)]
        pub unsafe fn aggregationStyle(&self) -> HKQuantityAggregationStyle;

        #[cfg(feature = "HKUnit")]
        /// Returns YES if the type of HKQuantitySample represented by the receiver can be created with quantities
        /// of the given unit.
        #[method(isCompatibleWithUnit:)]
        #[unsafe(method_family = none)]
        pub unsafe fn isCompatibleWithUnit(&self, unit: &HKUnit) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKQuantityType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKQuantityType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a workout or exercise
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkworkouttype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKWorkoutType;
);

unsafe impl Send for HKWorkoutType {}

unsafe impl Sync for HKWorkoutType {}

unsafe impl NSCoding for HKWorkoutType {}

unsafe impl NSCopying for HKWorkoutType {}

unsafe impl CopyingHelper for HKWorkoutType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKWorkoutType {}

unsafe impl NSSecureCoding for HKWorkoutType {}

extern_methods!(
    unsafe impl HKWorkoutType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKWorkoutType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKWorkoutType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a type of HKSeriesSample
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkseriestype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKSeriesType;
);

unsafe impl Send for HKSeriesType {}

unsafe impl Sync for HKSeriesType {}

unsafe impl NSCoding for HKSeriesType {}

unsafe impl NSCopying for HKSeriesType {}

unsafe impl CopyingHelper for HKSeriesType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKSeriesType {}

unsafe impl NSSecureCoding for HKSeriesType {}

extern_methods!(
    unsafe impl HKSeriesType {
        #[method(workoutRouteType)]
        #[unsafe(method_family = none)]
        pub unsafe fn workoutRouteType() -> Retained<Self>;

        #[method(heartbeatSeriesType)]
        #[unsafe(method_family = none)]
        pub unsafe fn heartbeatSeriesType() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKSeriesType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKSeriesType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents an HKActivitySummary
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkactivitysummarytype?language=objc)
    #[unsafe(super(HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKActivitySummaryType;
);

unsafe impl Send for HKActivitySummaryType {}

unsafe impl Sync for HKActivitySummaryType {}

unsafe impl NSCoding for HKActivitySummaryType {}

unsafe impl NSCopying for HKActivitySummaryType {}

unsafe impl CopyingHelper for HKActivitySummaryType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKActivitySummaryType {}

unsafe impl NSSecureCoding for HKActivitySummaryType {}

extern_methods!(
    unsafe impl HKActivitySummaryType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKActivitySummaryType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKActivitySummaryType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents an audiogram sample.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkaudiogramsampletype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKAudiogramSampleType;
);

unsafe impl Send for HKAudiogramSampleType {}

unsafe impl Sync for HKAudiogramSampleType {}

unsafe impl NSCoding for HKAudiogramSampleType {}

unsafe impl NSCopying for HKAudiogramSampleType {}

unsafe impl CopyingHelper for HKAudiogramSampleType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKAudiogramSampleType {}

unsafe impl NSSecureCoding for HKAudiogramSampleType {}

extern_methods!(
    unsafe impl HKAudiogramSampleType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKAudiogramSampleType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKAudiogramSampleType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents an electrocardiogram sample.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkelectrocardiogramtype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKElectrocardiogramType;
);

unsafe impl Send for HKElectrocardiogramType {}

unsafe impl Sync for HKElectrocardiogramType {}

unsafe impl NSCoding for HKElectrocardiogramType {}

unsafe impl NSCopying for HKElectrocardiogramType {}

unsafe impl CopyingHelper for HKElectrocardiogramType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKElectrocardiogramType {}

unsafe impl NSSecureCoding for HKElectrocardiogramType {}

extern_methods!(
    unsafe impl HKElectrocardiogramType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKElectrocardiogramType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKElectrocardiogramType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a prescription type
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkprescriptiontype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKPrescriptionType;
);

unsafe impl Send for HKPrescriptionType {}

unsafe impl Sync for HKPrescriptionType {}

unsafe impl NSCoding for HKPrescriptionType {}

unsafe impl NSCopying for HKPrescriptionType {}

unsafe impl CopyingHelper for HKPrescriptionType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKPrescriptionType {}

unsafe impl NSSecureCoding for HKPrescriptionType {}

extern_methods!(
    unsafe impl HKPrescriptionType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKPrescriptionType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKPrescriptionType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents a scored assessment sample
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkscoredassessmenttype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKScoredAssessmentType;
);

unsafe impl Send for HKScoredAssessmentType {}

unsafe impl Sync for HKScoredAssessmentType {}

unsafe impl NSCoding for HKScoredAssessmentType {}

unsafe impl NSCopying for HKScoredAssessmentType {}

unsafe impl CopyingHelper for HKScoredAssessmentType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKScoredAssessmentType {}

unsafe impl NSSecureCoding for HKScoredAssessmentType {}

extern_methods!(
    unsafe impl HKScoredAssessmentType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKScoredAssessmentType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKScoredAssessmentType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// Represents an experienced feeling and its surrounding context.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkstateofmindtype?language=objc)
    #[unsafe(super(HKSampleType, HKObjectType, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKStateOfMindType;
);

unsafe impl Send for HKStateOfMindType {}

unsafe impl Sync for HKStateOfMindType {}

unsafe impl NSCoding for HKStateOfMindType {}

unsafe impl NSCopying for HKStateOfMindType {}

unsafe impl CopyingHelper for HKStateOfMindType {
    type Result = Self;
}

unsafe impl NSObjectProtocol for HKStateOfMindType {}

unsafe impl NSSecureCoding for HKStateOfMindType {}

extern_methods!(
    unsafe impl HKStateOfMindType {}
);

extern_methods!(
    /// Methods declared on superclass `HKObjectType`
    unsafe impl HKStateOfMindType {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKStateOfMindType {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
