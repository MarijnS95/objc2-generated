//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An HKObject subclass representing an category measurement
    ///
    /// Category samples are samples that can be categorized into an enum of concrete values
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkcategorysample?language=objc)
    #[unsafe(super(HKSample, HKObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "HKObject", feature = "HKSample"))]
    pub struct HKCategorySample;
);

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl Send for HKCategorySample {}

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl Sync for HKCategorySample {}

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl NSCoding for HKCategorySample {}

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl NSObjectProtocol for HKCategorySample {}

#[cfg(all(feature = "HKObject", feature = "HKSample"))]
unsafe impl NSSecureCoding for HKCategorySample {}

extern_methods!(
    #[cfg(all(feature = "HKObject", feature = "HKSample"))]
    unsafe impl HKCategorySample {
        #[cfg(feature = "HKObjectType")]
        #[method_id(@__retain_semantics Other categoryType)]
        pub unsafe fn categoryType(&self) -> Retained<HKCategoryType>;

        /// The preferred enum for the value is determined by the receiver's category type.
        #[method(value)]
        pub unsafe fn value(&self) -> NSInteger;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "HKObjectType")]
        /// Creates a new HKCategorySample.
        ///
        ///
        /// Parameter `type`: The type of the sample.
        ///
        /// Parameter `value`: The enumeration value for the sample. See HKCategoryTypeIdentifier for appropriate value.
        ///
        /// Parameter `startDate`: The start date of the sample.
        ///
        /// Parameter `endDate`: The end date of the sample.
        ///
        /// Parameter `metadata`: Metadata for the sample (optional).
        #[method_id(@__retain_semantics Other categorySampleWithType:value:startDate:endDate:metadata:)]
        pub unsafe fn categorySampleWithType_value_startDate_endDate_metadata(
            r#type: &HKCategoryType,
            value: NSInteger,
            start_date: &NSDate,
            end_date: &NSDate,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;

        #[cfg(feature = "HKObjectType")]
        /// Creates a new HKCategorySample.
        ///
        ///
        /// Parameter `type`: The type of the sample.
        ///
        /// Parameter `value`: The enumeration value for the sample. See HKCategoryTypeIdentifier for appropriate value.
        ///
        /// Parameter `startDate`: The start date of the sample.
        ///
        /// Parameter `endDate`: The end date of the sample.
        #[method_id(@__retain_semantics Other categorySampleWithType:value:startDate:endDate:)]
        pub unsafe fn categorySampleWithType_value_startDate_endDate(
            r#type: &HKCategoryType,
            value: NSInteger,
            start_date: &NSDate,
            end_date: &NSDate,
        ) -> Retained<Self>;

        #[cfg(all(feature = "HKDevice", feature = "HKObjectType"))]
        /// Creates a new HKCategorySample.
        ///
        ///
        /// Parameter `type`: The type of the sample.
        ///
        /// Parameter `value`: The enumeration value for the sample. See HKCategoryTypeIdentifier for appropriate value.
        ///
        /// Parameter `startDate`: The start date of the sample.
        ///
        /// Parameter `endDate`: The end date of the sample.
        ///
        /// Parameter `device`: The HKDevice that generated the sample (optional).
        ///
        /// Parameter `metadata`: Metadata for the sample (optional).
        #[method_id(@__retain_semantics Other categorySampleWithType:value:startDate:endDate:device:metadata:)]
        pub unsafe fn categorySampleWithType_value_startDate_endDate_device_metadata(
            r#type: &HKCategoryType,
            value: NSInteger,
            start_date: &NSDate,
            end_date: &NSDate,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "HKObject", feature = "HKSample"))]
    unsafe impl HKCategorySample {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/healthkit/hkpredicatekeypathcategoryvalue?language=objc)
    pub static HKPredicateKeyPathCategoryValue: &'static NSString;
}
