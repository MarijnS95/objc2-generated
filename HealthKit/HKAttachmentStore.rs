//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-uniform-type-identifiers")]
use objc2_uniform_type_identifiers::*;

use crate::*;

extern_class!(
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKAttachmentStore;
);

unsafe impl NSObjectProtocol for HKAttachmentStore {}

extern_methods!(
    unsafe impl HKAttachmentStore {
        #[cfg(feature = "HKHealthStore")]
        #[method_id(@__retain_semantics Init initWithHealthStore:)]
        pub unsafe fn initWithHealthStore(
            this: Allocated<Self>,
            health_store: &HKHealthStore,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "HKAttachment",
            feature = "HKObject",
            feature = "block2",
            feature = "objc2-uniform-type-identifiers"
        ))]
        #[method(addAttachmentToObject:name:contentType:URL:metadata:completion:)]
        pub unsafe fn addAttachmentToObject_name_contentType_URL_metadata_completion(
            &self,
            object: &HKObject,
            name: &NSString,
            content_type: &UTType,
            url: &NSURL,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
            completion: &block2::Block<dyn Fn(*mut HKAttachment, *mut NSError)>,
        );

        #[cfg(all(feature = "HKAttachment", feature = "HKObject", feature = "block2"))]
        #[method(removeAttachment:fromObject:completion:)]
        pub unsafe fn removeAttachment_fromObject_completion(
            &self,
            attachment: &HKAttachment,
            object: &HKObject,
            completion: &block2::Block<dyn Fn(Bool, *mut NSError)>,
        );

        #[cfg(all(feature = "HKAttachment", feature = "HKObject", feature = "block2"))]
        #[method(getAttachmentsForObject:completion:)]
        pub unsafe fn getAttachmentsForObject_completion(
            &self,
            object: &HKObject,
            completion: &block2::Block<dyn Fn(*mut NSArray<HKAttachment>, *mut NSError)>,
        );

        #[cfg(all(feature = "HKAttachment", feature = "block2"))]
        #[method_id(@__retain_semantics Other getDataForAttachment:completion:)]
        pub unsafe fn getDataForAttachment_completion(
            &self,
            attachment: &HKAttachment,
            completion: &block2::Block<dyn Fn(*mut NSData, *mut NSError)>,
        ) -> Retained<NSProgress>;

        #[cfg(all(feature = "HKAttachment", feature = "block2"))]
        #[method_id(@__retain_semantics Other streamDataForAttachment:dataHandler:)]
        pub unsafe fn streamDataForAttachment_dataHandler(
            &self,
            attachment: &HKAttachment,
            data_handler: &block2::Block<dyn Fn(*mut NSData, *mut NSError, Bool)>,
        ) -> Retained<NSProgress>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKAttachmentStore {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
