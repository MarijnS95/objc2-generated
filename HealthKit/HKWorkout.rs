//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum HKWorkoutActivityType {
        #[doc(alias = "HKWorkoutActivityTypeAmericanFootball")]
        AmericanFootball = 1,
        #[doc(alias = "HKWorkoutActivityTypeArchery")]
        Archery = 2,
        #[doc(alias = "HKWorkoutActivityTypeAustralianFootball")]
        AustralianFootball = 3,
        #[doc(alias = "HKWorkoutActivityTypeBadminton")]
        Badminton = 4,
        #[doc(alias = "HKWorkoutActivityTypeBaseball")]
        Baseball = 5,
        #[doc(alias = "HKWorkoutActivityTypeBasketball")]
        Basketball = 6,
        #[doc(alias = "HKWorkoutActivityTypeBowling")]
        Bowling = 7,
        #[doc(alias = "HKWorkoutActivityTypeBoxing")]
        Boxing = 8,
        #[doc(alias = "HKWorkoutActivityTypeClimbing")]
        Climbing = 9,
        #[doc(alias = "HKWorkoutActivityTypeCricket")]
        Cricket = 10,
        #[doc(alias = "HKWorkoutActivityTypeCrossTraining")]
        CrossTraining = 11,
        #[doc(alias = "HKWorkoutActivityTypeCurling")]
        Curling = 12,
        #[doc(alias = "HKWorkoutActivityTypeCycling")]
        Cycling = 13,
        #[deprecated = "Use HKWorkoutActivityTypeSocialDance or HKWorkoutActivityTypeCardioDance"]
        #[doc(alias = "HKWorkoutActivityTypeDance")]
        Dance = 14,
        #[deprecated = "Use HKWorkoutActivityTypeSocialDance, HKWorkoutActivityTypeCardioDance, HKWorkoutActivityTypeBarre or HKWorkoutActivityTypePilates"]
        #[doc(alias = "HKWorkoutActivityTypeDanceInspiredTraining")]
        DanceInspiredTraining = 15,
        #[doc(alias = "HKWorkoutActivityTypeElliptical")]
        Elliptical = 16,
        #[doc(alias = "HKWorkoutActivityTypeEquestrianSports")]
        EquestrianSports = 17,
        #[doc(alias = "HKWorkoutActivityTypeFencing")]
        Fencing = 18,
        #[doc(alias = "HKWorkoutActivityTypeFishing")]
        Fishing = 19,
        #[doc(alias = "HKWorkoutActivityTypeFunctionalStrengthTraining")]
        FunctionalStrengthTraining = 20,
        #[doc(alias = "HKWorkoutActivityTypeGolf")]
        Golf = 21,
        #[doc(alias = "HKWorkoutActivityTypeGymnastics")]
        Gymnastics = 22,
        #[doc(alias = "HKWorkoutActivityTypeHandball")]
        Handball = 23,
        #[doc(alias = "HKWorkoutActivityTypeHiking")]
        Hiking = 24,
        #[doc(alias = "HKWorkoutActivityTypeHockey")]
        Hockey = 25,
        #[doc(alias = "HKWorkoutActivityTypeHunting")]
        Hunting = 26,
        #[doc(alias = "HKWorkoutActivityTypeLacrosse")]
        Lacrosse = 27,
        #[doc(alias = "HKWorkoutActivityTypeMartialArts")]
        MartialArts = 28,
        #[doc(alias = "HKWorkoutActivityTypeMindAndBody")]
        MindAndBody = 29,
        #[deprecated = "Use HKWorkoutActivityTypeMixedCardio or HKWorkoutActivityTypeHighIntensityIntervalTraining"]
        #[doc(alias = "HKWorkoutActivityTypeMixedMetabolicCardioTraining")]
        MixedMetabolicCardioTraining = 30,
        #[doc(alias = "HKWorkoutActivityTypePaddleSports")]
        PaddleSports = 31,
        #[doc(alias = "HKWorkoutActivityTypePlay")]
        Play = 32,
        #[doc(alias = "HKWorkoutActivityTypePreparationAndRecovery")]
        PreparationAndRecovery = 33,
        #[doc(alias = "HKWorkoutActivityTypeRacquetball")]
        Racquetball = 34,
        #[doc(alias = "HKWorkoutActivityTypeRowing")]
        Rowing = 35,
        #[doc(alias = "HKWorkoutActivityTypeRugby")]
        Rugby = 36,
        #[doc(alias = "HKWorkoutActivityTypeRunning")]
        Running = 37,
        #[doc(alias = "HKWorkoutActivityTypeSailing")]
        Sailing = 38,
        #[doc(alias = "HKWorkoutActivityTypeSkatingSports")]
        SkatingSports = 39,
        #[doc(alias = "HKWorkoutActivityTypeSnowSports")]
        SnowSports = 40,
        #[doc(alias = "HKWorkoutActivityTypeSoccer")]
        Soccer = 41,
        #[doc(alias = "HKWorkoutActivityTypeSoftball")]
        Softball = 42,
        #[doc(alias = "HKWorkoutActivityTypeSquash")]
        Squash = 43,
        #[doc(alias = "HKWorkoutActivityTypeStairClimbing")]
        StairClimbing = 44,
        #[doc(alias = "HKWorkoutActivityTypeSurfingSports")]
        SurfingSports = 45,
        #[doc(alias = "HKWorkoutActivityTypeSwimming")]
        Swimming = 46,
        #[doc(alias = "HKWorkoutActivityTypeTableTennis")]
        TableTennis = 47,
        #[doc(alias = "HKWorkoutActivityTypeTennis")]
        Tennis = 48,
        #[doc(alias = "HKWorkoutActivityTypeTrackAndField")]
        TrackAndField = 49,
        #[doc(alias = "HKWorkoutActivityTypeTraditionalStrengthTraining")]
        TraditionalStrengthTraining = 50,
        #[doc(alias = "HKWorkoutActivityTypeVolleyball")]
        Volleyball = 51,
        #[doc(alias = "HKWorkoutActivityTypeWalking")]
        Walking = 52,
        #[doc(alias = "HKWorkoutActivityTypeWaterFitness")]
        WaterFitness = 53,
        #[doc(alias = "HKWorkoutActivityTypeWaterPolo")]
        WaterPolo = 54,
        #[doc(alias = "HKWorkoutActivityTypeWaterSports")]
        WaterSports = 55,
        #[doc(alias = "HKWorkoutActivityTypeWrestling")]
        Wrestling = 56,
        #[doc(alias = "HKWorkoutActivityTypeYoga")]
        Yoga = 57,
        #[doc(alias = "HKWorkoutActivityTypeBarre")]
        Barre = 58,
        #[doc(alias = "HKWorkoutActivityTypeCoreTraining")]
        CoreTraining = 59,
        #[doc(alias = "HKWorkoutActivityTypeCrossCountrySkiing")]
        CrossCountrySkiing = 60,
        #[doc(alias = "HKWorkoutActivityTypeDownhillSkiing")]
        DownhillSkiing = 61,
        #[doc(alias = "HKWorkoutActivityTypeFlexibility")]
        Flexibility = 62,
        #[doc(alias = "HKWorkoutActivityTypeHighIntensityIntervalTraining")]
        HighIntensityIntervalTraining = 63,
        #[doc(alias = "HKWorkoutActivityTypeJumpRope")]
        JumpRope = 64,
        #[doc(alias = "HKWorkoutActivityTypeKickboxing")]
        Kickboxing = 65,
        #[doc(alias = "HKWorkoutActivityTypePilates")]
        Pilates = 66,
        #[doc(alias = "HKWorkoutActivityTypeSnowboarding")]
        Snowboarding = 67,
        #[doc(alias = "HKWorkoutActivityTypeStairs")]
        Stairs = 68,
        #[doc(alias = "HKWorkoutActivityTypeStepTraining")]
        StepTraining = 69,
        #[doc(alias = "HKWorkoutActivityTypeWheelchairWalkPace")]
        WheelchairWalkPace = 70,
        #[doc(alias = "HKWorkoutActivityTypeWheelchairRunPace")]
        WheelchairRunPace = 71,
        #[doc(alias = "HKWorkoutActivityTypeTaiChi")]
        TaiChi = 72,
        #[doc(alias = "HKWorkoutActivityTypeMixedCardio")]
        MixedCardio = 73,
        #[doc(alias = "HKWorkoutActivityTypeHandCycling")]
        HandCycling = 74,
        #[doc(alias = "HKWorkoutActivityTypeDiscSports")]
        DiscSports = 75,
        #[doc(alias = "HKWorkoutActivityTypeFitnessGaming")]
        FitnessGaming = 76,
        #[doc(alias = "HKWorkoutActivityTypeCardioDance")]
        CardioDance = 77,
        #[doc(alias = "HKWorkoutActivityTypeSocialDance")]
        SocialDance = 78,
        #[doc(alias = "HKWorkoutActivityTypePickleball")]
        Pickleball = 79,
        #[doc(alias = "HKWorkoutActivityTypeCooldown")]
        Cooldown = 80,
        #[doc(alias = "HKWorkoutActivityTypeSwimBikeRun")]
        SwimBikeRun = 82,
        #[doc(alias = "HKWorkoutActivityTypeTransition")]
        Transition = 83,
        #[doc(alias = "HKWorkoutActivityTypeUnderwaterDiving")]
        UnderwaterDiving = 84,
        #[doc(alias = "HKWorkoutActivityTypeOther")]
        Other = 3000,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum HKWorkoutEventType {
        #[doc(alias = "HKWorkoutEventTypePause")]
        Pause = 1,
        #[doc(alias = "HKWorkoutEventTypeResume")]
        Resume = 2,
        #[doc(alias = "HKWorkoutEventTypeLap")]
        Lap = 3,
        #[doc(alias = "HKWorkoutEventTypeMarker")]
        Marker = 4,
        #[doc(alias = "HKWorkoutEventTypeMotionPaused")]
        MotionPaused = 5,
        #[doc(alias = "HKWorkoutEventTypeMotionResumed")]
        MotionResumed = 6,
        #[doc(alias = "HKWorkoutEventTypeSegment")]
        Segment = 7,
        #[doc(alias = "HKWorkoutEventTypePauseOrResumeRequest")]
        PauseOrResumeRequest = 8,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKWorkoutEvent;

    unsafe impl ClassType for HKWorkoutEvent {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCoding for HKWorkoutEvent {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCopying for HKWorkoutEvent {}

unsafe impl NSObjectProtocol for HKWorkoutEvent {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSSecureCoding for HKWorkoutEvent {}

extern_methods!(
    unsafe impl HKWorkoutEvent {
        #[method(type)]
        pub unsafe fn r#type(&self) -> HKWorkoutEventType;

        #[cfg(feature = "Foundation_NSDate")]
        #[deprecated]
        #[method_id(@__retain_semantics Other date)]
        pub unsafe fn date(&self) -> Id<NSDate>;

        #[cfg(feature = "Foundation_NSDateInterval")]
        #[method_id(@__retain_semantics Other dateInterval)]
        pub unsafe fn dateInterval(&self) -> Id<NSDateInterval>;

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other metadata)]
        pub unsafe fn metadata(&self) -> Option<Id<NSDictionary<NSString, AnyObject>>>;

        #[cfg(feature = "Foundation_NSDate")]
        #[deprecated]
        #[method_id(@__retain_semantics Other workoutEventWithType:date:)]
        pub unsafe fn workoutEventWithType_date(
            r#type: HKWorkoutEventType,
            date: &NSDate,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[deprecated]
        #[method_id(@__retain_semantics Other workoutEventWithType:date:metadata:)]
        pub unsafe fn workoutEventWithType_date_metadata(
            r#type: HKWorkoutEventType,
            date: &NSDate,
            metadata: &NSDictionary<NSString, AnyObject>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDateInterval",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other workoutEventWithType:dateInterval:metadata:)]
        pub unsafe fn workoutEventWithType_dateInterval_metadata(
            r#type: HKWorkoutEventType,
            date_interval: &NSDateInterval,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKWorkoutEvent {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "HealthKit_HKObject", feature = "HealthKit_HKSample"))]
    pub struct HKWorkout;

    #[cfg(all(feature = "HealthKit_HKObject", feature = "HealthKit_HKSample"))]
    unsafe impl ClassType for HKWorkout {
        #[inherits(HKObject, NSObject)]
        type Super = HKSample;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(
    feature = "Foundation_NSObject",
    feature = "HealthKit_HKObject",
    feature = "HealthKit_HKSample"
))]
unsafe impl NSCoding for HKWorkout {}

#[cfg(all(feature = "HealthKit_HKObject", feature = "HealthKit_HKSample"))]
unsafe impl NSObjectProtocol for HKWorkout {}

#[cfg(all(
    feature = "Foundation_NSObject",
    feature = "HealthKit_HKObject",
    feature = "HealthKit_HKSample"
))]
unsafe impl NSSecureCoding for HKWorkout {}

extern_methods!(
    #[cfg(all(feature = "HealthKit_HKObject", feature = "HealthKit_HKSample"))]
    unsafe impl HKWorkout {
        #[method(workoutActivityType)]
        pub unsafe fn workoutActivityType(&self) -> HKWorkoutActivityType;

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other workoutEvents)]
        pub unsafe fn workoutEvents(&self) -> Option<Id<NSArray<HKWorkoutEvent>>>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "HealthKit_HKWorkoutActivity"
        ))]
        #[method_id(@__retain_semantics Other workoutActivities)]
        pub unsafe fn workoutActivities(&self) -> Id<NSArray<HKWorkoutActivity>>;

        #[cfg(feature = "Foundation_NSDate")]
        #[method(duration)]
        pub unsafe fn duration(&self) -> NSTimeInterval;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for HKQuantityTypeIdentifierActiveEnergyBurned"]
        #[method_id(@__retain_semantics Other totalEnergyBurned)]
        pub unsafe fn totalEnergyBurned(&self) -> Option<Id<HKQuantity>>;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for the desired distance type"]
        #[method_id(@__retain_semantics Other totalDistance)]
        pub unsafe fn totalDistance(&self) -> Option<Id<HKQuantity>>;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for HKQuantityTypeIdentifierSwimmingStrokeCount"]
        #[method_id(@__retain_semantics Other totalSwimmingStrokeCount)]
        pub unsafe fn totalSwimmingStrokeCount(&self) -> Option<Id<HKQuantity>>;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for HKQuantityTypeIdentifierFlightClimbed"]
        #[method_id(@__retain_semantics Other totalFlightsClimbed)]
        pub unsafe fn totalFlightsClimbed(&self) -> Option<Id<HKQuantity>>;

        #[cfg(all(
            feature = "Foundation_NSDictionary",
            feature = "HealthKit_HKObjectType",
            feature = "HealthKit_HKStatistics"
        ))]
        #[method_id(@__retain_semantics Other allStatistics)]
        pub unsafe fn allStatistics(&self) -> Id<NSDictionary<HKQuantityType, HKStatistics>>;

        #[cfg(all(feature = "HealthKit_HKObjectType", feature = "HealthKit_HKStatistics"))]
        #[method_id(@__retain_semantics Other statisticsForType:)]
        pub unsafe fn statisticsForType(
            &self,
            quantity_type: &HKQuantityType,
        ) -> Option<Id<HKStatistics>>;

        #[cfg(feature = "Foundation_NSDate")]
        #[deprecated = "Use HKWorkoutBuilder"]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKQuantity"
        ))]
        #[deprecated = "Use HKWorkoutBuilder"]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity"
        ))]
        #[deprecated = "Use HKWorkoutBuilder"]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKQuantity"
        ))]
        #[deprecated = "Use HKWorkoutBuilder"]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_duration_totalEnergyBurned_totalDistance_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            duration: NSTimeInterval,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity"
        ))]
        #[deprecated = "Use HKWorkoutBuilder"]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_duration_totalEnergyBurned_totalDistance_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            duration: NSTimeInterval,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity"
        ))]
        #[deprecated = "Use HKWorkoutBuilder"]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalSwimmingStrokeCount:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_totalSwimmingStrokeCount_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            total_swimming_stroke_count: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity"
        ))]
        #[deprecated = "Use HKWorkoutBuilder"]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalFlightsClimbed:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_totalFlightsClimbed_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            total_flights_climbed: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `HKObject`
    #[cfg(all(feature = "HealthKit_HKObject", feature = "HealthKit_HKSample"))]
    unsafe impl HKWorkout {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "HealthKit_HKObject", feature = "HealthKit_HKSample"))]
    unsafe impl HKWorkout {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutDuration: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutTotalDistance: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutTotalEnergyBurned: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutType: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutTotalSwimmingStrokeCount: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutTotalFlightsClimbed: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutSumQuantity: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutMinimumQuantity: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutMaximumQuantity: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutAverageQuantity: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKPredicateKeyPathWorkoutActivity: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKWorkoutSortIdentifierDuration: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKWorkoutSortIdentifierTotalDistance: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKWorkoutSortIdentifierTotalEnergyBurned: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKWorkoutSortIdentifierTotalSwimmingStrokeCount: &'static NSString);

#[cfg(feature = "Foundation_NSString")]
extern_static!(HKWorkoutSortIdentifierTotalFlightsClimbed: &'static NSString);
