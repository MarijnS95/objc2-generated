//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[cfg(feature = "Foundation_NSString")]
typed_enum!(
    pub type HKFHIRResourceType = NSString;
);

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeAllergyIntolerance: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeCondition: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeCoverage: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeDiagnosticReport: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeDocumentReference: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeImmunization: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeMedicationDispense: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeMedicationOrder: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeMedicationRequest: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeMedicationStatement: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeObservation: &'static HKFHIRResourceType;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static HKFHIRResourceTypeProcedure: &'static HKFHIRResourceType;
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKFHIRResource;

    unsafe impl ClassType for HKFHIRResource {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCoding for HKFHIRResource {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSCopying for HKFHIRResource {}

unsafe impl NSObjectProtocol for HKFHIRResource {}

#[cfg(feature = "Foundation_NSObject")]
unsafe impl NSSecureCoding for HKFHIRResource {}

extern_methods!(
    unsafe impl HKFHIRResource {
        #[cfg(feature = "HealthKit_HKFHIRVersion")]
        #[method_id(@__retain_semantics Other FHIRVersion)]
        pub unsafe fn FHIRVersion(&self) -> Id<HKFHIRVersion>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other resourceType)]
        pub unsafe fn resourceType(&self) -> Id<HKFHIRResourceType>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSData")]
        #[method_id(@__retain_semantics Other data)]
        pub unsafe fn data(&self) -> Id<NSData>;

        #[cfg(feature = "Foundation_NSURL")]
        #[method_id(@__retain_semantics Other sourceURL)]
        pub unsafe fn sourceURL(&self) -> Option<Id<NSURL>>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKFHIRResource {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
