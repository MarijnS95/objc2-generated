//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// The object you use to delete web-usage data.
    ///
    /// This class provides an easy way for you to delete web history, including:
    ///
    /// - All history
    /// - History associated to a specific URL
    /// - History during a specific time interval
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/screentime/stwebhistory?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct STWebHistory;
);

unsafe impl NSObjectProtocol for STWebHistory {}

impl STWebHistory {
    extern_methods!(
        /// Creates a web history instance to delete web-usage data associated to the
        /// bundle identifier you specify.
        ///
        /// The default value for `bundleIdentifier` is `Bundle.main.bundleIdentifier`.
        /// This is the recommended identifier to use, except for example, if a helper
        /// process is presenting web UI and you want to group that web-usage under the
        /// main appâ€™s bundle identifier.
        ///
        /// - Parameters:
        /// - bundleIdentifier: The bundle identifier.
        /// - error: Any error that occurred while changing the bundle identifier.
        #[unsafe(method(initWithBundleIdentifier:error:_))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithBundleIdentifier_error(
            this: Allocated<Self>,
            bundle_identifier: &NSString,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        /// Deletes all the web history for the URL you specify.
        ///
        /// The framework references the entire URL to determine which web-usage data to
        /// delete.
        ///
        /// - Parameters:
        /// - url: The URL associated with the web history to delete.
        #[unsafe(method(deleteHistoryForURL:))]
        #[unsafe(method_family = none)]
        pub unsafe fn deleteHistoryForURL(&self, url: &NSURL);

        /// Deletes web history that occurred during the date interval you specify.
        ///
        /// - Parameters:
        /// - interval: The date interval of web history you want to delete.
        #[unsafe(method(deleteHistoryDuringInterval:))]
        #[unsafe(method_family = none)]
        pub unsafe fn deleteHistoryDuringInterval(&self, interval: &NSDateInterval);

        /// Deletes all web history associated with the bundle identifier you specified
        /// during initialization.
        #[unsafe(method(deleteAllHistory))]
        #[unsafe(method_family = none)]
        pub unsafe fn deleteAllHistory(&self);
    );
}

/// Methods declared on superclass `NSObject`.
impl STWebHistory {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
