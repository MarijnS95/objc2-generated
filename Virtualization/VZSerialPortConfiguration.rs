//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Base class for a serial port configuration.
    ///
    /// VZSerialPortConfiguration should not be instantiated directly.
    /// One of its subclasses like VZVirtioConsoleDeviceSerialPortConfiguration should be used instead.
    ///
    ///
    /// See: VZVirtioConsoleDeviceSerialPortConfiguration
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/virtualization/vzserialportconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct VZSerialPortConfiguration;
);

unsafe impl NSCopying for VZSerialPortConfiguration {}

unsafe impl CopyingHelper for VZSerialPortConfiguration {
    type Result = Self;
}

unsafe impl NSObjectProtocol for VZSerialPortConfiguration {}

extern_methods!(
    unsafe impl VZSerialPortConfiguration {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "VZSerialPortAttachment")]
        /// Serial port attachment. Defines how the virtual machine's serial port interfaces with the host system. Default is nil.
        ///
        /// See: VZFileHandleSerialPortAttachment
        ///
        /// See: VZFileSerialPortAttachment
        #[method_id(@__retain_semantics Other attachment)]
        pub unsafe fn attachment(&self) -> Option<Retained<VZSerialPortAttachment>>;

        #[cfg(feature = "VZSerialPortAttachment")]
        /// Setter for [`attachment`][Self::attachment].
        #[method(setAttachment:)]
        pub unsafe fn setAttachment(&self, attachment: Option<&VZSerialPortAttachment>);
    }
);
