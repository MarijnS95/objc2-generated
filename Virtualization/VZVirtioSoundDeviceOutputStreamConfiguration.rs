//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Virtio Sound Device Output Stream Configuration.
    ///
    /// A PCM stream of output audio data, such as to a speaker.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/virtualization/vzvirtiosounddeviceoutputstreamconfiguration?language=objc)
    #[unsafe(super(VZVirtioSoundDeviceStreamConfiguration, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
    pub struct VZVirtioSoundDeviceOutputStreamConfiguration;
);

#[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
unsafe impl NSCopying for VZVirtioSoundDeviceOutputStreamConfiguration {}

#[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
unsafe impl CopyingHelper for VZVirtioSoundDeviceOutputStreamConfiguration {
    type Result = Self;
}

#[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
unsafe impl NSObjectProtocol for VZVirtioSoundDeviceOutputStreamConfiguration {}

extern_methods!(
    #[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
    unsafe impl VZVirtioSoundDeviceOutputStreamConfiguration {
        /// Initialize the output stream configuration.
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "VZAudioOutputStreamSink")]
        /// Audio Stream Sink. Defines how the audio data produced by the guest is handled on the host. The default is nil.
        ///
        /// Not specifying a Sink will have a default handler that swallows the audio.
        ///
        /// See: VZAudioOutputStreamSink
        #[unsafe(method_family(none))]
        #[method_id(sink)]
        pub unsafe fn sink(&self) -> Option<Retained<VZAudioOutputStreamSink>>;

        #[cfg(feature = "VZAudioOutputStreamSink")]
        /// Setter for [`sink`][Self::sink].
        #[method(setSink:)]
        pub unsafe fn setSink(&self, sink: Option<&VZAudioOutputStreamSink>);
    }
);

extern_methods!(
    /// Methods declared on superclass `VZVirtioSoundDeviceStreamConfiguration`
    #[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
    unsafe impl VZVirtioSoundDeviceOutputStreamConfiguration {
        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
