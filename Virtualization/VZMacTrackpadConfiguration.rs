//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Configuration for a Mac trackpad.
    ///
    /// This device can be used by VZVirtualMachineView to send pointer events and multi-touch trackpad gestures to the virtual machine.
    /// Note: this device is only recognized by virtual machines running macOS 13.0 and later. In order to support both macOS 13.0 and earlier
    /// guests, VZVirtualMachineConfiguration.pointingDevices can be set to an array containing both a VZMacTrackpadConfiguration and
    /// a VZUSBScreenCoordinatePointingDeviceConfiguration object. macOS 13.0 and later guests will use the multi-touch trackpad device,
    /// while earlier versions of macOS will use the USB pointing device.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/virtualization/vzmactrackpadconfiguration?language=objc)
    #[unsafe(super(VZPointingDeviceConfiguration, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VZPointingDeviceConfiguration")]
    pub struct VZMacTrackpadConfiguration;
);

#[cfg(feature = "VZPointingDeviceConfiguration")]
unsafe impl NSCopying for VZMacTrackpadConfiguration {}

#[cfg(feature = "VZPointingDeviceConfiguration")]
unsafe impl CopyingHelper for VZMacTrackpadConfiguration {
    type Result = Self;
}

#[cfg(feature = "VZPointingDeviceConfiguration")]
unsafe impl NSObjectProtocol for VZMacTrackpadConfiguration {}

extern_methods!(
    #[cfg(feature = "VZPointingDeviceConfiguration")]
    unsafe impl VZMacTrackpadConfiguration {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `VZPointingDeviceConfiguration`
    #[cfg(feature = "VZPointingDeviceConfiguration")]
    unsafe impl VZMacTrackpadConfiguration {
        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
