//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VZStorageDeviceConfiguration")]
    pub struct VZVirtioBlockDeviceConfiguration;

    #[cfg(feature = "VZStorageDeviceConfiguration")]
    unsafe impl ClassType for VZVirtioBlockDeviceConfiguration {
        #[inherits(NSObject)]
        type Super = VZStorageDeviceConfiguration;
    }
);

#[cfg(feature = "VZStorageDeviceConfiguration")]
unsafe impl NSCopying for VZVirtioBlockDeviceConfiguration {}

#[cfg(feature = "VZStorageDeviceConfiguration")]
unsafe impl CopyingHelper for VZVirtioBlockDeviceConfiguration {
    type Result = Self;
}

#[cfg(feature = "VZStorageDeviceConfiguration")]
unsafe impl NSObjectProtocol for VZVirtioBlockDeviceConfiguration {}

extern_methods!(
    #[cfg(feature = "VZStorageDeviceConfiguration")]
    unsafe impl VZVirtioBlockDeviceConfiguration {
        #[cfg(feature = "VZStorageDeviceAttachment")]
        #[method_id(@__retain_semantics Init initWithAttachment:)]
        pub unsafe fn initWithAttachment(
            this: Allocated<Self>,
            attachment: &VZStorageDeviceAttachment,
        ) -> Retained<Self>;

        #[method(validateBlockDeviceIdentifier:error:_)]
        pub unsafe fn validateBlockDeviceIdentifier_error(
            block_device_identifier: &NSString,
        ) -> Result<(), Retained<NSError>>;

        #[method_id(@__retain_semantics Other blockDeviceIdentifier)]
        pub unsafe fn blockDeviceIdentifier(&self) -> Retained<NSString>;

        #[method(setBlockDeviceIdentifier:)]
        pub unsafe fn setBlockDeviceIdentifier(&self, block_device_identifier: &NSString);
    }
);

extern_methods!(
    /// Methods declared on superclass `VZStorageDeviceConfiguration`
    #[cfg(feature = "VZStorageDeviceConfiguration")]
    unsafe impl VZVirtioBlockDeviceConfiguration {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);
