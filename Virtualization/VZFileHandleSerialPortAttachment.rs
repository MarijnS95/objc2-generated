//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VZSerialPortAttachment")]
    pub struct VZFileHandleSerialPortAttachment;

    #[cfg(feature = "VZSerialPortAttachment")]
    unsafe impl ClassType for VZFileHandleSerialPortAttachment {
        #[inherits(NSObject)]
        type Super = VZSerialPortAttachment;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "VZSerialPortAttachment")]
unsafe impl NSObjectProtocol for VZFileHandleSerialPortAttachment {}

extern_methods!(
    #[cfg(feature = "VZSerialPortAttachment")]
    unsafe impl VZFileHandleSerialPortAttachment {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics Init initWithFileHandleForReading:fileHandleForWriting:)]
        pub unsafe fn initWithFileHandleForReading_fileHandleForWriting(
            this: Allocated<Self>,
            file_handle_for_reading: Option<&NSFileHandle>,
            file_handle_for_writing: Option<&NSFileHandle>,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Other fileHandleForReading)]
        pub unsafe fn fileHandleForReading(&self) -> Option<Id<NSFileHandle>>;

        #[method_id(@__retain_semantics Other fileHandleForWriting)]
        pub unsafe fn fileHandleForWriting(&self) -> Option<Id<NSFileHandle>>;
    }
);
