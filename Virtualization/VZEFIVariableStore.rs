//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct VZEFIVariableStoreInitializationOptions(pub NSUInteger);
bitflags::bitflags! {
    impl VZEFIVariableStoreInitializationOptions: NSUInteger {
        const VZEFIVariableStoreInitializationOptionAllowOverwrite = 1<<0;
    }
}

unsafe impl Encode for VZEFIVariableStoreInitializationOptions {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for VZEFIVariableStoreInitializationOptions {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct VZEFIVariableStore;
);

unsafe impl NSObjectProtocol for VZEFIVariableStore {}

extern_methods!(
    unsafe impl VZEFIVariableStore {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithURL:)]
        pub unsafe fn initWithURL(this: Allocated<Self>, url: &NSURL) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initCreatingVariableStoreAtURL:options:error:_)]
        pub unsafe fn initCreatingVariableStoreAtURL_options_error(
            this: Allocated<Self>,
            url: &NSURL,
            options: VZEFIVariableStoreInitializationOptions,
        ) -> Result<Retained<Self>, Retained<NSError>>;

        #[method_id(@__retain_semantics Other URL)]
        pub unsafe fn URL(&self) -> Retained<NSURL>;
    }
);
