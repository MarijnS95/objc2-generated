//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// Class representing a virtual Mac graphics display.
    ///
    /// The VZMacGraphicsDisplay is the runtime counterpart of VZMacGraphicsDisplayConfiguration.
    ///
    /// When a graphics device is configured with class VZMacGraphicsDisplayConfiguration,
    /// the VZGraphicsDevice's displays are in the same order as their configuration objects and they have the type VZMacGraphicsDisplay.
    ///
    /// For example, if when setting up a virtual Mac, `VZMacGraphicsDeviceConfiguration.displays[0]` is a `VZMacGraphicsDisplayConfiguration`,
    /// then after creating a virtual machine from the configuration, the `VZVirtualMachine.graphicsDevices` is a `VZMacGraphicsDevice`.
    /// The `VZMacGraphicsDevice.displays[0]` is a `VZMacGraphicsDisplay` corresponding to the `VZMacGraphicsDeviceConfiguration` in the configuration.
    ///
    ///
    /// See: VZMacGraphicsDisplayConfiguration
    ///
    /// See: VZGraphicsDevice
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/virtualization/vzmacgraphicsdisplay?language=objc)
    #[unsafe(super(VZGraphicsDisplay, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VZGraphicsDisplay")]
    pub struct VZMacGraphicsDisplay;
);

#[cfg(feature = "VZGraphicsDisplay")]
unsafe impl NSObjectProtocol for VZMacGraphicsDisplay {}

extern_methods!(
    #[cfg(feature = "VZGraphicsDisplay")]
    unsafe impl VZMacGraphicsDisplay {
        /// The pixel density as a number of pixels per inch.
        #[method(pixelsPerInch)]
        #[unsafe(method_family = none)]
        pub unsafe fn pixelsPerInch(&self) -> NSInteger;
    }
);

extern_methods!(
    /// Methods declared on superclass `VZGraphicsDisplay`
    #[cfg(feature = "VZGraphicsDisplay")]
    unsafe impl VZMacGraphicsDisplay {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);
