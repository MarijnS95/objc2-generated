//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-app-kit")]
use objc2_app_kit::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/automator/ambundleaction?language=objc)
    #[unsafe(super(AMAction, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AMAction")]
    pub struct AMBundleAction;
);

#[cfg(feature = "AMAction")]
unsafe impl NSCoding for AMBundleAction {}

#[cfg(feature = "AMAction")]
unsafe impl NSCopying for AMBundleAction {}

#[cfg(feature = "AMAction")]
unsafe impl CopyingHelper for AMBundleAction {
    type Result = Self;
}

#[cfg(feature = "AMAction")]
unsafe impl NSObjectProtocol for AMBundleAction {}

#[cfg(feature = "AMAction")]
unsafe impl NSSecureCoding for AMBundleAction {}

extern_methods!(
    #[cfg(feature = "AMAction")]
    unsafe impl AMBundleAction {
        #[method(awakeFromBundle)]
        pub unsafe fn awakeFromBundle(&self);

        #[method(hasView)]
        pub unsafe fn hasView(&self) -> bool;

        #[cfg(feature = "objc2-app-kit")]
        #[unsafe(method_family(none))]
        #[method_id(view)]
        pub unsafe fn view(&self, mtm: MainThreadMarker) -> Option<Retained<NSView>>;

        #[unsafe(method_family(none))]
        #[method_id(bundle)]
        pub unsafe fn bundle(&self) -> Retained<NSBundle>;

        #[unsafe(method_family(none))]
        #[method_id(parameters)]
        pub unsafe fn parameters(
            &self,
        ) -> Option<Retained<NSMutableDictionary<NSString, AnyObject>>>;

        /// Setter for [`parameters`][Self::parameters].
        #[method(setParameters:)]
        pub unsafe fn setParameters(
            &self,
            parameters: Option<&NSMutableDictionary<NSString, AnyObject>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `AMAction`
    #[cfg(feature = "AMAction")]
    unsafe impl AMBundleAction {
        #[unsafe(method_family(init))]
        #[method_id(initWithDefinition:fromArchive:)]
        pub unsafe fn initWithDefinition_fromArchive(
            this: Allocated<Self>,
            dict: Option<&NSDictionary<NSString, AnyObject>>,
            archived: bool,
        ) -> Option<Retained<Self>>;

        #[unsafe(method_family(init))]
        #[method_id(initWithContentsOfURL:error:_)]
        pub unsafe fn initWithContentsOfURL_error(
            this: Allocated<Self>,
            file_url: &NSURL,
        ) -> Result<Retained<Self>, Retained<NSError>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "AMAction")]
    unsafe impl AMBundleAction {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
