//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsvariablestatusitemlength?language=objc)
#[cfg(feature = "objc2-core-foundation")]
pub static NSVariableStatusItemLength: CGFloat = -1.0 as _;

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nssquarestatusitemlength?language=objc)
#[cfg(feature = "objc2-core-foundation")]
pub static NSSquareStatusItemLength: CGFloat = -2.0 as _;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsstatusbar?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSStatusBar;
);

unsafe impl NSObjectProtocol for NSStatusBar {}

extern_methods!(
    unsafe impl NSStatusBar {
        #[method_id(@__retain_semantics Other systemStatusBar)]
        pub unsafe fn systemStatusBar() -> Retained<NSStatusBar>;

        #[cfg(all(feature = "NSStatusItem", feature = "objc2-core-foundation"))]
        #[method_id(@__retain_semantics Other statusItemWithLength:)]
        pub unsafe fn statusItemWithLength(&self, length: CGFloat) -> Retained<NSStatusItem>;

        #[cfg(feature = "NSStatusItem")]
        #[method(removeStatusItem:)]
        pub unsafe fn removeStatusItem(&self, item: &NSStatusItem);

        #[method(isVertical)]
        pub unsafe fn isVertical(&self) -> bool;

        #[cfg(feature = "objc2-core-foundation")]
        #[method(thickness)]
        pub unsafe fn thickness(&self) -> CGFloat;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSStatusBar {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
