//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nspredicateeditor?language=objc)
    #[unsafe(super(NSRuleEditor, NSControl, NSView, NSResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "NSControl",
        feature = "NSResponder",
        feature = "NSRuleEditor",
        feature = "NSView"
    ))]
    pub struct NSPredicateEditor;
);

#[cfg(all(
    feature = "NSAccessibilityProtocols",
    feature = "NSControl",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSView"
))]
unsafe impl NSAccessibility for NSPredicateEditor {}

#[cfg(all(
    feature = "NSAccessibilityProtocols",
    feature = "NSControl",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSView"
))]
unsafe impl NSAccessibilityElementProtocol for NSPredicateEditor {}

#[cfg(all(
    feature = "NSAnimation",
    feature = "NSControl",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSView"
))]
unsafe impl NSAnimatablePropertyContainer for NSPredicateEditor {}

#[cfg(all(
    feature = "NSAppearance",
    feature = "NSControl",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSView"
))]
unsafe impl NSAppearanceCustomization for NSPredicateEditor {}

#[cfg(all(
    feature = "NSControl",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSView"
))]
unsafe impl NSCoding for NSPredicateEditor {}

#[cfg(all(
    feature = "NSControl",
    feature = "NSDragging",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSView"
))]
unsafe impl NSDraggingDestination for NSPredicateEditor {}

#[cfg(all(
    feature = "NSControl",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSView"
))]
unsafe impl NSObjectProtocol for NSPredicateEditor {}

#[cfg(all(
    feature = "NSControl",
    feature = "NSResponder",
    feature = "NSRuleEditor",
    feature = "NSUserInterfaceItemIdentification",
    feature = "NSView"
))]
unsafe impl NSUserInterfaceItemIdentification for NSPredicateEditor {}

extern_methods!(
    #[cfg(all(
        feature = "NSControl",
        feature = "NSResponder",
        feature = "NSRuleEditor",
        feature = "NSView"
    ))]
    unsafe impl NSPredicateEditor {
        #[cfg(feature = "NSPredicateEditorRowTemplate")]
        #[method(rowTemplates)]
        #[unsafe(method_family = none)]
        pub unsafe fn rowTemplates(&self) -> Retained<NSArray<NSPredicateEditorRowTemplate>>;

        #[cfg(feature = "NSPredicateEditorRowTemplate")]
        /// Setter for [`rowTemplates`][Self::rowTemplates].
        #[method(setRowTemplates:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setRowTemplates(&self, row_templates: &NSArray<NSPredicateEditorRowTemplate>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSControl`
    #[cfg(all(
        feature = "NSControl",
        feature = "NSResponder",
        feature = "NSRuleEditor",
        feature = "NSView"
    ))]
    unsafe impl NSPredicateEditor {
        #[method(initWithFrame:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame_rect: NSRect) -> Retained<Self>;

        #[method(initWithCoder:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSResponder`
    #[cfg(all(
        feature = "NSControl",
        feature = "NSResponder",
        feature = "NSRuleEditor",
        feature = "NSView"
    ))]
    unsafe impl NSPredicateEditor {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(
        feature = "NSControl",
        feature = "NSResponder",
        feature = "NSRuleEditor",
        feature = "NSView"
    ))]
    unsafe impl NSPredicateEditor {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
