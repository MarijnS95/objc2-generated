//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSStringDrawingContext")]
    pub struct NSStringDrawingContext;

    #[cfg(feature = "AppKit_NSStringDrawingContext")]
    unsafe impl ClassType for NSStringDrawingContext {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "AppKit_NSStringDrawingContext")]
unsafe impl NSObjectProtocol for NSStringDrawingContext {}

extern_methods!(
    #[cfg(feature = "AppKit_NSStringDrawingContext")]
    unsafe impl NSStringDrawingContext {
        #[method(minimumScaleFactor)]
        pub unsafe fn minimumScaleFactor(&self) -> CGFloat;

        #[method(setMinimumScaleFactor:)]
        pub unsafe fn setMinimumScaleFactor(&self, minimum_scale_factor: CGFloat);

        #[method(actualScaleFactor)]
        pub unsafe fn actualScaleFactor(&self) -> CGFloat;

        #[method(totalBounds)]
        pub unsafe fn totalBounds(&self) -> NSRect;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "AppKit_NSStringDrawingContext")]
    unsafe impl NSStringDrawingContext {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_category!(
    /// Category on [`NSString`].
    #[cfg(feature = "Foundation_NSString")]
    pub unsafe trait NSStringDrawing {
        #[cfg(feature = "Foundation_NSDictionary")]
        #[method(sizeWithAttributes:)]
        unsafe fn sizeWithAttributes(
            &self,
            attrs: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
        ) -> NSSize;

        #[cfg(feature = "Foundation_NSDictionary")]
        #[method(drawAtPoint:withAttributes:)]
        unsafe fn drawAtPoint_withAttributes(
            &self,
            point: NSPoint,
            attrs: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
        );

        #[cfg(feature = "Foundation_NSDictionary")]
        #[method(drawInRect:withAttributes:)]
        unsafe fn drawInRect_withAttributes(
            &self,
            rect: NSRect,
            attrs: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
        );
    }

    #[cfg(feature = "Foundation_NSString")]
    unsafe impl NSStringDrawing for NSString {}
);

extern_category!(
    /// Category "NSStringDrawing" on [`NSAttributedString`].
    #[doc(alias = "NSStringDrawing")]
    #[cfg(feature = "Foundation_NSAttributedString")]
    pub unsafe trait NSAttributedStringNSStringDrawing {
        #[method(size)]
        unsafe fn size(&self) -> NSSize;

        #[method(drawAtPoint:)]
        unsafe fn drawAtPoint(&self, point: NSPoint);

        #[method(drawInRect:)]
        unsafe fn drawInRect(&self, rect: NSRect);
    }

    #[cfg(feature = "Foundation_NSAttributedString")]
    unsafe impl NSAttributedStringNSStringDrawing for NSAttributedString {}
);

ns_options!(
    #[underlying(NSInteger)]
    pub enum NSStringDrawingOptions {
        NSStringDrawingUsesLineFragmentOrigin = 1 << 0,
        NSStringDrawingUsesFontLeading = 1 << 1,
        NSStringDrawingUsesDeviceMetrics = 1 << 3,
        NSStringDrawingTruncatesLastVisibleLine = 1 << 5,
        #[deprecated]
        NSStringDrawingDisableScreenFontSubstitution = 1 << 2,
        #[deprecated]
        NSStringDrawingOneShot = 1 << 4,
    }
);

extern_category!(
    /// Category "NSExtendedStringDrawing" on [`NSString`].
    #[doc(alias = "NSExtendedStringDrawing")]
    #[cfg(feature = "Foundation_NSString")]
    pub unsafe trait NSStringNSExtendedStringDrawing {
        #[cfg(all(
            feature = "AppKit_NSStringDrawingContext",
            feature = "Foundation_NSDictionary"
        ))]
        #[method(drawWithRect:options:attributes:context:)]
        unsafe fn drawWithRect_options_attributes_context(
            &self,
            rect: NSRect,
            options: NSStringDrawingOptions,
            attributes: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
            context: Option<&NSStringDrawingContext>,
        );

        #[cfg(all(
            feature = "AppKit_NSStringDrawingContext",
            feature = "Foundation_NSDictionary"
        ))]
        #[method(boundingRectWithSize:options:attributes:context:)]
        unsafe fn boundingRectWithSize_options_attributes_context(
            &self,
            size: NSSize,
            options: NSStringDrawingOptions,
            attributes: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
            context: Option<&NSStringDrawingContext>,
        ) -> NSRect;
    }

    #[cfg(feature = "Foundation_NSString")]
    unsafe impl NSStringNSExtendedStringDrawing for NSString {}
);

extern_category!(
    /// Category "NSExtendedStringDrawing" on [`NSAttributedString`].
    #[doc(alias = "NSExtendedStringDrawing")]
    #[cfg(feature = "Foundation_NSAttributedString")]
    pub unsafe trait NSAttributedStringNSExtendedStringDrawing {
        #[cfg(feature = "AppKit_NSStringDrawingContext")]
        #[method(drawWithRect:options:context:)]
        unsafe fn drawWithRect_options_context(
            &self,
            rect: NSRect,
            options: NSStringDrawingOptions,
            context: Option<&NSStringDrawingContext>,
        );

        #[cfg(feature = "AppKit_NSStringDrawingContext")]
        #[method(boundingRectWithSize:options:context:)]
        unsafe fn boundingRectWithSize_options_context(
            &self,
            size: NSSize,
            options: NSStringDrawingOptions,
            context: Option<&NSStringDrawingContext>,
        ) -> NSRect;
    }

    #[cfg(feature = "Foundation_NSAttributedString")]
    unsafe impl NSAttributedStringNSExtendedStringDrawing for NSAttributedString {}
);

extern_category!(
    /// Category on [`NSString`].
    #[cfg(feature = "Foundation_NSString")]
    pub unsafe trait NSStringDrawingDeprecated {
        #[cfg(feature = "Foundation_NSDictionary")]
        #[method(drawWithRect:options:attributes:)]
        unsafe fn drawWithRect_options_attributes(
            &self,
            rect: NSRect,
            options: NSStringDrawingOptions,
            attributes: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
        );

        #[cfg(feature = "Foundation_NSDictionary")]
        #[method(boundingRectWithSize:options:attributes:)]
        unsafe fn boundingRectWithSize_options_attributes(
            &self,
            size: NSSize,
            options: NSStringDrawingOptions,
            attributes: Option<&NSDictionary<NSAttributedStringKey, AnyObject>>,
        ) -> NSRect;
    }

    #[cfg(feature = "Foundation_NSString")]
    unsafe impl NSStringDrawingDeprecated for NSString {}
);

extern_category!(
    /// Category "NSStringDrawingDeprecated" on [`NSAttributedString`].
    #[doc(alias = "NSStringDrawingDeprecated")]
    #[cfg(feature = "Foundation_NSAttributedString")]
    pub unsafe trait NSAttributedStringNSStringDrawingDeprecated {
        #[method(drawWithRect:options:)]
        unsafe fn drawWithRect_options(&self, rect: NSRect, options: NSStringDrawingOptions);

        #[method(boundingRectWithSize:options:)]
        unsafe fn boundingRectWithSize_options(
            &self,
            size: NSSize,
            options: NSStringDrawingOptions,
        ) -> NSRect;
    }

    #[cfg(feature = "Foundation_NSAttributedString")]
    unsafe impl NSAttributedStringNSStringDrawingDeprecated for NSAttributedString {}
);
