//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nstextalternatives?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSTextAlternatives;
);

unsafe impl NSCoding for NSTextAlternatives {}

unsafe impl NSObjectProtocol for NSTextAlternatives {}

unsafe impl NSSecureCoding for NSTextAlternatives {}

extern_methods!(
    unsafe impl NSTextAlternatives {
        #[method_id(initWithPrimaryString:alternativeStrings:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithPrimaryString_alternativeStrings(
            this: Allocated<Self>,
            primary_string: &NSString,
            alternative_strings: &NSArray<NSString>,
        ) -> Retained<Self>;

        #[method_id(primaryString)]
        #[unsafe(method_family = none)]
        pub unsafe fn primaryString(&self) -> Retained<NSString>;

        #[method_id(alternativeStrings)]
        #[unsafe(method_family = none)]
        pub unsafe fn alternativeStrings(&self) -> Retained<NSArray<NSString>>;

        #[method(noteSelectedAlternativeString:)]
        pub unsafe fn noteSelectedAlternativeString(&self, alternative_string: &NSString);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSTextAlternatives {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nstextalternativesselectedalternativestringnotification?language=objc)
    pub static NSTextAlternativesSelectedAlternativeStringNotification: &'static NSNotificationName;
}
