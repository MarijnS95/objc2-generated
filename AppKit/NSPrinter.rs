//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintertablestatus?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NSPrinterTableStatus(pub NSUInteger);
impl NSPrinterTableStatus {
    #[doc(alias = "NSPrinterTableOK")]
    pub const OK: Self = Self(0);
    #[doc(alias = "NSPrinterTableNotFound")]
    pub const NotFound: Self = Self(1);
    #[doc(alias = "NSPrinterTableError")]
    pub const Error: Self = Self(2);
}

unsafe impl Encode for NSPrinterTableStatus {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for NSPrinterTableStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintertypename?language=objc)
// NS_TYPED_EXTENSIBLE_ENUM
pub type NSPrinterTypeName = NSString;

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprinterpapername?language=objc)
// NS_TYPED_EXTENSIBLE_ENUM
pub type NSPrinterPaperName = NSString;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprinter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSPrinter;
);

unsafe impl NSCoding for NSPrinter {}

unsafe impl NSCopying for NSPrinter {}

unsafe impl CopyingHelper for NSPrinter {
    type Result = Self;
}

unsafe impl NSObjectProtocol for NSPrinter {}

extern_methods!(
    unsafe impl NSPrinter {
        #[method(printerNames)]
        #[unsafe(method_family = none)]
        pub unsafe fn printerNames() -> Retained<NSArray<NSString>>;

        #[method(printerTypes)]
        #[unsafe(method_family = none)]
        pub unsafe fn printerTypes() -> Retained<NSArray<NSPrinterTypeName>>;

        #[method(printerWithName:)]
        #[unsafe(method_family = none)]
        pub unsafe fn printerWithName(name: &NSString) -> Option<Retained<NSPrinter>>;

        #[method(printerWithType:)]
        #[unsafe(method_family = none)]
        pub unsafe fn printerWithType(r#type: &NSPrinterTypeName) -> Option<Retained<NSPrinter>>;

        #[method(name)]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[method(type)]
        #[unsafe(method_family = none)]
        pub unsafe fn r#type(&self) -> Retained<NSPrinterTypeName>;

        #[method(languageLevel)]
        #[unsafe(method_family = none)]
        pub unsafe fn languageLevel(&self) -> NSInteger;

        #[method(pageSizeForPaper:)]
        #[unsafe(method_family = none)]
        pub unsafe fn pageSizeForPaper(&self, paper_name: &NSPrinterPaperName) -> NSSize;

        #[cfg(feature = "NSGraphics")]
        #[method(deviceDescription)]
        #[unsafe(method_family = none)]
        pub unsafe fn deviceDescription(
            &self,
        ) -> Retained<NSDictionary<NSDeviceDescriptionKey, AnyObject>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSPrinter {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// NSDeprecated
    unsafe impl NSPrinter {
        #[deprecated]
        #[method(statusForTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn statusForTable(&self, table_name: &NSString) -> NSPrinterTableStatus;

        #[deprecated]
        #[method(isKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn isKey_inTable(&self, key: Option<&NSString>, table: &NSString) -> bool;

        #[deprecated]
        #[method(booleanForKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn booleanForKey_inTable(
            &self,
            key: Option<&NSString>,
            table: &NSString,
        ) -> bool;

        #[deprecated]
        #[method(floatForKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn floatForKey_inTable(
            &self,
            key: Option<&NSString>,
            table: &NSString,
        ) -> c_float;

        #[deprecated]
        #[method(intForKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn intForKey_inTable(&self, key: Option<&NSString>, table: &NSString) -> c_int;

        #[deprecated]
        #[method(rectForKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn rectForKey_inTable(&self, key: Option<&NSString>, table: &NSString)
            -> NSRect;

        #[deprecated]
        #[method(sizeForKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn sizeForKey_inTable(&self, key: Option<&NSString>, table: &NSString)
            -> NSSize;

        #[deprecated]
        #[method(stringForKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn stringForKey_inTable(
            &self,
            key: Option<&NSString>,
            table: &NSString,
        ) -> Option<Retained<NSString>>;

        #[deprecated]
        #[method(stringListForKey:inTable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn stringListForKey_inTable(
            &self,
            key: Option<&NSString>,
            table: &NSString,
        ) -> Option<Retained<NSArray>>;

        #[deprecated]
        #[method(imageRectForPaper:)]
        #[unsafe(method_family = none)]
        pub unsafe fn imageRectForPaper(&self, paper_name: Option<&NSString>) -> NSRect;

        #[deprecated]
        #[method(acceptsBinary)]
        #[unsafe(method_family = none)]
        pub unsafe fn acceptsBinary(&self) -> bool;

        #[deprecated]
        #[method(isColor)]
        #[unsafe(method_family = none)]
        pub unsafe fn isColor(&self) -> bool;

        #[deprecated]
        #[method(isFontAvailable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn isFontAvailable(&self, face_name: Option<&NSString>) -> bool;

        #[deprecated]
        #[method(isOutputStackInReverseOrder)]
        #[unsafe(method_family = none)]
        pub unsafe fn isOutputStackInReverseOrder(&self) -> bool;

        #[deprecated]
        #[method(printerWithName:domain:includeUnavailable:)]
        #[unsafe(method_family = none)]
        pub unsafe fn printerWithName_domain_includeUnavailable(
            name: &NSString,
            domain: Option<&NSString>,
            flag: bool,
        ) -> Option<Retained<NSPrinter>>;

        #[deprecated]
        #[method(domain)]
        #[unsafe(method_family = none)]
        pub unsafe fn domain(&self) -> Retained<NSString>;

        #[deprecated]
        #[method(host)]
        #[unsafe(method_family = none)]
        pub unsafe fn host(&self) -> Retained<NSString>;

        #[deprecated]
        #[method(note)]
        #[unsafe(method_family = none)]
        pub unsafe fn note(&self) -> Retained<NSString>;
    }
);
