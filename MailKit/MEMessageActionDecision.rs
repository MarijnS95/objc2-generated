//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mailkit/memessageactiondecision?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MEMessageActionDecision;
);

unsafe impl NSCoding for MEMessageActionDecision {}

unsafe impl NSObjectProtocol for MEMessageActionDecision {}

unsafe impl NSSecureCoding for MEMessageActionDecision {}

impl MEMessageActionDecision {
    extern_methods!(
        #[unsafe(method(invokeAgainWithBody))]
        #[unsafe(method_family = none)]
        pub unsafe fn invokeAgainWithBody() -> Retained<MEMessageActionDecision>;

        #[cfg(feature = "MEMessageAction")]
        #[unsafe(method(decisionApplyingAction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn decisionApplyingAction(action: &MEMessageAction) -> Retained<Self>;

        #[cfg(feature = "MEMessageAction")]
        /// Creates an
        /// `MEMessageActionDecision`with multiple actions. Conflicting actions will be ignored.
        #[unsafe(method(decisionApplyingActions:))]
        #[unsafe(method_family = none)]
        pub unsafe fn decisionApplyingActions(actions: &NSArray<MEMessageAction>)
            -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}
