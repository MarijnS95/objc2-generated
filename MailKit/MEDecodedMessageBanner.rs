//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Contains security information in order to populate a banner in the message view.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/mailkit/medecodedmessagebanner?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MEDecodedMessageBanner;
);

extern_conformance!(
    unsafe impl NSCoding for MEDecodedMessageBanner {}
);

extern_conformance!(
    unsafe impl NSCopying for MEDecodedMessageBanner {}
);

unsafe impl CopyingHelper for MEDecodedMessageBanner {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for MEDecodedMessageBanner {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for MEDecodedMessageBanner {}
);

impl MEDecodedMessageBanner {
    extern_methods!(
        #[unsafe(method(title))]
        #[unsafe(method_family = none)]
        pub unsafe fn title(&self) -> Retained<NSString>;

        #[unsafe(method(primaryActionTitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn primaryActionTitle(&self) -> Retained<NSString>;

        #[unsafe(method(isDismissable))]
        #[unsafe(method_family = none)]
        pub unsafe fn isDismissable(&self) -> bool;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(initWithTitle:primaryActionTitle:dismissable:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTitle_primaryActionTitle_dismissable(
            this: Allocated<Self>,
            title: &NSString,
            primary_action_title: &NSString,
            dismissable: bool,
        ) -> Retained<Self>;
    );
}
