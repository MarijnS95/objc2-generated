//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coretelephony/ctcarrier?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CTCarrier;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CTCarrier {}
);

impl CTCarrier {
    extern_methods!(
        #[deprecated = "Deprecated; returns '--' at some point in the future"]
        #[unsafe(method(carrierName))]
        #[unsafe(method_family = none)]
        pub unsafe fn carrierName(&self) -> Option<Retained<NSString>>;

        #[deprecated = "Deprecated; returns '65535' at some point in the future"]
        #[unsafe(method(mobileCountryCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn mobileCountryCode(&self) -> Option<Retained<NSString>>;

        #[deprecated = "Deprecated; returns '65535' at some point in the future"]
        #[unsafe(method(mobileNetworkCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn mobileNetworkCode(&self) -> Option<Retained<NSString>>;

        #[deprecated = "Deprecated; returns '--' at some point in the future"]
        #[unsafe(method(isoCountryCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn isoCountryCode(&self) -> Option<Retained<NSString>>;

        #[deprecated = "Deprecated; returns YES at some point in the future"]
        #[unsafe(method(allowsVOIP))]
        #[unsafe(method_family = none)]
        pub unsafe fn allowsVOIP(&self) -> bool;
    );
}

/// Methods declared on superclass `NSObject`.
impl CTCarrier {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
