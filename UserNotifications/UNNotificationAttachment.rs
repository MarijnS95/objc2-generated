//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UNNotificationAttachment;

    unsafe impl ClassType for UNNotificationAttachment {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for UNNotificationAttachment {}

unsafe impl NSCopying for UNNotificationAttachment {}

unsafe impl NSObjectProtocol for UNNotificationAttachment {}

unsafe impl NSSecureCoding for UNNotificationAttachment {}

extern_methods!(
    unsafe impl UNNotificationAttachment {
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Id<NSString>;

        #[method_id(@__retain_semantics Other URL)]
        pub unsafe fn URL(&self) -> Id<NSURL>;

        #[method_id(@__retain_semantics Other type)]
        pub unsafe fn r#type(&self) -> Id<NSString>;

        #[method_id(@__retain_semantics Other attachmentWithIdentifier:URL:options:error:_)]
        pub unsafe fn attachmentWithIdentifier_URL_options_error(
            identifier: &NSString,
            url: &NSURL,
            options: Option<&NSDictionary>,
        ) -> Result<Id<Self>, Id<NSError>>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UNNotificationAttachment {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern "C" {
    pub static UNNotificationAttachmentOptionsTypeHintKey: &'static NSString;
}

extern "C" {
    pub static UNNotificationAttachmentOptionsThumbnailHiddenKey: &'static NSString;
}

extern "C" {
    pub static UNNotificationAttachmentOptionsThumbnailClippingRectKey: &'static NSString;
}

extern "C" {
    pub static UNNotificationAttachmentOptionsThumbnailTimeKey: &'static NSString;
}
