//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/naturallanguage/nllanguagerecognizer?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NLLanguageRecognizer;
);

unsafe impl NSObjectProtocol for NLLanguageRecognizer {}

extern_methods!(
    unsafe impl NLLanguageRecognizer {
        #[cfg(feature = "NLLanguage")]
        #[method(dominantLanguageForString:)]
        #[unsafe(method_family = none)]
        pub unsafe fn dominantLanguageForString(string: &NSString) -> Option<Retained<NLLanguage>>;

        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(processString:)]
        #[unsafe(method_family = none)]
        pub unsafe fn processString(&self, string: &NSString);

        #[method(reset)]
        #[unsafe(method_family = none)]
        pub unsafe fn reset(&self);

        #[cfg(feature = "NLLanguage")]
        #[method(dominantLanguage)]
        #[unsafe(method_family = none)]
        pub unsafe fn dominantLanguage(&self) -> Option<Retained<NLLanguage>>;

        #[cfg(feature = "NLLanguage")]
        #[method(languageHypothesesWithMaximum:)]
        #[unsafe(method_family = none)]
        pub unsafe fn languageHypothesesWithMaximum(
            &self,
            max_hypotheses: NSUInteger,
        ) -> Retained<NSDictionary<NLLanguage, NSNumber>>;

        #[cfg(feature = "NLLanguage")]
        #[method(languageHints)]
        #[unsafe(method_family = none)]
        pub unsafe fn languageHints(&self) -> Retained<NSDictionary<NLLanguage, NSNumber>>;

        #[cfg(feature = "NLLanguage")]
        /// Setter for [`languageHints`][Self::languageHints].
        #[method(setLanguageHints:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setLanguageHints(&self, language_hints: &NSDictionary<NLLanguage, NSNumber>);

        #[cfg(feature = "NLLanguage")]
        #[method(languageConstraints)]
        #[unsafe(method_family = none)]
        pub unsafe fn languageConstraints(&self) -> Retained<NSArray<NLLanguage>>;

        #[cfg(feature = "NLLanguage")]
        /// Setter for [`languageConstraints`][Self::languageConstraints].
        #[method(setLanguageConstraints:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setLanguageConstraints(&self, language_constraints: &NSArray<NLLanguage>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NLLanguageRecognizer {
        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
