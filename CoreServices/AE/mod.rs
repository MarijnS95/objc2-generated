//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "AEDataModel")]
#[path = "AEDataModel.rs"]
mod __AEDataModel;
#[cfg(feature = "AEHelpers")]
#[path = "AEHelpers.rs"]
mod __AEHelpers;
#[cfg(feature = "AEMach")]
#[path = "AEMach.rs"]
mod __AEMach;
#[cfg(feature = "AEObjects")]
#[path = "AEObjects.rs"]
mod __AEObjects;
#[cfg(feature = "AEPackObject")]
#[path = "AEPackObject.rs"]
mod __AEPackObject;
#[cfg(feature = "AERegistry")]
#[path = "AERegistry.rs"]
mod __AERegistry;
#[cfg(feature = "AEUserTermTypes")]
#[path = "AEUserTermTypes.rs"]
mod __AEUserTermTypes;
#[cfg(feature = "AppleEvents")]
#[path = "AppleEvents.rs"]
mod __AppleEvents;

#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEAlwaysInteract;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAECanInteract;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAECanSwitchLayer;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDataArray;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDebugPOSTHeader;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDebugReplyHeader;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDebugXMLDebugAll;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDebugXMLRequest;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDebugXMLResponse;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDefaultTimeout;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDescArray;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDescListFactorNone;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDescListFactorType;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDescListFactorTypeAndSize;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDoNotAutomaticallyAddAnnotationsToEvent;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDontExecute;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDontReconnect;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEDontRecord;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEHTTPProxyHostAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEHTTPProxyPortAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEHandleArray;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEHighPriority;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEKeyDescArray;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAENeverInteract;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAENoReply;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAENormalPriority;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEPackedArray;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEProcessNonReplyEvents;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEQueueReply;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAERPCClass;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESOAPScheme;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESharedScriptHandler;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESocks4Protocol;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESocks5Protocol;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESocksHostAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESocksPasswordAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESocksPortAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESocksProxyAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAESocksUserAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEUseHTTPProxyAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEUseSocksAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEWaitReply;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEWantReceipt;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAEXMLRPCScheme;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAnyTransactionID;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kAutoGenerateReturnID;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kNoTimeOut;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kSOAP1999Schema;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::kSOAP2001Schema;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyAEPOSTHeaderData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyAEReplyHeaderData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyAEXMLReplyData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyAEXMLRequestData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyAcceptTimeoutAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyActualSenderAuditToken;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyAdditionalHTTPHeaders;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyAddressAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyDisableAuthenticationAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyEventClassAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyEventIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyEventSourceAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyInteractLevelAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyMissedKeywordAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyOptionalKeywordAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyOriginalAddressAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyRPCMethodName;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyRPCMethodParam;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyRPCMethodParamOrder;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyReplyRequestedAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyReturnIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPAction;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPMethodNameSpace;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPMethodNameSpaceURI;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPSMDNamespace;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPSMDNamespaceURI;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPSMDType;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPSchemaVersion;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySOAPStructureMetaData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderApplescriptEntitlementsAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderApplicationIdentifierEntitlementAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderApplicationSandboxed;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderAuditTokenAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderEGIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderEUIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderGIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderPIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keySenderUIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyTimeoutAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyTransactionIDAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyUserNameAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyUserPasswordAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::keyXMLDebuggingAttr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::type128BitFloatingPoint;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeAEList;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeAERecord;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeAlias;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeAppParameters;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeApplSignature;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeAppleEvent;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeApplicationBundleID;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeApplicationURL;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeAuditToken;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeBookmarkData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeBoolean;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFArrayRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFAttributedStringRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFBooleanRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFDictionaryRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFMutableArrayRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFMutableAttributedStringRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFMutableDictionaryRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFMutableStringRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFNumberRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFStringRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCFTypeRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeCString;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeChar;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeDecimalStruct;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeEncodedString;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeEnumerated;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeEventRecord;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeFSRef;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeFalse;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeFileURL;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeFixed;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeIEEE32BitFloatingPoint;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeIEEE64BitFloatingPoint;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeKernelProcessID;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeKeyword;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeMachPort;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeNull;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typePString;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeProcessSerialNumber;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeProperty;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeQDRectangle;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeSInt16;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeSInt32;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeSInt64;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeSectionH;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeStyledUnicodeText;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeTrue;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeType;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeUInt16;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeUInt32;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeUInt64;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeUTF16ExternalRepresentation;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeUTF8Text;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeUnicodeText;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::typeWildCard;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEAddressDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEArrayData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEArrayDataPointer;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEArrayType;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECheckIsRecord;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECoerceDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECoerceDescProcPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECoerceDescUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECoercePtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECoercePtrProcPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECoercePtrUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECoercionHandlerUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECompareDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECountItems;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECreateAppleEvent;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECreateDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECreateDescFromExternalPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AECreateList;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDataStorage;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDataStorageType;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDeleteItem;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDeleteParam;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDescList;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDescPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDisposeDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDisposeExternalProcPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDisposeExternalUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEDuplicateDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEEventClass;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEEventHandlerProcPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEEventHandlerUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEEventID;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEFlattenDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetArray;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetAttributeDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetAttributePtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetCoercionHandler;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetDescData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetDescDataRange;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetDescDataSize;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetNthDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetNthPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetParamDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEGetParamPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEInitializeDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEInstallCoercionHandler;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEKeyDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEKeyword;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEPutArray;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEPutAttributeDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEPutAttributePtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEPutDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEPutParamDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEPutParamPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEPutPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AERecord;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AERemoveCoercionHandler;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEReplaceDescData;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEReturnID;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AESendMode;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AESendPriority;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AESizeOfAttribute;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AESizeOfFlattenedDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AESizeOfNthItem;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AESizeOfParam;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AETransactionID;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEUnflattenDesc;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AEUnflattenDescFromBytes;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AppleEvent;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::AppleEventPtr;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::DescType;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::DisposeAECoerceDescUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::DisposeAECoercePtrUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::DisposeAEDisposeExternalUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::DisposeAEEventHandlerUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::InvokeAECoerceDescUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::InvokeAECoercePtrUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::InvokeAEDisposeExternalUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::InvokeAEEventHandlerUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::NewAECoerceDescUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::NewAECoercePtrUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::NewAEDisposeExternalUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::NewAEEventHandlerUPP;
#[cfg(feature = "AEDataModel")]
pub use self::__AEDataModel::OpaqueAEDataStorageType;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxBadData;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxBadDesc;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxBadEOF;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxBadHex;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxBadNegative;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxBadToken;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxCoercedList;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxMissingQuote;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoCloseBrace;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoCloseBracket;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoCloseHex;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoCloseParen;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoCloseString;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoColon;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoEOF;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoErr;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxNoKey;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxOddHex;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxUncoercedDoubleAt;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::aeBuildSyntaxUncoercedHex;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEBuildError;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEBuildErrorCode;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEPrintDescToHandle;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamClose;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEStreamCloseDesc;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEStreamCloseList;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEStreamCloseRecord;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamCreateEvent;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEStreamOpen;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamOpenDesc;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamOpenEvent;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamOpenKeyDesc;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEStreamOpenList;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamOpenRecord;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamOptionalParam;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEStreamRef;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamSetRecordType;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamWriteAEDesc;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::AEStreamWriteData;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamWriteDesc;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamWriteKey;
#[cfg(all(feature = "AEDataModel", feature = "AEHelpers"))]
pub use self::__AEHelpers::AEStreamWriteKeyDesc;
#[cfg(feature = "AEHelpers")]
pub use self::__AEHelpers::OpaqueAEStreamRef;
#[cfg(all(feature = "AEDataModel", feature = "AEMach"))]
pub use self::__AEMach::keyReplyPortAttr;
#[cfg(all(feature = "AEDataModel", feature = "AEMach"))]
pub use self::__AEMach::typeReplyPortAttr;
#[cfg(all(feature = "AEMach", feature = "libc"))]
pub use self::__AEMach::AEGetRegisteredMachPort;
#[cfg(all(feature = "AEDataModel", feature = "AEMach"))]
pub use self::__AEMach::AESendMessage;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::ccntTokenRecHandle;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::ccntTokenRecPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::ccntTokenRecord;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formAbsolutePosition;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formName;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formPropertyID;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formRange;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formRelativePosition;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formTest;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formUniqueID;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::formWhose;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEAND;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEAll;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEAny;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEFirst;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEHandleSimpleRanges;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEIDoMarking;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEIDoMinimum;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEIDoWhose;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAELast;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEMiddle;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAENOT;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAENext;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEOR;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEPassSubDescs;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEPrevious;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEResolveNestedLists;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::kAEUseRelativeIterators;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAEAdjustMarksProc;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAECompOperator;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAECompareProc;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEContainer;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAECountProc;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEDesiredClass;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAEGetErrDescProc;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEIndex;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEKeyData;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEKeyForm;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAELogicalOperator;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAELogicalTerms;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAEMarkProc;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAEMarkTokenProc;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEObject1;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEObject2;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAERangeStart;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyAERangeStop;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAETest;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEWhoseRangeStart;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::keyAEWhoseRangeStop;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::keyDisposeTokenProc;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeAbsoluteOrdinal;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeCompDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeCurrentContainer;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeIndexDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeLogicalDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeOSLTokenList;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeObjectBeingExamined;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeObjectSpecifier;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeRangeDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeRelativeDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::typeToken;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::typeWhoseDescriptor;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::typeWhoseRange;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::AECallObjectAccessor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::AEDisposeToken;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::AEGetObjectAccessor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::AEInstallObjectAccessor;
#[cfg(feature = "AEObjects")]
pub use self::__AEObjects::AEObjectInit;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::AERemoveObjectAccessor;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::AEResolve;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::AESetObjectCallbacks;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLAccessorUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLAdjustMarksUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLCompareUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLCountUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLDisposeTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLGetErrDescUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLGetMarkTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::DisposeOSLMarkUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLAccessorUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLAdjustMarksUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLCompareUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLCountUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLDisposeTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLGetErrDescUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLGetMarkTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::InvokeOSLMarkUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLAccessorUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLAdjustMarksUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLCompareUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLCountUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLDisposeTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLGetErrDescUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLGetMarkTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::NewOSLMarkUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLAccessorProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLAccessorUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLAdjustMarksProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLAdjustMarksUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLCompareProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLCompareUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLCountProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLCountUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLDisposeTokenProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLDisposeTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLGetErrDescProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLGetErrDescUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLGetMarkTokenProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLGetMarkTokenUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLMarkProcPtr;
#[cfg(all(feature = "AEDataModel", feature = "AEObjects"))]
pub use self::__AEObjects::OSLMarkUPP;
#[cfg(all(feature = "AEDataModel", feature = "AEPackObject"))]
pub use self::__AEPackObject::CreateCompDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEPackObject"))]
pub use self::__AEPackObject::CreateLogicalDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEPackObject"))]
pub use self::__AEPackObject::CreateObjSpecifier;
#[cfg(all(feature = "AEDataModel", feature = "AEPackObject"))]
pub use self::__AEPackObject::CreateOffsetDescriptor;
#[cfg(all(feature = "AEDataModel", feature = "AEPackObject"))]
pub use self::__AEPackObject::CreateRangeDescriptor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cADBAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cAEList;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cAddressSpec;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cAppleTalkAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cApplication;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cArc;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cBoolean;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cBusAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cCell;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cChar;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cColorTable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cColumn;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cDevSpec;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cDocument;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cDrawingArea;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cEnumeration;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cEthernetAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cFTPItem;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cFile;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cFireWireAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cFixed;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cFixedPoint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cFixedRectangle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cGraphicLine;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cGraphicObject;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cGraphicShape;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cGraphicText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cGroupedGraphic;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cHTML;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cIPAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cInsertionLoc;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cInsertionPoint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cInternetAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cIntlText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cIntlWritingCode;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cItem;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cKeystroke;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLine;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLocalTalkAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLongDateTime;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLongFixed;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLongFixedPoint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLongFixedRectangle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLongInteger;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLongPoint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cLongRectangle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cMachineLoc;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cMenu;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cMenuItem;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cObject;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cObjectSpecifier;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cOpenableObject;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cOval;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cPICT;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cParagraph;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cPixel;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cPixelMap;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cPolygon;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cProperty;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cQDPoint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cQDRectangle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cRGBColor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cRectangle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cRotation;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cRoundedRectangle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cRow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cSCSIAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cShortInteger;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cTable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cTextFlow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cTextStyles;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cTokenRingAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cType;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cURL;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cUSBAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cVersion;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cWindow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::cWord;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eADB;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eAddressSpec;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eAnalogAudio;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eAppleTalk;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eAudioLineIn;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eAudioLineOut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eAudioOut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eBus;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eCDROM;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eCapsLockDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eClearKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eCommSlot;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eCommandDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eConduit;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eControlDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eDVD;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eDeleteKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eDeviceType;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eDigitalAudio;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eDisplay;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eDownArrowKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eEndKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eEnterKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eEscapeKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eEthernet;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF10Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF11Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF12Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF13Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF14Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF15Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF1Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF2Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF3Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF4Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF5Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF6Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF7Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF8Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eF9Key;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eFireWire;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eFloppy;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eForwardDelKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eHD;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eHelpKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eHomeKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eIP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eIRTalk;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eInfrared;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eIrDA;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eKeyKind;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eKeyboard;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eLCD;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eLeftArrowKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eLocalTalk;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eMacIP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eMacVideo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eMicrophone;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eModem;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eModemPort;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eModemPrinterPort;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eModifiers;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eMonitorOut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eMouse;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eNuBus;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eNuBusCard;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eOptionDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePCIbus;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePCIcard;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePCcard;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePDScard;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePDSslot;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePPP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePageDownKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePageUpKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePointingDevice;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePostScript;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePrinter;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::ePrinterPort;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eProtocol;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eReturnKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eRightArrowKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eSCSI;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eSVGA;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eScheme;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eSerial;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eShiftDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eSpeakers;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eStorageDevice;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eSvideo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eTabKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eTokenRing;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eTrackball;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eTrackpad;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eUSB;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eUpArrowKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eVideoIn;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eVideoMonitor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eVideoOut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumArrows;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumJustification;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumKeyForm;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumPosition;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumProtection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumQuality;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumSaveOptions;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumStyle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::enumTransferMode;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlAFP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlAT;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlEPPC;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlFTP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlFile;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlGopher;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlHTTP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlHTTPS;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlIMAP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlLDAP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlLaunch;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlMail;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlMailbox;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlMessage;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlMulti;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlNFS;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlNNTP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlNews;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlPOP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlRTSP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlSNews;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlTelnet;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::eurlUnknown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEAbout;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEActivate;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEAfter;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEAliasSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEAllCaps;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEApplicationClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEArrowAtEnd;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEArrowAtStart;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEArrowBothEnds;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEAsk;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEAutoDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEBefore;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEBeginTransaction;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEBeginning;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEBeginsWith;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEBold;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECaseSensEquals;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECentered;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEChangeView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEClone;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEClose;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECommandClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECondensed;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEContains;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECopy;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECoreSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECountElements;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECreateElement;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECreatePublisher;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAECut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDeactivate;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDelete;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDiskEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDoObjectsExist;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDoScript;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDrag;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEDuplicateSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEEditGraphic;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEEmptyTrash;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEEnd;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEEndTransaction;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEEndsWith;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEEquals;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEExpanded;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEFast;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEFinderEvents;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEFormulaProtect;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEFullyJustified;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGetClassInfo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGetData;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGetDataSize;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGetEventInfo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGetInfoSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGetPrivilegeSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGetSuiteInfo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGreaterThan;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGreaterThanEquals;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEGrow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEHiQuality;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEHidden;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEHighLevel;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISAction;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISActionPath;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISClientAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISClientIP;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISContentType;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISFromUser;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISFullRequest;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISGetURL;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISHTTPSearchArgs;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISMethod;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISPassword;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISPostArgs;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISReferrer;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISScriptName;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISServerName;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISServerPort;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISUserAgent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISUserName;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEISWebStarSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEImageGraphic;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEInfo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEInternetSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEIsUniform;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEItalic;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEKeyClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEKeyDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAELeftJustified;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAELessThan;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAELessThanEquals;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAELogOut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAELowercase;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMain;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMakeObjectsVisible;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMenuClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMenuSelect;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMiscStandards;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEModifiable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMouseClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMouseDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMouseDownInBack;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMove;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEMoved;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAENavigationKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAENo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAENoArrow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAENonmodifiable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAENullEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEOpen;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEOpenSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEOutline;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPageSetup;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPaste;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPlain;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPrint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPrintSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPrintWindow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPromise;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEPutAwaySelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDAdMax;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDAdMin;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDAddOver;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDAddPin;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDBic;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDBlend;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDCopy;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDNotBic;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDNotCopy;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDNotOr;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDNotXor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDOr;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDSubOver;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDSubPin;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDSupplementalSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQDXor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQuickdrawSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQuitAll;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQuitPreserveState;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEQuitReason;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERawKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEReallyLogOut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERedo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERegular;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEReopenApplication;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEReplace;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERequiredSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEResized;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERestart;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEResume;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERevealSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERevert;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAERightJustified;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESave;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEScrapEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESelect;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESetData;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESetPosition;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEShadow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESharing;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEShowClipboard;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEShowRestartDialog;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEShowShutdownDialog;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEShutDown;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESleep;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESmallCaps;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESpecialClassProperties;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEStoppedMoving;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEStrikethrough;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESubscript;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESuperscript;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAESuspend;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAETableSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAETextSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAETransactionTerminated;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEUnderline;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEUndo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEUp;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEUpdate;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEVirtualKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEWakeUpEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEWholeWordEquals;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEWindowClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEYes;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEZoom;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEZoomIn;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kAEZoomOut;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kByCommentView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kByDateView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kByIconView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kByKindView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kByLabelView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kByNameView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kBySizeView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kBySmallIcon;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kByVersionView;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kConnSuite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kDoFolderActionEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFAAttachCommand;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFAEditCommand;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFAFileParam;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFAIndexParam;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFARemoveCommand;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFAServerApp;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFASuiteCode;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFolderActionCode;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFolderClosedEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFolderItemsAddedEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFolderItemsRemovedEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFolderOpenedEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kFolderWindowMovedEvent;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kGetSelectedText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kItemList;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kNewSizeParameter;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kNextBody;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kOffset2Pos;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kPos2Offset;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kPreviousBody;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kShowHideInputWindow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteBlockFillText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteCaretPosition;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteConvertedText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteNoHilite;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteOutlineText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteRawText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteSelectedConvertedText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteSelectedRawText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMHiliteSelectedText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMInsideOfActiveInputArea;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMInsideOfBody;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTSMOutsideOfBody;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kTextServiceClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kUnicodeNotFromInputMethod;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::kUpdateActiveInputArea;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEAngle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEArcAngle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEBaseAddr;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEBestType;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEBgndColor;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEBgndPattern;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEBounds;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAEBufferSize;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAECellList;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEClassID;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEClauseOffsets;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEColor;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEColorTable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAECurrentPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAECurveHeight;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAECurveWidth;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDashStyle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEData;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDefaultType;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDefinitionRect;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDescType;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDestination;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDoAntiAlias;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDoDithered;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDoRotate;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDoScale;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDoTranslate;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEDragging;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEEditionFileLoc;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEElements;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEEndPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEEventClass;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEEventID;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFile;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFileType;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFillColor;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFillPattern;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAEFixLength;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFlipHorizontal;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFlipVertical;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFont;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEFormula;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEGraphicObjects;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEHiliteRange;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEID;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEImageQuality;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEInsertHere;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEKeyForms;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEKeyword;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAELaunchedAsLogInItem;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAELaunchedAsServiceItem;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAELeftSide;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAELevel;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAELineArrow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAEMoveView;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEName;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAENewElementLoc;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAENextBody;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEObject;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEObjectClass;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEOffStyles;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEOffset;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEOnStyles;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPMTable;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEParamFlags;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEParameters;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPenColor;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPenPattern;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPenWidth;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPinRange;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPixMapMinus;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPixelDepth;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPointList;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPointSize;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPosition;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPropData;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPropFlags;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEPropID;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEProperties;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEProperty;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEProtection;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAERegionClass;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAERenderAs;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAERequestedType;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEResult;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEResultInfo;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAERotPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAERotation;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAERowList;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAESaveOptions;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEScale;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEScriptTag;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAESearchText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAEServerInstance;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEShowWhere;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEStartAngle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEStartPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEStyles;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAESuiteID;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMDocumentRefcon;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMEventRecord;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMEventRef;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMGlyphInfoArray;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMScriptTag;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMTextFMFont;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMTextFont;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETSMTextPointSize;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEText;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETextColor;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETextFont;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETextLineAscent;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETextLineHeight;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETextPointSize;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETextServiceEncoding;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETextServiceMacEncoding;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETextStyles;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAETheData;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETheText;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETransferMode;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETranslation;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAETryAsStructGraf;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEUniformStyles;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEUpdateOn;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::keyAEUpdateRange;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEUserTerm;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEWindow;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyAEWritingCode;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyCloseAllWindows;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyDriveNumber;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyErrorCode;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyHighLevelClass;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyHighLevelID;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyKey;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyKeyCode;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyKeyboard;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyLocalWhere;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyMenuID;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyMenuItem;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyMiscellaneous;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyModifiers;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyNewBounds;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyOriginalBounds;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keySelection;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyWhen;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyWhere;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::keyWindow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pATMachine;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pATType;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pATZone;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pArcAngle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pBackgroundColor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pBackgroundPattern;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pBestType;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pBounds;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pClass;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pClipboard;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pColor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pColorTable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pConduit;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pContents;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pCornerCurveHeight;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pCornerCurveWidth;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDNS;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDNSForm;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDashStyle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDefaultType;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDefinitionRect;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDeviceAddress;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDeviceType;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pDottedDecimal;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pEnabled;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pEndPoint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pFTPKind;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pFillColor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pFillPattern;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pFont;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pFormula;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pGraphicObjects;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pHasCloseBox;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pHasTitleBar;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pHost;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pID;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIndex;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pInsertionLoc;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsFloating;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsFrontProcess;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsModal;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsModified;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsResizable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsStationeryPad;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsZoomable;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pIsZoomed;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pItemNumber;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pJustification;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pKeyKind;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pKeystrokeKey;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pLineArrow;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pMenuID;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pModifiers;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pName;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pNetwork;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pNewElementLoc;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pNode;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPath;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPenColor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPenPattern;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPenWidth;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPixelDepth;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPointList;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPointSize;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pPort;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pProtection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pProtocol;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pRotation;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pSCSIBus;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pSCSILUN;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pScale;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pScheme;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pScript;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pScriptTag;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pSelected;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pSocket;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pStartAngle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pStartPoint;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTextColor;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTextEncoding;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTextFont;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTextItemDelimiters;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTextPointSize;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTextStyles;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTransferMode;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pTranslation;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pURL;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pUniformStyles;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pUpdateOn;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pUserName;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pUserPassword;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pUserSelection;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pVersion;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::pVisible;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeAEText;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeArc;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeBest;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCFAbsoluteTime;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCell;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCentimeters;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeClassInfo;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeColorTable;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeColumn;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::typeComponentInstance;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCubicCentimeter;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCubicFeet;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCubicInches;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCubicMeters;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeCubicYards;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeDashStyle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeData;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeDegreesC;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeDegreesF;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeDegreesK;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeDrawingArea;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeEPS;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeElemInfo;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeEnumeration;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeEventInfo;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::typeEventRef;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeFeet;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeFinderWindow;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeFixedPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeFixedRectangle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeGIF;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeGallons;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::typeGlyphInfoArray;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeGrams;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeGraphicLine;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeGraphicText;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeGroupedGraphic;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeHIMenu;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeHIWindow;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeISO8601DateTime;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeInches;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeInsertionLoc;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeIntlText;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeIntlWritingCode;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeJPEG;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeKilograms;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeKilometers;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeLiters;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeLongDateTime;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeLongFixed;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeLongFixedPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeLongFixedRectangle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeLongPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeLongRectangle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::typeLowLevelEventRecord;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeMachineLoc;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeMeters;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeMiles;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::typeOffsetArray;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeOunces;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeOval;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeParamInfo;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typePict;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typePixMapMinus;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typePixelMap;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typePolygon;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typePounds;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typePropInfo;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typePtr;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeQDPoint;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeQDRegion;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeQuarts;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeRGB16;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeRGB96;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeRGBColor;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeRectangle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeRotation;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeRoundedRectangle;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeRow;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeScrapStyles;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeScript;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeSquareFeet;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeSquareKilometers;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeSquareMeters;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeSquareMiles;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeSquareYards;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeStyledText;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeSuiteInfo;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeTIFF;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeTable;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::typeTextRange;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::typeTextRangeArray;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeTextStyles;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeVersion;
#[cfg(all(feature = "AEDataModel", feature = "AERegistry"))]
pub use self::__AERegistry::typeYards;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::IntlText;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::KAEISHandleCGI;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::OffsetArray;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::OffsetArrayHandle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::OffsetArrayPtr;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::TextRange;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::TextRangeArray;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::TextRangeArrayHandle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::TextRangeArrayPtr;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::TextRangeHandle;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::TextRangePtr;
#[cfg(feature = "AERegistry")]
pub use self::__AERegistry::WritingCode;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEOSAXSizeResource;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEScriptingSizeResource;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAETerminologyExtension;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTApostrophe;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTChangesState;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTDirectParamIsReference;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTEnumListIsExclusive;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTEnumerated;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTEnumsAreTypes;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTFeminine;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTHasReturningParam;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTMasculine;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTNotDirectParamIsTarget;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTOptional;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTParamIsReference;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTParamIsTarget;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTPlural;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTPropertyIsReference;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTReadWrite;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTReplyIsReference;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTTightBindingFunction;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUTlistOfItems;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAEUserTerminology;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kAlwaysSendSubject;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kDontFindAppBySignature;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kLaunchToGetTerminology;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kOSIZCodeInSharedLibraries;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kOSIZDontOpenResourceFile;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kOSIZOpenWithReadPermission;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kOSIZdontAcceptRemoteEvents;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::kReadExtensionTermsMask;
#[cfg(feature = "AEUserTermTypes")]
pub use self::__AEUserTermTypes::TScriptingSizeResource;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::errAEEventNotPermitted;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::errAEEventWouldRequireUserConsent;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::errAETargetAddressNotPermitted;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEAnswer;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEApplicationActivationExpected;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEApplicationDied;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAEDirectCall;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAEDoNotPromptForUserConsent;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAELocalProcess;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAENotifyRecording;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAENotifyStartRecording;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAENotifyStopRecording;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEOpenApplication;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEOpenContents;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEOpenDocuments;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEPrintDocuments;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEQuitApplication;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAERemoteProcess;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAERemoteProcessNameKey;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAERemoteProcessProcessIDKey;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAERemoteProcessURLKey;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAERemoteProcessUserIDKey;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAESameProcess;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEShowPreferences;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEStartRecording;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kAEStopRecording;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::kAEUnknownSource;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::kCoreEventClass;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyAERecorderCount;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyAERestoreAppState;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyAEVersion;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyDirectObject;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyErrorNumber;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyErrorString;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyPreDispatch;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keyProcessSerialNumber;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::keySelectProc;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AECreateRemoteProcessResolver;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AEDeterminePermissionToAutomateTarget;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AEDisposeRemoteProcessResolver;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AEEventSource;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AEGetEventHandler;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AEGetSpecialHandler;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AEInstallEventHandler;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AEInstallSpecialHandler;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AEManagerInfo;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AERemoteProcessResolver;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AERemoteProcessResolverCallback;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AERemoteProcessResolverContext;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AERemoteProcessResolverGetProcesses;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AERemoteProcessResolverRef;
#[cfg(feature = "AppleEvents")]
pub use self::__AppleEvents::AERemoteProcessResolverScheduleWithRunLoop;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AERemoveEventHandler;
#[cfg(all(feature = "AEDataModel", feature = "AppleEvents"))]
pub use self::__AppleEvents::AERemoveSpecialHandler;
