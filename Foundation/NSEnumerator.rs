//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

extern_protocol!(
    pub unsafe trait NSFastEnumeration {
        #[method(countByEnumeratingWithState:objects:count:)]
        unsafe fn countByEnumeratingWithState_objects_count(
            &self,
            state: NonNull<NSFastEnumerationState>,
            buffer: NonNull<*mut AnyObject>,
            len: NSUInteger,
        ) -> NSUInteger;
    }

    unsafe impl ProtocolType for dyn NSFastEnumeration {}
);

unsafe impl<ObjectType: ?Sized> NSFastEnumeration for NSEnumerator<ObjectType> {}

unsafe impl<ObjectType: ?Sized> NSObjectProtocol for NSEnumerator<ObjectType> {}

extern_methods!(
    unsafe impl<ObjectType: Message> NSEnumerator<ObjectType> {
        #[method_id(@__retain_semantics Other nextObject)]
        pub fn nextObject(&mut self) -> Option<Id<ObjectType>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl<ObjectType: Message> NSEnumerator<ObjectType> {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_methods!(
    /// NSExtendedEnumerator
    unsafe impl<ObjectType: Message> NSEnumerator<ObjectType> {
        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other allObjects)]
        pub fn allObjects(&self) -> Id<NSArray<ObjectType>>;
    }
);
