//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsdistributedlock?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSDistributedLock;
);

unsafe impl Send for NSDistributedLock {}

unsafe impl Sync for NSDistributedLock {}

unsafe impl NSObjectProtocol for NSDistributedLock {}

extern_methods!(
    unsafe impl NSDistributedLock {
        #[cfg(feature = "NSString")]
        #[unsafe(method_family(none))]
        #[method_id(lockWithPath:)]
        pub unsafe fn lockWithPath(path: &NSString) -> Option<Retained<NSDistributedLock>>;

        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "NSString")]
        #[unsafe(method_family(init))]
        #[method_id(initWithPath:)]
        pub unsafe fn initWithPath(
            this: Allocated<Self>,
            path: &NSString,
        ) -> Option<Retained<Self>>;

        #[method(tryLock)]
        pub unsafe fn tryLock(&self) -> bool;

        #[method(unlock)]
        pub unsafe fn unlock(&self);

        #[method(breakLock)]
        pub unsafe fn breakLock(&self);

        #[cfg(feature = "NSDate")]
        #[unsafe(method_family(none))]
        #[method_id(lockDate)]
        pub unsafe fn lockDate(&self) -> Retained<NSDate>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSDistributedLock {
        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
