//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquery?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSMetadataQuery;
);

unsafe impl NSObjectProtocol for NSMetadataQuery {}

extern_methods!(
    unsafe impl NSMetadataQuery {
        #[method_id(delegate)]
        #[unsafe(method_family = none)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn NSMetadataQueryDelegate>>>;

        /// Setter for [`delegate`][Self::delegate].
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn NSMetadataQueryDelegate>>,
        );

        #[cfg(feature = "NSPredicate")]
        #[method_id(predicate)]
        #[unsafe(method_family = none)]
        pub unsafe fn predicate(&self) -> Option<Retained<NSPredicate>>;

        #[cfg(feature = "NSPredicate")]
        /// Setter for [`predicate`][Self::predicate].
        #[method(setPredicate:)]
        pub unsafe fn setPredicate(&self, predicate: Option<&NSPredicate>);

        #[cfg(all(feature = "NSArray", feature = "NSSortDescriptor"))]
        #[method_id(sortDescriptors)]
        #[unsafe(method_family = none)]
        pub unsafe fn sortDescriptors(&self) -> Retained<NSArray<NSSortDescriptor>>;

        #[cfg(all(feature = "NSArray", feature = "NSSortDescriptor"))]
        /// Setter for [`sortDescriptors`][Self::sortDescriptors].
        #[method(setSortDescriptors:)]
        pub unsafe fn setSortDescriptors(&self, sort_descriptors: &NSArray<NSSortDescriptor>);

        #[cfg(all(feature = "NSArray", feature = "NSString"))]
        #[method_id(valueListAttributes)]
        #[unsafe(method_family = none)]
        pub unsafe fn valueListAttributes(&self) -> Retained<NSArray<NSString>>;

        #[cfg(all(feature = "NSArray", feature = "NSString"))]
        /// Setter for [`valueListAttributes`][Self::valueListAttributes].
        #[method(setValueListAttributes:)]
        pub unsafe fn setValueListAttributes(&self, value_list_attributes: &NSArray<NSString>);

        #[cfg(all(feature = "NSArray", feature = "NSString"))]
        #[method_id(groupingAttributes)]
        #[unsafe(method_family = none)]
        pub unsafe fn groupingAttributes(&self) -> Option<Retained<NSArray<NSString>>>;

        #[cfg(all(feature = "NSArray", feature = "NSString"))]
        /// Setter for [`groupingAttributes`][Self::groupingAttributes].
        #[method(setGroupingAttributes:)]
        pub unsafe fn setGroupingAttributes(&self, grouping_attributes: Option<&NSArray<NSString>>);

        #[cfg(feature = "NSDate")]
        #[method(notificationBatchingInterval)]
        pub unsafe fn notificationBatchingInterval(&self) -> NSTimeInterval;

        #[cfg(feature = "NSDate")]
        /// Setter for [`notificationBatchingInterval`][Self::notificationBatchingInterval].
        #[method(setNotificationBatchingInterval:)]
        pub unsafe fn setNotificationBatchingInterval(
            &self,
            notification_batching_interval: NSTimeInterval,
        );

        #[cfg(feature = "NSArray")]
        #[method_id(searchScopes)]
        #[unsafe(method_family = none)]
        pub unsafe fn searchScopes(&self) -> Retained<NSArray>;

        #[cfg(feature = "NSArray")]
        /// Setter for [`searchScopes`][Self::searchScopes].
        #[method(setSearchScopes:)]
        pub unsafe fn setSearchScopes(&self, search_scopes: &NSArray);

        #[cfg(feature = "NSArray")]
        #[method_id(searchItems)]
        #[unsafe(method_family = none)]
        pub unsafe fn searchItems(&self) -> Option<Retained<NSArray>>;

        #[cfg(feature = "NSArray")]
        /// Setter for [`searchItems`][Self::searchItems].
        #[method(setSearchItems:)]
        pub unsafe fn setSearchItems(&self, search_items: Option<&NSArray>);

        #[cfg(feature = "NSOperation")]
        #[method_id(operationQueue)]
        #[unsafe(method_family = none)]
        pub unsafe fn operationQueue(&self) -> Option<Retained<NSOperationQueue>>;

        #[cfg(feature = "NSOperation")]
        /// Setter for [`operationQueue`][Self::operationQueue].
        #[method(setOperationQueue:)]
        pub unsafe fn setOperationQueue(&self, operation_queue: Option<&NSOperationQueue>);

        #[method(startQuery)]
        pub unsafe fn startQuery(&self) -> bool;

        #[method(stopQuery)]
        pub unsafe fn stopQuery(&self);

        #[method(isStarted)]
        pub unsafe fn isStarted(&self) -> bool;

        #[method(isGathering)]
        pub unsafe fn isGathering(&self) -> bool;

        #[method(isStopped)]
        pub unsafe fn isStopped(&self) -> bool;

        #[method(disableUpdates)]
        pub unsafe fn disableUpdates(&self);

        #[method(enableUpdates)]
        pub unsafe fn enableUpdates(&self);

        #[method(resultCount)]
        pub unsafe fn resultCount(&self) -> NSUInteger;

        #[method_id(resultAtIndex:)]
        #[unsafe(method_family = none)]
        pub unsafe fn resultAtIndex(&self, idx: NSUInteger) -> Retained<AnyObject>;

        #[cfg(feature = "block2")]
        #[method(enumerateResultsUsingBlock:)]
        pub unsafe fn enumerateResultsUsingBlock(
            &self,
            block: &block2::Block<dyn Fn(NonNull<AnyObject>, NSUInteger, NonNull<Bool>) + '_>,
        );

        #[cfg(all(feature = "NSObjCRuntime", feature = "block2"))]
        #[method(enumerateResultsWithOptions:usingBlock:)]
        pub unsafe fn enumerateResultsWithOptions_usingBlock(
            &self,
            opts: NSEnumerationOptions,
            block: &block2::Block<dyn Fn(NonNull<AnyObject>, NSUInteger, NonNull<Bool>) + '_>,
        );

        #[cfg(feature = "NSArray")]
        #[method_id(results)]
        #[unsafe(method_family = none)]
        pub unsafe fn results(&self) -> Retained<NSArray>;

        #[method(indexOfResult:)]
        pub unsafe fn indexOfResult(&self, result: &AnyObject) -> NSUInteger;

        #[cfg(all(feature = "NSArray", feature = "NSDictionary", feature = "NSString"))]
        #[method_id(valueLists)]
        #[unsafe(method_family = none)]
        pub unsafe fn valueLists(
            &self,
        ) -> Retained<NSDictionary<NSString, NSArray<NSMetadataQueryAttributeValueTuple>>>;

        #[cfg(feature = "NSArray")]
        #[method_id(groupedResults)]
        #[unsafe(method_family = none)]
        pub unsafe fn groupedResults(&self) -> Retained<NSArray<NSMetadataQueryResultGroup>>;

        #[cfg(feature = "NSString")]
        #[method_id(valueOfAttribute:forResultAtIndex:)]
        #[unsafe(method_family = none)]
        pub unsafe fn valueOfAttribute_forResultAtIndex(
            &self,
            attr_name: &NSString,
            idx: NSUInteger,
        ) -> Option<Retained<AnyObject>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSMetadataQuery {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquerydelegate?language=objc)
    pub unsafe trait NSMetadataQueryDelegate: NSObjectProtocol {
        #[optional]
        #[method_id(metadataQuery:replacementObjectForResultObject:)]
        #[unsafe(method_family = none)]
        unsafe fn metadataQuery_replacementObjectForResultObject(
            &self,
            query: &NSMetadataQuery,
            result: &NSMetadataItem,
        ) -> Retained<AnyObject>;

        #[cfg(feature = "NSString")]
        #[optional]
        #[method_id(metadataQuery:replacementValueForAttribute:value:)]
        #[unsafe(method_family = none)]
        unsafe fn metadataQuery_replacementValueForAttribute_value(
            &self,
            query: &NSMetadataQuery,
            attr_name: &NSString,
            attr_value: &AnyObject,
        ) -> Retained<AnyObject>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquerydidstartgatheringnotification?language=objc)
    #[cfg(all(feature = "NSNotification", feature = "NSString"))]
    pub static NSMetadataQueryDidStartGatheringNotification: &'static NSNotificationName;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquerygatheringprogressnotification?language=objc)
    #[cfg(all(feature = "NSNotification", feature = "NSString"))]
    pub static NSMetadataQueryGatheringProgressNotification: &'static NSNotificationName;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquerydidfinishgatheringnotification?language=objc)
    #[cfg(all(feature = "NSNotification", feature = "NSString"))]
    pub static NSMetadataQueryDidFinishGatheringNotification: &'static NSNotificationName;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquerydidupdatenotification?language=objc)
    #[cfg(all(feature = "NSNotification", feature = "NSString"))]
    pub static NSMetadataQueryDidUpdateNotification: &'static NSNotificationName;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryupdateaddeditemskey?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryUpdateAddedItemsKey: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryupdatechangeditemskey?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryUpdateChangedItemsKey: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryupdateremoveditemskey?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryUpdateRemovedItemsKey: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryresultcontentrelevanceattribute?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryResultContentRelevanceAttribute: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryuserhomescope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryUserHomeScope: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquerylocalcomputerscope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryLocalComputerScope: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataquerynetworkscope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryNetworkScope: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryindexedlocalcomputerscope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryIndexedLocalComputerScope: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryindexednetworkscope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryIndexedNetworkScope: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryubiquitousdocumentsscope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryUbiquitousDocumentsScope: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryubiquitousdatascope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryUbiquitousDataScope: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryaccessibleubiquitousexternaldocumentsscope?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope: &'static NSString;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataitem?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSMetadataItem;
);

unsafe impl NSObjectProtocol for NSMetadataItem {}

extern_methods!(
    unsafe impl NSMetadataItem {
        #[cfg(feature = "NSURL")]
        #[method_id(initWithURL:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithURL(this: Allocated<Self>, url: &NSURL) -> Option<Retained<Self>>;

        #[cfg(feature = "NSString")]
        #[method_id(valueForAttribute:)]
        #[unsafe(method_family = none)]
        pub unsafe fn valueForAttribute(&self, key: &NSString) -> Option<Retained<AnyObject>>;

        #[cfg(all(feature = "NSArray", feature = "NSDictionary", feature = "NSString"))]
        #[method_id(valuesForAttributes:)]
        #[unsafe(method_family = none)]
        pub unsafe fn valuesForAttributes(
            &self,
            keys: &NSArray<NSString>,
        ) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        #[cfg(all(feature = "NSArray", feature = "NSString"))]
        #[method_id(attributes)]
        #[unsafe(method_family = none)]
        pub unsafe fn attributes(&self) -> Retained<NSArray<NSString>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSMetadataItem {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryattributevaluetuple?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSMetadataQueryAttributeValueTuple;
);

unsafe impl NSObjectProtocol for NSMetadataQueryAttributeValueTuple {}

extern_methods!(
    unsafe impl NSMetadataQueryAttributeValueTuple {
        #[cfg(feature = "NSString")]
        #[method_id(attribute)]
        #[unsafe(method_family = none)]
        pub unsafe fn attribute(&self) -> Retained<NSString>;

        #[method_id(value)]
        #[unsafe(method_family = none)]
        pub unsafe fn value(&self) -> Option<Retained<AnyObject>>;

        #[method(count)]
        pub unsafe fn count(&self) -> NSUInteger;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSMetadataQueryAttributeValueTuple {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsmetadataqueryresultgroup?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSMetadataQueryResultGroup;
);

unsafe impl NSObjectProtocol for NSMetadataQueryResultGroup {}

extern_methods!(
    unsafe impl NSMetadataQueryResultGroup {
        #[cfg(feature = "NSString")]
        #[method_id(attribute)]
        #[unsafe(method_family = none)]
        pub unsafe fn attribute(&self) -> Retained<NSString>;

        #[method_id(value)]
        #[unsafe(method_family = none)]
        pub unsafe fn value(&self) -> Retained<AnyObject>;

        #[cfg(feature = "NSArray")]
        #[method_id(subgroups)]
        #[unsafe(method_family = none)]
        pub unsafe fn subgroups(&self) -> Option<Retained<NSArray<NSMetadataQueryResultGroup>>>;

        #[method(resultCount)]
        pub unsafe fn resultCount(&self) -> NSUInteger;

        #[method_id(resultAtIndex:)]
        #[unsafe(method_family = none)]
        pub unsafe fn resultAtIndex(&self, idx: NSUInteger) -> Retained<AnyObject>;

        #[cfg(feature = "NSArray")]
        #[method_id(results)]
        #[unsafe(method_family = none)]
        pub unsafe fn results(&self) -> Retained<NSArray>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSMetadataQueryResultGroup {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
