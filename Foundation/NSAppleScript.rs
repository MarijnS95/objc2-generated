//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsapplescripterrormessage?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSAppleScriptErrorMessage: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsapplescripterrornumber?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSAppleScriptErrorNumber: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsapplescripterrorappname?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSAppleScriptErrorAppName: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsapplescripterrorbriefmessage?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSAppleScriptErrorBriefMessage: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsapplescripterrorrange?language=objc)
    #[cfg(feature = "NSString")]
    pub static NSAppleScriptErrorRange: &'static NSString;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsapplescript?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSAppleScript;
);

#[cfg(feature = "NSObject")]
unsafe impl NSCopying for NSAppleScript {}

#[cfg(feature = "NSObject")]
unsafe impl CopyingHelper for NSAppleScript {
    type Result = Self;
}

unsafe impl NSObjectProtocol for NSAppleScript {}

extern_methods!(
    unsafe impl NSAppleScript {
        #[cfg(all(feature = "NSDictionary", feature = "NSString", feature = "NSURL"))]
        #[method_id(@__retain_semantics Init initWithContentsOfURL:error:)]
        pub unsafe fn initWithContentsOfURL_error(
            this: Allocated<Self>,
            url: &NSURL,
            error_info: Option<&mut Option<Retained<NSDictionary<NSString, AnyObject>>>>,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "NSString")]
        #[method_id(@__retain_semantics Init initWithSource:)]
        pub unsafe fn initWithSource(
            this: Allocated<Self>,
            source: &NSString,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "NSString")]
        #[method_id(@__retain_semantics Other source)]
        pub unsafe fn source(&self) -> Option<Retained<NSString>>;

        #[method(isCompiled)]
        pub unsafe fn isCompiled(&self) -> bool;

        #[cfg(all(feature = "NSDictionary", feature = "NSString"))]
        #[method(compileAndReturnError:)]
        pub unsafe fn compileAndReturnError(
            &self,
            error_info: Option<&mut Option<Retained<NSDictionary<NSString, AnyObject>>>>,
        ) -> bool;

        #[cfg(all(
            feature = "NSAppleEventDescriptor",
            feature = "NSDictionary",
            feature = "NSString"
        ))]
        #[method_id(@__retain_semantics Other executeAndReturnError:)]
        pub unsafe fn executeAndReturnError(
            &self,
            error_info: Option<&mut Option<Retained<NSDictionary<NSString, AnyObject>>>>,
        ) -> Retained<NSAppleEventDescriptor>;

        #[cfg(all(
            feature = "NSAppleEventDescriptor",
            feature = "NSDictionary",
            feature = "NSString"
        ))]
        #[method_id(@__retain_semantics Other executeAppleEvent:error:)]
        pub unsafe fn executeAppleEvent_error(
            &self,
            event: &NSAppleEventDescriptor,
            error_info: Option<&mut Option<Retained<NSDictionary<NSString, AnyObject>>>>,
        ) -> Retained<NSAppleEventDescriptor>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSAppleScript {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
