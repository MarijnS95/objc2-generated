//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::QuartzCore::*;

// NS_TYPED_ENUM
#[cfg(feature = "Foundation_NSString")]
pub type CATextLayerTruncationMode = NSString;

// NS_TYPED_ENUM
#[cfg(feature = "Foundation_NSString")]
pub type CATextLayerAlignmentMode = NSString;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "QuartzCore_CALayer")]
    pub struct CATextLayer;

    #[cfg(feature = "QuartzCore_CALayer")]
    unsafe impl ClassType for CATextLayer {
        #[inherits(NSObject)]
        type Super = CALayer;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(feature = "QuartzCore_CALayer", feature = "QuartzCore_CAMediaTiming"))]
unsafe impl CAMediaTiming for CATextLayer {}

#[cfg(all(feature = "Foundation_NSObject", feature = "QuartzCore_CALayer"))]
unsafe impl NSCoding for CATextLayer {}

#[cfg(feature = "QuartzCore_CALayer")]
unsafe impl NSObjectProtocol for CATextLayer {}

#[cfg(all(feature = "Foundation_NSObject", feature = "QuartzCore_CALayer"))]
unsafe impl NSSecureCoding for CATextLayer {}

extern_methods!(
    #[cfg(feature = "QuartzCore_CALayer")]
    unsafe impl CATextLayer {
        #[method_id(@__retain_semantics Other string)]
        pub unsafe fn string(&self) -> Option<Id<AnyObject>>;

        #[method(setString:)]
        pub unsafe fn setString(&self, string: Option<&AnyObject>);

        #[cfg(feature = "Foundation_NSGeometry")]
        #[method(fontSize)]
        pub unsafe fn fontSize(&self) -> CGFloat;

        #[cfg(feature = "Foundation_NSGeometry")]
        #[method(setFontSize:)]
        pub unsafe fn setFontSize(&self, font_size: CGFloat);

        #[method(isWrapped)]
        pub unsafe fn isWrapped(&self) -> bool;

        #[method(setWrapped:)]
        pub unsafe fn setWrapped(&self, wrapped: bool);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other truncationMode)]
        pub unsafe fn truncationMode(&self) -> Id<CATextLayerTruncationMode>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setTruncationMode:)]
        pub unsafe fn setTruncationMode(&self, truncation_mode: &CATextLayerTruncationMode);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other alignmentMode)]
        pub unsafe fn alignmentMode(&self) -> Id<CATextLayerAlignmentMode>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setAlignmentMode:)]
        pub unsafe fn setAlignmentMode(&self, alignment_mode: &CATextLayerAlignmentMode);

        #[method(allowsFontSubpixelQuantization)]
        pub unsafe fn allowsFontSubpixelQuantization(&self) -> bool;

        #[method(setAllowsFontSubpixelQuantization:)]
        pub unsafe fn setAllowsFontSubpixelQuantization(
            &self,
            allows_font_subpixel_quantization: bool,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `CALayer`
    #[cfg(feature = "QuartzCore_CALayer")]
    unsafe impl CATextLayer {
        #[method_id(@__retain_semantics Other layer)]
        pub unsafe fn layer() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics Init initWithLayer:)]
        pub unsafe fn initWithLayer(this: Allocated<Self>, layer: &AnyObject) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "QuartzCore_CALayer")]
    unsafe impl CATextLayer {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCATruncationNone: &'static CATextLayerTruncationMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCATruncationStart: &'static CATextLayerTruncationMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCATruncationEnd: &'static CATextLayerTruncationMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCATruncationMiddle: &'static CATextLayerTruncationMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCAAlignmentNatural: &'static CATextLayerAlignmentMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCAAlignmentLeft: &'static CATextLayerAlignmentMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCAAlignmentRight: &'static CATextLayerAlignmentMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCAAlignmentCenter: &'static CATextLayerAlignmentMode;
}

extern "C" {
    #[cfg(feature = "Foundation_NSString")]
    pub static kCAAlignmentJustified: &'static CATextLayerAlignmentMode;
}
