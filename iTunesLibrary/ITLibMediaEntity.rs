//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// The ITLibMediaEntity class serves as the abstract superclass for ITLibMediaItem and ITLibPlaylist instances.
    /// As the superclass, ITLibMediaEntity defines methods used by those subclasses.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/ituneslibrary/itlibmediaentity?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ITLibMediaEntity;
);

unsafe impl NSObjectProtocol for ITLibMediaEntity {}

impl ITLibMediaEntity {
    extern_methods!(
        /// The unique identifier of this media entity.
        #[unsafe(method(persistentID))]
        #[unsafe(method_family = none)]
        pub unsafe fn persistentID(&self) -> Retained<NSNumber>;

        /// Gets the value for a specified media property key.
        ///
        /// The media property keys you can use with this property are listed in this document
        /// and in Media Item Property Keys and Playlist Property Keys.
        ///
        /// Parameter `property`: The media property key that you want the corresponding value of.
        ///
        /// Returns: The value for the media property key.
        #[unsafe(method(valueForProperty:))]
        #[unsafe(method_family = none)]
        pub unsafe fn valueForProperty(&self, property: &NSString) -> Option<Retained<AnyObject>>;

        #[cfg(feature = "block2")]
        /// Executes a provided block with the fetched values for the given item properties.
        ///
        /// Use this method to get property values in a batch fashion.
        /// In some cases, enumerating over a set of property keys can be more efficient
        /// than fetching each individual property with valueForProperty:.
        /// The media property keys you can use with this property are listed in this document
        /// and in Media Item Property Keys and Playlist Property Keys.
        ///
        /// Parameter `properties`: A set of keys for the properties that will be enumerated, or nil to enumerate all properties.
        ///
        /// Parameter `block`: A block object that executes for each property in the properties set.
        #[unsafe(method(enumerateValuesForProperties:usingBlock:))]
        #[unsafe(method_family = none)]
        pub unsafe fn enumerateValuesForProperties_usingBlock(
            &self,
            properties: Option<&NSSet<NSString>>,
            block: &block2::Block<dyn Fn(NonNull<NSString>, NonNull<AnyObject>, NonNull<Bool>)>,
        );

        #[cfg(feature = "block2")]
        /// Executes a provided block with the fetched values for all properties in the entity except for the provided set.
        ///
        /// Use this method to get property values in a batch fashion.
        /// In some cases, enumerating over a set of property keys can be more efficient
        /// than fetching each individual property with valueForProperty:.
        /// The media property keys you can use with this property are listed in this document
        /// and in Media Item Property Keys and Playlist Property Keys.
        ///
        /// Parameter `properties`: A set of property keys that should NOT be enumerated, or nil to enumerate all properties.
        ///
        /// Parameter `block`: A block object that executes for each property except for the ones in the properties set.
        #[unsafe(method(enumerateValuesExceptForProperties:usingBlock:))]
        #[unsafe(method_family = none)]
        pub unsafe fn enumerateValuesExceptForProperties_usingBlock(
            &self,
            properties: Option<&NSSet<NSString>>,
            block: &block2::Block<dyn Fn(NonNull<NSString>, NonNull<AnyObject>, NonNull<Bool>)>,
        );
    );
}

/// Methods declared on superclass `NSObject`.
impl ITLibMediaEntity {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/ituneslibrary/itlibmediaentitypropertypersistentid?language=objc)
    pub static ITLibMediaEntityPropertyPersistentID: &'static NSString;
}
