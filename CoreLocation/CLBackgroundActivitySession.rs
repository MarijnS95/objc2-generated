//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/corelocation/clbackgroundactivitysessiondiagnostic?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CLBackgroundActivitySessionDiagnostic;
);

unsafe impl NSObjectProtocol for CLBackgroundActivitySessionDiagnostic {}

extern_methods!(
    unsafe impl CLBackgroundActivitySessionDiagnostic {
        #[method(authorizationDenied)]
        pub unsafe fn authorizationDenied(&self) -> bool;

        #[method(authorizationDeniedGlobally)]
        pub unsafe fn authorizationDeniedGlobally(&self) -> bool;

        #[method(authorizationRestricted)]
        pub unsafe fn authorizationRestricted(&self) -> bool;

        #[method(insufficientlyInUse)]
        pub unsafe fn insufficientlyInUse(&self) -> bool;

        #[method(serviceSessionRequired)]
        pub unsafe fn serviceSessionRequired(&self) -> bool;

        #[method(authorizationRequestInProgress)]
        pub unsafe fn authorizationRequestInProgress(&self) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CLBackgroundActivitySessionDiagnostic {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/corelocation/clbackgroundactivitysession?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CLBackgroundActivitySession;
);

unsafe impl NSObjectProtocol for CLBackgroundActivitySession {}

extern_methods!(
    unsafe impl CLBackgroundActivitySession {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method(invalidate)]
        pub unsafe fn invalidate(&self);

        #[unsafe(method_family(none))]
        #[method_id(backgroundActivitySession)]
        pub unsafe fn backgroundActivitySession() -> Retained<Self>;
    }
);
