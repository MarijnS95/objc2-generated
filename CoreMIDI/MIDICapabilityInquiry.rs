//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-foundation")]
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midicideviceidentification?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct MIDICIDeviceIdentification {
    pub manufacturer: [u8; 3],
    pub family: [u8; 2],
    pub modelNumber: [u8; 2],
    pub revisionLevel: [u8; 4],
    pub reserved: [u8; 5],
}

#[cfg(feature = "objc2")]
unsafe impl Encode for MIDICIDeviceIdentification {
    const ENCODING: Encoding = Encoding::Struct(
        "MIDICIDeviceIdentification",
        &[
            <[u8; 3]>::ENCODING,
            <[u8; 2]>::ENCODING,
            <[u8; 2]>::ENCODING,
            <[u8; 4]>::ENCODING,
            <[u8; 5]>::ENCODING,
        ],
    );
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for MIDICIDeviceIdentification {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// An outdated MIDI-CI constant indicating "the whole port", i.e. all channels.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/coremidi/midichannelswholeport?language=objc)
#[cfg(feature = "MIDIMessages")]
pub static MIDIChannelsWholePort: MIDIChannelNumber = 0x7f;

/// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciinitiatiormuid?language=objc)
#[cfg(feature = "objc2-foundation")]
pub type MIDICIInitiatiorMUID = NSNumber;

/// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciprofilestatelist?language=objc)
#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
pub type MIDICIProfileStateList = NSArray<MIDICIProfileState>;

#[cfg(feature = "objc2")]
extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midicideviceinfo?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    #[deprecated = "No longer supported for CoreMIDI"]
    pub struct MIDICIDeviceInfo;
);

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSCoding for MIDICIDeviceInfo {}

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for MIDICIDeviceInfo {}

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSSecureCoding for MIDICIDeviceInfo {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIDeviceInfo {
        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other manufacturerID)]
        pub unsafe fn manufacturerID(&self) -> Retained<NSData>;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other family)]
        pub unsafe fn family(&self) -> Retained<NSData>;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other modelNumber)]
        pub unsafe fn modelNumber(&self) -> Retained<NSData>;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other revisionLevel)]
        pub unsafe fn revisionLevel(&self) -> Retained<NSData>;

        #[cfg(feature = "MIDIServices")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(midiDestination)]
        pub unsafe fn midiDestination(&self) -> MIDIEndpointRef;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "MIDIServices", feature = "objc2-foundation"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Init initWithDestination:manufacturer:family:model:revision:)]
        pub unsafe fn initWithDestination_manufacturer_family_model_revision(
            this: Allocated<Self>,
            midi_destination: MIDIEntityRef,
            manufacturer: &NSData,
            family: &NSData,
            model_number: &NSData,
            revision_level: &NSData,
        ) -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIDeviceInfo {
        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midicidiscoverednode?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    #[deprecated = "No longer supported for CoreMIDI"]
    pub struct MIDICIDiscoveredNode;
);

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSCoding for MIDICIDiscoveredNode {}

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for MIDICIDiscoveredNode {}

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSSecureCoding for MIDICIDiscoveredNode {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIDiscoveredNode {
        #[cfg(feature = "MIDIServices")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(destination)]
        pub unsafe fn destination(&self) -> MIDIEntityRef;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other deviceInfo)]
        pub unsafe fn deviceInfo(&self) -> Retained<MIDICIDeviceInfo>;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(supportsProfiles)]
        pub unsafe fn supportsProfiles(&self) -> bool;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(supportsProperties)]
        pub unsafe fn supportsProperties(&self) -> bool;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other maximumSysExSize)]
        pub unsafe fn maximumSysExSize(&self) -> Retained<NSNumber>;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIDiscoveredNode {
        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_class!(
    /// An NSObject representing Capability Inquiry profile. MIDI-CI profiles describe a mapping
    /// of MIDI messages to specific sounds and synthesis behaviors, e.g. General MIDI, a drawbar organ,
    /// etc. A MIDI-CI profile may be a standard registered profile or vendor-specific.
    ///
    /// Standard Profile                Vendor-Specific Profile
    /// Profile ID Byte 1:    0x7E Standard Profile            Manufacturer SysEx ID 1 Profile
    /// Profile ID Byte 2:    Profile Bank                Manufacturer SysEx ID 2 Profile
    /// Profile ID Byte 3:    Profile Number                Manufacturer SysEx ID 3 Profile
    /// Profile ID Byte 4:    Profile Version                Manufacturer-specific Info
    /// Profile ID Byte 5:    Profile Level                Manufacturer-specific Info
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciprofile?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    pub struct MIDICIProfile;
);

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSCoding for MIDICIProfile {}

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for MIDICIProfile {}

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSSecureCoding for MIDICIProfile {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIProfile {
        #[cfg(feature = "objc2-foundation")]
        /// An NSString describing the profile.
        #[method_id(@__method_family Other name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "objc2-foundation")]
        /// The unique 5-byte profile identifier representing the profile.
        #[method_id(@__method_family Other profileID)]
        pub unsafe fn profileID(&self) -> Retained<NSData>;

        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__method_family Init initWithData:)]
        pub unsafe fn initWithData(this: Allocated<Self>, data: &NSData) -> Retained<Self>;

        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__method_family Init initWithData:name:)]
        pub unsafe fn initWithData_name(
            this: Allocated<Self>,
            data: &NSData,
            in_name: &NSString,
        ) -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIProfile {
        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciprofilestate?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    pub struct MIDICIProfileState;
);

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSCoding for MIDICIProfileState {}

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for MIDICIProfileState {}

#[cfg(all(feature = "objc2", feature = "objc2-foundation"))]
unsafe impl NSSecureCoding for MIDICIProfileState {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIProfileState {
        #[cfg(feature = "MIDIMessages")]
        #[method(midiChannel)]
        pub unsafe fn midiChannel(&self) -> MIDIChannelNumber;

        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__method_family Other enabledProfiles)]
        pub unsafe fn enabledProfiles(&self) -> Retained<NSArray<MIDICIProfile>>;

        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__method_family Other disabledProfiles)]
        pub unsafe fn disabledProfiles(&self) -> Retained<NSArray<MIDICIProfile>>;

        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "MIDIMessages", feature = "objc2-foundation"))]
        #[deprecated]
        #[method_id(@__method_family Init initWithChannel:enabledProfiles:disabledProfiles:)]
        pub unsafe fn initWithChannel_enabledProfiles_disabledProfiles(
            this: Allocated<Self>,
            midi_channel_num: MIDIChannelNumber,
            enabled: &NSArray<MIDICIProfile>,
            disabled: &NSArray<MIDICIProfile>,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-foundation")]
        #[method_id(@__method_family Init initWithEnabledProfiles:disabledProfiles:)]
        pub unsafe fn initWithEnabledProfiles_disabledProfiles(
            this: Allocated<Self>,
            enabled: &NSArray<MIDICIProfile>,
            disabled: &NSArray<MIDICIProfile>,
        ) -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIProfileState {
        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

/// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciprofilechangedblock?language=objc)
#[cfg(all(feature = "MIDIMessages", feature = "block2", feature = "objc2"))]
pub type MIDICIProfileChangedBlock = *mut block2::Block<
    dyn Fn(NonNull<MIDICISession>, MIDIChannelNumber, NonNull<MIDICIProfile>, Bool),
>;

/// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midicisessiondisconnectblock?language=objc)
#[cfg(all(feature = "block2", feature = "objc2", feature = "objc2-foundation"))]
pub type MIDICISessionDisconnectBlock =
    *mut block2::Block<dyn Fn(NonNull<MIDICISession>, NonNull<NSError>)>;

/// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciprofilespecificdatablock?language=objc)
#[cfg(all(
    feature = "MIDIMessages",
    feature = "block2",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub type MIDICIProfileSpecificDataBlock = *mut block2::Block<
    dyn Fn(NonNull<MIDICISession>, MIDIChannelNumber, NonNull<MIDICIProfile>, NonNull<NSData>),
>;

/// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midicidiscoveryresponseblock?language=objc)
#[cfg(all(feature = "block2", feature = "objc2", feature = "objc2-foundation"))]
pub type MIDICIDiscoveryResponseBlock =
    *mut block2::Block<dyn Fn(NonNull<NSArray<MIDICIDiscoveredNode>>)>;

#[cfg(feature = "objc2")]
extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midicisession?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    #[deprecated = "No longer supported for CoreMIDI"]
    pub struct MIDICISession;
);

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for MIDICISession {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl MIDICISession {
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "block2", feature = "objc2-foundation"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Init initWithDiscoveredNode:dataReadyHandler:disconnectHandler:)]
        pub unsafe fn initWithDiscoveredNode_dataReadyHandler_disconnectHandler(
            this: Allocated<Self>,
            discovered_node: &MIDICIDiscoveredNode,
            handler: &block2::Block<dyn Fn()>,
            disconnect_handler: MIDICISessionDisconnectBlock,
        ) -> Retained<Self>;

        #[cfg(feature = "MIDIServices")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(midiDestination)]
        pub unsafe fn midiDestination(&self) -> MIDIEntityRef;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(supportsProfileCapability)]
        pub unsafe fn supportsProfileCapability(&self) -> bool;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(supportsPropertyCapability)]
        pub unsafe fn supportsPropertyCapability(&self) -> bool;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other deviceInfo)]
        pub unsafe fn deviceInfo(&self) -> Retained<MIDICIDeviceInfo>;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other maxSysExSize)]
        pub unsafe fn maxSysExSize(&self) -> Retained<NSNumber>;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other maxPropertyRequests)]
        pub unsafe fn maxPropertyRequests(&self) -> Retained<NSNumber>;

        #[cfg(feature = "MIDIMessages")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other profileStateForChannel:)]
        pub unsafe fn profileStateForChannel(
            &self,
            channel: MIDIChannelNumber,
        ) -> Retained<MIDICIProfileState>;

        #[cfg(all(feature = "MIDIMessages", feature = "objc2-foundation"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(enableProfile:onChannel:error:_)]
        pub unsafe fn enableProfile_onChannel_error(
            &self,
            profile: &MIDICIProfile,
            channel: MIDIChannelNumber,
        ) -> Result<(), Retained<NSError>>;

        #[cfg(all(feature = "MIDIMessages", feature = "objc2-foundation"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(disableProfile:onChannel:error:_)]
        pub unsafe fn disableProfile_onChannel_error(
            &self,
            profile: &MIDICIProfile,
            channel: MIDIChannelNumber,
        ) -> Result<(), Retained<NSError>>;

        #[cfg(all(feature = "MIDIMessages", feature = "objc2-foundation"))]
        #[method(sendProfile:onChannel:profileData:)]
        pub unsafe fn sendProfile_onChannel_profileData(
            &self,
            profile: &MIDICIProfile,
            channel: MIDIChannelNumber,
            profile_specific_data: &NSData,
        ) -> bool;

        #[cfg(all(feature = "MIDIMessages", feature = "block2"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(profileChangedCallback)]
        pub unsafe fn profileChangedCallback(&self) -> MIDICIProfileChangedBlock;

        #[cfg(all(feature = "MIDIMessages", feature = "block2"))]
        /// Setter for [`profileChangedCallback`][Self::profileChangedCallback].
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(setProfileChangedCallback:)]
        pub unsafe fn setProfileChangedCallback(
            &self,
            profile_changed_callback: MIDICIProfileChangedBlock,
        );

        #[cfg(all(
            feature = "MIDIMessages",
            feature = "block2",
            feature = "objc2-foundation"
        ))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(profileSpecificDataHandler)]
        pub unsafe fn profileSpecificDataHandler(&self) -> MIDICIProfileSpecificDataBlock;

        #[cfg(all(
            feature = "MIDIMessages",
            feature = "block2",
            feature = "objc2-foundation"
        ))]
        /// Setter for [`profileSpecificDataHandler`][Self::profileSpecificDataHandler].
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(setProfileSpecificDataHandler:)]
        pub unsafe fn setProfileSpecificDataHandler(
            &self,
            profile_specific_data_handler: MIDICIProfileSpecificDataBlock,
        );
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl MIDICISession {
        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midicidiscoverymanager?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    #[deprecated = "No longer supported for CoreMIDI"]
    pub struct MIDICIDiscoveryManager;
);

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for MIDICIDiscoveryManager {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIDiscoveryManager {
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other sharedInstance)]
        pub unsafe fn sharedInstance() -> Retained<MIDICIDiscoveryManager>;

        #[cfg(all(feature = "block2", feature = "objc2-foundation"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(discoverWithHandler:)]
        pub unsafe fn discoverWithHandler(&self, completed_handler: MIDICIDiscoveryResponseBlock);
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIDiscoveryManager {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

#[cfg(feature = "objc2")]
extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciprofileresponderdelegate?language=objc)
    #[cfg(feature = "objc2")]
    #[deprecated = "No longer supported for CoreMIDI"]
    pub unsafe trait MIDICIProfileResponderDelegate: NSObjectProtocol {
        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(connectInitiator:withDeviceInfo:)]
        unsafe fn connectInitiator_withDeviceInfo(
            &self,
            initiator_muid: &MIDICIInitiatiorMUID,
            device_info: &MIDICIDeviceInfo,
        ) -> bool;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(initiatorDisconnected:)]
        unsafe fn initiatorDisconnected(&self, initiator_muid: &MIDICIInitiatiorMUID);

        #[cfg(feature = "MIDIMessages")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[optional]
        #[method(willSetProfile:onChannel:enabled:)]
        unsafe fn willSetProfile_onChannel_enabled(
            &self,
            a_profile: &MIDICIProfile,
            channel: MIDIChannelNumber,
            should_enable: bool,
        ) -> bool;

        #[cfg(all(feature = "MIDIMessages", feature = "objc2-foundation"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[optional]
        #[method(handleDataForProfile:onChannel:data:)]
        unsafe fn handleDataForProfile_onChannel_data(
            &self,
            a_profile: &MIDICIProfile,
            channel: MIDIChannelNumber,
            in_data: &NSData,
        );
    }
);

#[cfg(feature = "objc2")]
extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coremidi/midiciresponder?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2")]
    #[deprecated = "No longer supported for CoreMIDI"]
    pub struct MIDICIResponder;
);

#[cfg(feature = "objc2")]
unsafe impl NSObjectProtocol for MIDICIResponder {}

#[cfg(feature = "objc2")]
extern_methods!(
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIResponder {
        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other initiators)]
        pub unsafe fn initiators(&self) -> Retained<NSArray<MIDICIInitiatiorMUID>>;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other profileDelegate)]
        pub unsafe fn profileDelegate(
            &self,
        ) -> Retained<ProtocolObject<dyn MIDICIProfileResponderDelegate>>;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Other deviceInfo)]
        pub unsafe fn deviceInfo(&self) -> Retained<MIDICIDeviceInfo>;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "objc2-foundation")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method_id(@__method_family Init initWithDeviceInfo:profileDelegate:profileStates:supportProperties:)]
        pub unsafe fn initWithDeviceInfo_profileDelegate_profileStates_supportProperties(
            this: Allocated<Self>,
            device_info: &MIDICIDeviceInfo,
            delegate: &ProtocolObject<dyn MIDICIProfileResponderDelegate>,
            profile_list: &MIDICIProfileStateList,
            properties_supported: bool,
        ) -> Retained<Self>;

        #[cfg(feature = "MIDIMessages")]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(notifyProfile:onChannel:isEnabled:)]
        pub unsafe fn notifyProfile_onChannel_isEnabled(
            &self,
            a_profile: &MIDICIProfile,
            channel: MIDIChannelNumber,
            enabled_state: bool,
        ) -> bool;

        #[cfg(all(feature = "MIDIMessages", feature = "objc2-foundation"))]
        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(sendProfile:onChannel:profileData:)]
        pub unsafe fn sendProfile_onChannel_profileData(
            &self,
            a_profile: &MIDICIProfile,
            channel: MIDIChannelNumber,
            profile_specific_data: &NSData,
        ) -> bool;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(start)]
        pub unsafe fn start(&self) -> bool;

        #[deprecated = "No longer supported for CoreMIDI"]
        #[method(stop)]
        pub unsafe fn stop(&self);
    }
);

#[cfg(feature = "objc2")]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "objc2")]
    unsafe impl MIDICIResponder {
        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
