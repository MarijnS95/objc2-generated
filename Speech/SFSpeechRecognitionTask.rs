//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/speech/sfspeechrecognitiontaskstate?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct SFSpeechRecognitionTaskState(pub NSInteger);
impl SFSpeechRecognitionTaskState {
    #[doc(alias = "SFSpeechRecognitionTaskStateStarting")]
    pub const Starting: Self = Self(0);
    #[doc(alias = "SFSpeechRecognitionTaskStateRunning")]
    pub const Running: Self = Self(1);
    #[doc(alias = "SFSpeechRecognitionTaskStateFinishing")]
    pub const Finishing: Self = Self(2);
    #[doc(alias = "SFSpeechRecognitionTaskStateCanceling")]
    pub const Canceling: Self = Self(3);
    #[doc(alias = "SFSpeechRecognitionTaskStateCompleted")]
    pub const Completed: Self = Self(4);
}

unsafe impl Encode for SFSpeechRecognitionTaskState {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for SFSpeechRecognitionTaskState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/speech/sfspeechrecognitiontask?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SFSpeechRecognitionTask;
);

unsafe impl NSObjectProtocol for SFSpeechRecognitionTask {}

extern_methods!(
    unsafe impl SFSpeechRecognitionTask {
        #[method(state)]
        #[unsafe(method_family = none)]
        pub unsafe fn state(&self) -> SFSpeechRecognitionTaskState;

        #[method(isFinishing)]
        #[unsafe(method_family = none)]
        pub unsafe fn isFinishing(&self) -> bool;

        #[method(finish)]
        #[unsafe(method_family = none)]
        pub unsafe fn finish(&self);

        #[method(isCancelled)]
        #[unsafe(method_family = none)]
        pub unsafe fn isCancelled(&self) -> bool;

        #[method(cancel)]
        #[unsafe(method_family = none)]
        pub unsafe fn cancel(&self);

        #[method(error)]
        #[unsafe(method_family = none)]
        pub unsafe fn error(&self) -> Option<Retained<NSError>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SFSpeechRecognitionTask {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/speech/sfspeechrecognitiontaskdelegate?language=objc)
    pub unsafe trait SFSpeechRecognitionTaskDelegate: NSObjectProtocol {
        #[optional]
        #[method(speechRecognitionDidDetectSpeech:)]
        #[unsafe(method_family = none)]
        unsafe fn speechRecognitionDidDetectSpeech(&self, task: &SFSpeechRecognitionTask);

        #[cfg(feature = "SFTranscription")]
        #[optional]
        #[method(speechRecognitionTask:didHypothesizeTranscription:)]
        #[unsafe(method_family = none)]
        unsafe fn speechRecognitionTask_didHypothesizeTranscription(
            &self,
            task: &SFSpeechRecognitionTask,
            transcription: &SFTranscription,
        );

        #[cfg(feature = "SFSpeechRecognitionResult")]
        #[optional]
        #[method(speechRecognitionTask:didFinishRecognition:)]
        #[unsafe(method_family = none)]
        unsafe fn speechRecognitionTask_didFinishRecognition(
            &self,
            task: &SFSpeechRecognitionTask,
            recognition_result: &SFSpeechRecognitionResult,
        );

        #[optional]
        #[method(speechRecognitionTaskFinishedReadingAudio:)]
        #[unsafe(method_family = none)]
        unsafe fn speechRecognitionTaskFinishedReadingAudio(&self, task: &SFSpeechRecognitionTask);

        #[optional]
        #[method(speechRecognitionTaskWasCancelled:)]
        #[unsafe(method_family = none)]
        unsafe fn speechRecognitionTaskWasCancelled(&self, task: &SFSpeechRecognitionTask);

        #[optional]
        #[method(speechRecognitionTask:didFinishSuccessfully:)]
        #[unsafe(method_family = none)]
        unsafe fn speechRecognitionTask_didFinishSuccessfully(
            &self,
            task: &SFSpeechRecognitionTask,
            successfully: bool,
        );

        #[optional]
        #[method(speechRecognitionTask:didProcessAudioDuration:)]
        #[unsafe(method_family = none)]
        unsafe fn speechRecognitionTask_didProcessAudioDuration(
            &self,
            task: &SFSpeechRecognitionTask,
            duration: NSTimeInterval,
        );
    }
);
