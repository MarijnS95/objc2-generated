//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Speech::*;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum SFSpeechRecognitionTaskState {
        #[doc(alias = "SFSpeechRecognitionTaskStateStarting")]
        Starting = 0,
        #[doc(alias = "SFSpeechRecognitionTaskStateRunning")]
        Running = 1,
        #[doc(alias = "SFSpeechRecognitionTaskStateFinishing")]
        Finishing = 2,
        #[doc(alias = "SFSpeechRecognitionTaskStateCanceling")]
        Canceling = 3,
        #[doc(alias = "SFSpeechRecognitionTaskStateCompleted")]
        Completed = 4,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SFSpeechRecognitionTask;

    unsafe impl ClassType for SFSpeechRecognitionTask {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for SFSpeechRecognitionTask {}

extern_methods!(
    unsafe impl SFSpeechRecognitionTask {
        #[method(state)]
        pub unsafe fn state(&self) -> SFSpeechRecognitionTaskState;

        #[method(isFinishing)]
        pub unsafe fn isFinishing(&self) -> bool;

        #[method(finish)]
        pub unsafe fn finish(&self);

        #[method(isCancelled)]
        pub unsafe fn isCancelled(&self) -> bool;

        #[method(cancel)]
        pub unsafe fn cancel(&self);

        #[cfg(feature = "Foundation_NSError")]
        #[method_id(@__retain_semantics Other error)]
        pub unsafe fn error(&self) -> Option<Id<NSError>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl SFSpeechRecognitionTask {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_protocol!(
    pub unsafe trait SFSpeechRecognitionTaskDelegate: NSObjectProtocol {
        #[optional]
        #[method(speechRecognitionDidDetectSpeech:)]
        unsafe fn speechRecognitionDidDetectSpeech(&self, task: &SFSpeechRecognitionTask);

        #[cfg(feature = "Speech_SFTranscription")]
        #[optional]
        #[method(speechRecognitionTask:didHypothesizeTranscription:)]
        unsafe fn speechRecognitionTask_didHypothesizeTranscription(
            &self,
            task: &SFSpeechRecognitionTask,
            transcription: &SFTranscription,
        );

        #[cfg(feature = "Speech_SFSpeechRecognitionResult")]
        #[optional]
        #[method(speechRecognitionTask:didFinishRecognition:)]
        unsafe fn speechRecognitionTask_didFinishRecognition(
            &self,
            task: &SFSpeechRecognitionTask,
            recognition_result: &SFSpeechRecognitionResult,
        );

        #[optional]
        #[method(speechRecognitionTaskFinishedReadingAudio:)]
        unsafe fn speechRecognitionTaskFinishedReadingAudio(&self, task: &SFSpeechRecognitionTask);

        #[optional]
        #[method(speechRecognitionTaskWasCancelled:)]
        unsafe fn speechRecognitionTaskWasCancelled(&self, task: &SFSpeechRecognitionTask);

        #[optional]
        #[method(speechRecognitionTask:didFinishSuccessfully:)]
        unsafe fn speechRecognitionTask_didFinishSuccessfully(
            &self,
            task: &SFSpeechRecognitionTask,
            successfully: bool,
        );
    }

    unsafe impl ProtocolType for dyn SFSpeechRecognitionTaskDelegate {}
);
