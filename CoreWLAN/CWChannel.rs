//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Represents an IEEE 802.11 channel.
    ///
    ///
    /// The CWChannel class is used by both CWInterface and CWNetwork as a representation of an IEEE 802.11 Wi-Fi channel.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/corewlan/cwchannel?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CWChannel;
);

unsafe impl NSCoding for CWChannel {}

unsafe impl NSCopying for CWChannel {}

unsafe impl CopyingHelper for CWChannel {
    type Result = Self;
}

unsafe impl NSObjectProtocol for CWChannel {}

unsafe impl NSSecureCoding for CWChannel {}

extern_methods!(
    unsafe impl CWChannel {
        /// The channel number represented as an integer value.
        #[method(channelNumber)]
        #[unsafe(method_family = none)]
        pub unsafe fn channelNumber(&self) -> NSInteger;

        #[cfg(feature = "CoreWLANTypes")]
        /// The channel width as indicated by the CWChannelWidth type.
        #[method(channelWidth)]
        #[unsafe(method_family = none)]
        pub unsafe fn channelWidth(&self) -> CWChannelWidth;

        #[cfg(feature = "CoreWLANTypes")]
        /// The channel band as indicated by the CWChannelBand type.
        #[method(channelBand)]
        #[unsafe(method_family = none)]
        pub unsafe fn channelBand(&self) -> CWChannelBand;

        /// Parameter `channel`: The CWChannel with which to compare the receiver.
        ///
        ///
        /// Returns: YES if the objects are equal, otherwise NO.
        ///
        ///
        /// Determine CWChannel equality.
        ///
        ///
        /// CWChannel objects are considered equal if all their corresponding properties are equal.
        #[method(isEqualToChannel:)]
        #[unsafe(method_family = none)]
        pub unsafe fn isEqualToChannel(&self, channel: &CWChannel) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CWChannel {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
