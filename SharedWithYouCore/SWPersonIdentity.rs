//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Represents an opaque Merkle tree where the root hash of the tree can uniquely identify the individual by all of their devices. The individual's devices can prove themselves to be part of this identity, and can then be used for cryptographic signatures for that individual.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/sharedwithyoucore/swpersonidentity?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SWPersonIdentity;
);

extern_conformance!(
    unsafe impl NSCoding for SWPersonIdentity {}
);

extern_conformance!(
    unsafe impl NSCopying for SWPersonIdentity {}
);

unsafe impl CopyingHelper for SWPersonIdentity {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for SWPersonIdentity {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for SWPersonIdentity {}
);

impl SWPersonIdentity {
    extern_methods!(
        /// The root hash of the tree that represents this individual's identity.
        ///
        /// The data contains a SHA256 hash of the user's combined public identities.
        #[unsafe(method(rootHash))]
        #[unsafe(method_family = none)]
        pub unsafe fn rootHash(&self) -> Retained<NSData>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        /// An initializer
        ///
        /// Parameter `rootHash`: The root hash of the tree that represents this individual's identity.
        ///
        /// The data contains a SHA256 hash of the user's combined public identities.
        #[unsafe(method(initWithRootHash:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithRootHash(this: Allocated<Self>, root_hash: &NSData)
            -> Retained<Self>;
    );
}
