//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-audio-toolbox")]
#[cfg(not(target_os = "watchos"))]
use objc2_audio_toolbox::*;

use crate::*;

extern_class!(
    /// an AVAudioUnit that processes audio in real-time
    ///
    /// An AVAudioUnitEffect represents an audio unit of type kAudioUnitType_Effect,
    /// kAudioUnitType_MusicEffect, kAudioUnitType_Panner, kAudioUnitType_RemoteEffect or
    /// kAudioUnitType_RemoteMusicEffect.
    ///
    /// These effects run in real-time and process some x number of audio input
    /// samples to produce x number of audio output samples. A delay unit is an
    /// example of an effect unit.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiouniteffect?language=objc)
    #[unsafe(super(AVAudioUnit, AVAudioNode, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "AVAudioNode", feature = "AVAudioUnit"))]
    pub struct AVAudioUnitEffect;
);

#[cfg(all(feature = "AVAudioNode", feature = "AVAudioUnit"))]
unsafe impl NSObjectProtocol for AVAudioUnitEffect {}

extern_methods!(
    #[cfg(all(feature = "AVAudioNode", feature = "AVAudioUnit"))]
    unsafe impl AVAudioUnitEffect {
        #[cfg(feature = "objc2-audio-toolbox")]
        #[cfg(not(target_os = "watchos"))]
        /// Create an AVAudioUnitEffect object.
        ///
        ///
        /// Parameter `audioComponentDescription`: AudioComponentDescription of the audio unit to be instantiated.
        ///
        /// The componentType must be one of these types
        /// kAudioUnitType_Effect
        /// kAudioUnitType_MusicEffect
        /// kAudioUnitType_Panner
        /// kAudioUnitType_RemoteEffect
        /// kAudioUnitType_RemoteMusicEffect
        #[method(initWithAudioComponentDescription:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithAudioComponentDescription(
            this: Allocated<Self>,
            audio_component_description: AudioComponentDescription,
        ) -> Retained<Self>;

        /// Bypass state of the audio unit.
        #[method(bypass)]
        #[unsafe(method_family = none)]
        pub unsafe fn bypass(&self) -> bool;

        /// Setter for [`bypass`][Self::bypass].
        #[method(setBypass:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setBypass(&self, bypass: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "AVAudioNode", feature = "AVAudioUnit"))]
    unsafe impl AVAudioUnitEffect {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
