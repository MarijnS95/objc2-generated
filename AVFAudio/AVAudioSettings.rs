//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avformatidkey?language=objc)
    pub static AVFormatIDKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avsampleratekey?language=objc)
    pub static AVSampleRateKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avnumberofchannelskey?language=objc)
    pub static AVNumberOfChannelsKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avlinearpcmbitdepthkey?language=objc)
    pub static AVLinearPCMBitDepthKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avlinearpcmisbigendiankey?language=objc)
    pub static AVLinearPCMIsBigEndianKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avlinearpcmisfloatkey?language=objc)
    pub static AVLinearPCMIsFloatKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avlinearpcmisnoninterleaved?language=objc)
    pub static AVLinearPCMIsNonInterleaved: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiofiletypekey?language=objc)
    pub static AVAudioFileTypeKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avencoderaudioqualitykey?language=objc)
    pub static AVEncoderAudioQualityKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avencoderaudioqualityforvbrkey?language=objc)
    pub static AVEncoderAudioQualityForVBRKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avencoderbitratekey?language=objc)
    pub static AVEncoderBitRateKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avencoderbitrateperchannelkey?language=objc)
    pub static AVEncoderBitRatePerChannelKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avencoderbitratestrategykey?language=objc)
    pub static AVEncoderBitRateStrategyKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avencoderbitdepthhintkey?language=objc)
    pub static AVEncoderBitDepthHintKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avsamplerateconverteralgorithmkey?language=objc)
    pub static AVSampleRateConverterAlgorithmKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avsamplerateconverteraudioqualitykey?language=objc)
    pub static AVSampleRateConverterAudioQualityKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avchannellayoutkey?language=objc)
    pub static AVChannelLayoutKey: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiobitratestrategy_constant?language=objc)
    pub static AVAudioBitRateStrategy_Constant: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiobitratestrategy_longtermaverage?language=objc)
    pub static AVAudioBitRateStrategy_LongTermAverage: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiobitratestrategy_variableconstrained?language=objc)
    pub static AVAudioBitRateStrategy_VariableConstrained: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiobitratestrategy_variable?language=objc)
    pub static AVAudioBitRateStrategy_Variable: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avsamplerateconverteralgorithm_normal?language=objc)
    pub static AVSampleRateConverterAlgorithm_Normal: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avsamplerateconverteralgorithm_mastering?language=objc)
    pub static AVSampleRateConverterAlgorithm_Mastering: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avsamplerateconverteralgorithm_minimumphase?language=objc)
    pub static AVSampleRateConverterAlgorithm_MinimumPhase: Option<&'static NSString>;
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudioquality?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAudioQuality(pub NSInteger);
impl AVAudioQuality {
    #[doc(alias = "AVAudioQualityMin")]
    pub const Min: Self = Self(0);
    #[doc(alias = "AVAudioQualityLow")]
    pub const Low: Self = Self(0x20);
    #[doc(alias = "AVAudioQualityMedium")]
    pub const Medium: Self = Self(0x40);
    #[doc(alias = "AVAudioQualityHigh")]
    pub const High: Self = Self(0x60);
    #[doc(alias = "AVAudioQualityMax")]
    pub const Max: Self = Self(0x7F);
}

unsafe impl Encode for AVAudioQuality {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAudioQuality {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
