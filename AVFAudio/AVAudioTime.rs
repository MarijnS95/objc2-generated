//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-audio-types")]
use objc2_core_audio_types::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiotime?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAudioTime;
);

unsafe impl Send for AVAudioTime {}

unsafe impl Sync for AVAudioTime {}

unsafe impl NSObjectProtocol for AVAudioTime {}

extern_methods!(
    unsafe impl AVAudioTime {
        #[cfg(feature = "objc2-core-audio-types")]
        #[method_id(@__retain_semantics Init initWithAudioTimeStamp:sampleRate:)]
        pub unsafe fn initWithAudioTimeStamp_sampleRate(
            this: Allocated<Self>,
            ts: NonNull<AudioTimeStamp>,
            sample_rate: c_double,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithHostTime:)]
        pub unsafe fn initWithHostTime(this: Allocated<Self>, host_time: u64) -> Retained<Self>;

        #[cfg(feature = "AVAudioTypes")]
        #[method_id(@__retain_semantics Init initWithSampleTime:atRate:)]
        pub unsafe fn initWithSampleTime_atRate(
            this: Allocated<Self>,
            sample_time: AVAudioFramePosition,
            sample_rate: c_double,
        ) -> Retained<Self>;

        #[cfg(feature = "AVAudioTypes")]
        #[method_id(@__retain_semantics Init initWithHostTime:sampleTime:atRate:)]
        pub unsafe fn initWithHostTime_sampleTime_atRate(
            this: Allocated<Self>,
            host_time: u64,
            sample_time: AVAudioFramePosition,
            sample_rate: c_double,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-audio-types")]
        #[method_id(@__retain_semantics Other timeWithAudioTimeStamp:sampleRate:)]
        pub unsafe fn timeWithAudioTimeStamp_sampleRate(
            ts: NonNull<AudioTimeStamp>,
            sample_rate: c_double,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other timeWithHostTime:)]
        pub unsafe fn timeWithHostTime(host_time: u64) -> Retained<Self>;

        #[cfg(feature = "AVAudioTypes")]
        #[method_id(@__retain_semantics Other timeWithSampleTime:atRate:)]
        pub unsafe fn timeWithSampleTime_atRate(
            sample_time: AVAudioFramePosition,
            sample_rate: c_double,
        ) -> Retained<Self>;

        #[cfg(feature = "AVAudioTypes")]
        #[method_id(@__retain_semantics Other timeWithHostTime:sampleTime:atRate:)]
        pub unsafe fn timeWithHostTime_sampleTime_atRate(
            host_time: u64,
            sample_time: AVAudioFramePosition,
            sample_rate: c_double,
        ) -> Retained<Self>;

        #[method(hostTimeForSeconds:)]
        pub unsafe fn hostTimeForSeconds(seconds: NSTimeInterval) -> u64;

        #[method(secondsForHostTime:)]
        pub unsafe fn secondsForHostTime(host_time: u64) -> NSTimeInterval;

        #[method_id(@__retain_semantics Other extrapolateTimeFromAnchor:)]
        pub unsafe fn extrapolateTimeFromAnchor(
            &self,
            anchor_time: &AVAudioTime,
        ) -> Option<Retained<AVAudioTime>>;

        #[method(isHostTimeValid)]
        pub unsafe fn isHostTimeValid(&self) -> bool;

        #[method(hostTime)]
        pub unsafe fn hostTime(&self) -> u64;

        #[method(isSampleTimeValid)]
        pub unsafe fn isSampleTimeValid(&self) -> bool;

        #[cfg(feature = "AVAudioTypes")]
        #[method(sampleTime)]
        pub unsafe fn sampleTime(&self) -> AVAudioFramePosition;

        #[method(sampleRate)]
        pub unsafe fn sampleRate(&self) -> c_double;

        #[cfg(feature = "objc2-core-audio-types")]
        #[method(audioTimeStamp)]
        pub unsafe fn audioTimeStamp(&self) -> AudioTimeStamp;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVAudioTime {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
