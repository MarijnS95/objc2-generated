//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudioconverterprimemethod?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAudioConverterPrimeMethod(pub NSInteger);
impl AVAudioConverterPrimeMethod {
    #[doc(alias = "AVAudioConverterPrimeMethod_Pre")]
    pub const _Pre: Self = Self(0);
    #[doc(alias = "AVAudioConverterPrimeMethod_Normal")]
    pub const _Normal: Self = Self(1);
    #[doc(alias = "AVAudioConverterPrimeMethod_None")]
    pub const _None: Self = Self(2);
}

unsafe impl Encode for AVAudioConverterPrimeMethod {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAudioConverterPrimeMethod {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudioconverterprimeinfo?language=objc)
#[cfg(feature = "AVAudioTypes")]
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct AVAudioConverterPrimeInfo {
    pub leadingFrames: AVAudioFrameCount,
    pub trailingFrames: AVAudioFrameCount,
}

#[cfg(feature = "AVAudioTypes")]
unsafe impl Encode for AVAudioConverterPrimeInfo {
    const ENCODING: Encoding = Encoding::Struct(
        "AVAudioConverterPrimeInfo",
        &[<AVAudioFrameCount>::ENCODING, <AVAudioFrameCount>::ENCODING],
    );
}

#[cfg(feature = "AVAudioTypes")]
unsafe impl RefEncode for AVAudioConverterPrimeInfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudioconverterinputstatus?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAudioConverterInputStatus(pub NSInteger);
impl AVAudioConverterInputStatus {
    #[doc(alias = "AVAudioConverterInputStatus_HaveData")]
    pub const _HaveData: Self = Self(0);
    #[doc(alias = "AVAudioConverterInputStatus_NoDataNow")]
    pub const _NoDataNow: Self = Self(1);
    #[doc(alias = "AVAudioConverterInputStatus_EndOfStream")]
    pub const _EndOfStream: Self = Self(2);
}

unsafe impl Encode for AVAudioConverterInputStatus {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAudioConverterInputStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudioconverteroutputstatus?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAudioConverterOutputStatus(pub NSInteger);
impl AVAudioConverterOutputStatus {
    #[doc(alias = "AVAudioConverterOutputStatus_HaveData")]
    pub const _HaveData: Self = Self(0);
    #[doc(alias = "AVAudioConverterOutputStatus_InputRanDry")]
    pub const _InputRanDry: Self = Self(1);
    #[doc(alias = "AVAudioConverterOutputStatus_EndOfStream")]
    pub const _EndOfStream: Self = Self(2);
    #[doc(alias = "AVAudioConverterOutputStatus_Error")]
    pub const _Error: Self = Self(3);
}

unsafe impl Encode for AVAudioConverterOutputStatus {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAudioConverterOutputStatus {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudioconverterinputblock?language=objc)
#[cfg(all(
    feature = "AVAudioBuffer",
    feature = "AVAudioTypes",
    feature = "block2"
))]
pub type AVAudioConverterInputBlock = *mut block2::Block<
    dyn Fn(AVAudioPacketCount, NonNull<AVAudioConverterInputStatus>) -> *mut AVAudioBuffer,
>;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudioconverter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAudioConverter;
);

unsafe impl NSObjectProtocol for AVAudioConverter {}

extern_methods!(
    unsafe impl AVAudioConverter {
        #[cfg(feature = "AVAudioFormat")]
        #[method_id(@__retain_semantics Init initFromFormat:toFormat:)]
        pub unsafe fn initFromFormat_toFormat(
            this: Allocated<Self>,
            from_format: &AVAudioFormat,
            to_format: &AVAudioFormat,
        ) -> Option<Retained<Self>>;

        #[method(reset)]
        pub unsafe fn reset(&self);

        #[cfg(feature = "AVAudioFormat")]
        #[method_id(@__retain_semantics Other inputFormat)]
        pub unsafe fn inputFormat(&self) -> Retained<AVAudioFormat>;

        #[cfg(feature = "AVAudioFormat")]
        #[method_id(@__retain_semantics Other outputFormat)]
        pub unsafe fn outputFormat(&self) -> Retained<AVAudioFormat>;

        #[method_id(@__retain_semantics Other channelMap)]
        pub unsafe fn channelMap(&self) -> Retained<NSArray<NSNumber>>;

        #[method(setChannelMap:)]
        pub unsafe fn setChannelMap(&self, channel_map: &NSArray<NSNumber>);

        #[method_id(@__retain_semantics Other magicCookie)]
        pub unsafe fn magicCookie(&self) -> Option<Retained<NSData>>;

        #[method(setMagicCookie:)]
        pub unsafe fn setMagicCookie(&self, magic_cookie: Option<&NSData>);

        #[method(downmix)]
        pub unsafe fn downmix(&self) -> bool;

        #[method(setDownmix:)]
        pub unsafe fn setDownmix(&self, downmix: bool);

        #[method(dither)]
        pub unsafe fn dither(&self) -> bool;

        #[method(setDither:)]
        pub unsafe fn setDither(&self, dither: bool);

        #[method(sampleRateConverterQuality)]
        pub unsafe fn sampleRateConverterQuality(&self) -> NSInteger;

        #[method(setSampleRateConverterQuality:)]
        pub unsafe fn setSampleRateConverterQuality(
            &self,
            sample_rate_converter_quality: NSInteger,
        );

        #[method_id(@__retain_semantics Other sampleRateConverterAlgorithm)]
        pub unsafe fn sampleRateConverterAlgorithm(&self) -> Option<Retained<NSString>>;

        #[method(setSampleRateConverterAlgorithm:)]
        pub unsafe fn setSampleRateConverterAlgorithm(
            &self,
            sample_rate_converter_algorithm: Option<&NSString>,
        );

        #[method(primeMethod)]
        pub unsafe fn primeMethod(&self) -> AVAudioConverterPrimeMethod;

        #[method(setPrimeMethod:)]
        pub unsafe fn setPrimeMethod(&self, prime_method: AVAudioConverterPrimeMethod);

        #[cfg(feature = "AVAudioTypes")]
        #[method(primeInfo)]
        pub unsafe fn primeInfo(&self) -> AVAudioConverterPrimeInfo;

        #[cfg(feature = "AVAudioTypes")]
        #[method(setPrimeInfo:)]
        pub unsafe fn setPrimeInfo(&self, prime_info: AVAudioConverterPrimeInfo);

        #[cfg(feature = "AVAudioBuffer")]
        #[method(convertToBuffer:fromBuffer:error:_)]
        pub unsafe fn convertToBuffer_fromBuffer_error(
            &self,
            output_buffer: &AVAudioPCMBuffer,
            input_buffer: &AVAudioPCMBuffer,
        ) -> Result<(), Retained<NSError>>;

        #[cfg(all(
            feature = "AVAudioBuffer",
            feature = "AVAudioTypes",
            feature = "block2"
        ))]
        #[method(convertToBuffer:error:withInputFromBlock:)]
        pub unsafe fn convertToBuffer_error_withInputFromBlock(
            &self,
            output_buffer: &AVAudioBuffer,
            out_error: Option<&mut Option<Retained<NSError>>>,
            input_block: AVAudioConverterInputBlock,
        ) -> AVAudioConverterOutputStatus;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVAudioConverter {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// Encoding
    unsafe impl AVAudioConverter {
        #[method(bitRate)]
        pub unsafe fn bitRate(&self) -> NSInteger;

        #[method(setBitRate:)]
        pub unsafe fn setBitRate(&self, bit_rate: NSInteger);

        #[method_id(@__retain_semantics Other bitRateStrategy)]
        pub unsafe fn bitRateStrategy(&self) -> Option<Retained<NSString>>;

        #[method(setBitRateStrategy:)]
        pub unsafe fn setBitRateStrategy(&self, bit_rate_strategy: Option<&NSString>);

        #[method(maximumOutputPacketSize)]
        pub unsafe fn maximumOutputPacketSize(&self) -> NSInteger;

        #[method_id(@__retain_semantics Other availableEncodeBitRates)]
        pub unsafe fn availableEncodeBitRates(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method_id(@__retain_semantics Other applicableEncodeBitRates)]
        pub unsafe fn applicableEncodeBitRates(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method_id(@__retain_semantics Other availableEncodeSampleRates)]
        pub unsafe fn availableEncodeSampleRates(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method_id(@__retain_semantics Other applicableEncodeSampleRates)]
        pub unsafe fn applicableEncodeSampleRates(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method_id(@__retain_semantics Other availableEncodeChannelLayoutTags)]
        pub unsafe fn availableEncodeChannelLayoutTags(
            &self,
        ) -> Option<Retained<NSArray<NSNumber>>>;
    }
);
