//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;

use crate::*;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiomixing?language=objc)
    pub unsafe trait AVAudioMixing: AVAudio3DMixing + AVAudioStereoMixing {
        #[cfg(all(feature = "AVAudioNode", feature = "AVAudioTypes"))]
        #[method_id(@__retain_semantics Other destinationForMixer:bus:)]
        unsafe fn destinationForMixer_bus(
            &self,
            mixer: &AVAudioNode,
            bus: AVAudioNodeBus,
        ) -> Option<Retained<AVAudioMixingDestination>>;

        #[method(volume)]
        unsafe fn volume(&self) -> c_float;

        #[method(setVolume:)]
        unsafe fn setVolume(&self, volume: c_float);
    }

    unsafe impl ProtocolType for dyn AVAudioMixing {}
);

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiostereomixing?language=objc)
    pub unsafe trait AVAudioStereoMixing: NSObjectProtocol {
        #[method(pan)]
        unsafe fn pan(&self) -> c_float;

        #[method(setPan:)]
        unsafe fn setPan(&self, pan: c_float);
    }

    unsafe impl ProtocolType for dyn AVAudioStereoMixing {}
);

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudio3dmixingrenderingalgorithm?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAudio3DMixingRenderingAlgorithm(pub NSInteger);
impl AVAudio3DMixingRenderingAlgorithm {
    #[doc(alias = "AVAudio3DMixingRenderingAlgorithmEqualPowerPanning")]
    pub const EqualPowerPanning: Self = Self(0);
    #[doc(alias = "AVAudio3DMixingRenderingAlgorithmSphericalHead")]
    pub const SphericalHead: Self = Self(1);
    #[doc(alias = "AVAudio3DMixingRenderingAlgorithmHRTF")]
    pub const HRTF: Self = Self(2);
    #[doc(alias = "AVAudio3DMixingRenderingAlgorithmSoundField")]
    pub const SoundField: Self = Self(3);
    #[doc(alias = "AVAudio3DMixingRenderingAlgorithmStereoPassThrough")]
    pub const StereoPassThrough: Self = Self(5);
    #[doc(alias = "AVAudio3DMixingRenderingAlgorithmHRTFHQ")]
    pub const HRTFHQ: Self = Self(6);
    #[doc(alias = "AVAudio3DMixingRenderingAlgorithmAuto")]
    pub const Auto: Self = Self(7);
}

unsafe impl Encode for AVAudio3DMixingRenderingAlgorithm {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAudio3DMixingRenderingAlgorithm {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudio3dmixingsourcemode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAudio3DMixingSourceMode(pub NSInteger);
impl AVAudio3DMixingSourceMode {
    #[doc(alias = "AVAudio3DMixingSourceModeSpatializeIfMono")]
    pub const SpatializeIfMono: Self = Self(0);
    #[doc(alias = "AVAudio3DMixingSourceModeBypass")]
    pub const Bypass: Self = Self(1);
    #[doc(alias = "AVAudio3DMixingSourceModePointSource")]
    pub const PointSource: Self = Self(2);
    #[doc(alias = "AVAudio3DMixingSourceModeAmbienceBed")]
    pub const AmbienceBed: Self = Self(3);
}

unsafe impl Encode for AVAudio3DMixingSourceMode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAudio3DMixingSourceMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudio3dmixingpointsourceinheadmode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AVAudio3DMixingPointSourceInHeadMode(pub NSInteger);
impl AVAudio3DMixingPointSourceInHeadMode {
    #[doc(alias = "AVAudio3DMixingPointSourceInHeadModeMono")]
    pub const Mono: Self = Self(0);
    #[doc(alias = "AVAudio3DMixingPointSourceInHeadModeBypass")]
    pub const Bypass: Self = Self(1);
}

unsafe impl Encode for AVAudio3DMixingPointSourceInHeadMode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for AVAudio3DMixingPointSourceInHeadMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudio3dmixing?language=objc)
    pub unsafe trait AVAudio3DMixing: NSObjectProtocol {
        #[method(renderingAlgorithm)]
        unsafe fn renderingAlgorithm(&self) -> AVAudio3DMixingRenderingAlgorithm;

        #[method(setRenderingAlgorithm:)]
        unsafe fn setRenderingAlgorithm(
            &self,
            rendering_algorithm: AVAudio3DMixingRenderingAlgorithm,
        );

        #[method(sourceMode)]
        unsafe fn sourceMode(&self) -> AVAudio3DMixingSourceMode;

        #[method(setSourceMode:)]
        unsafe fn setSourceMode(&self, source_mode: AVAudio3DMixingSourceMode);

        #[method(pointSourceInHeadMode)]
        unsafe fn pointSourceInHeadMode(&self) -> AVAudio3DMixingPointSourceInHeadMode;

        #[method(setPointSourceInHeadMode:)]
        unsafe fn setPointSourceInHeadMode(
            &self,
            point_source_in_head_mode: AVAudio3DMixingPointSourceInHeadMode,
        );

        #[method(rate)]
        unsafe fn rate(&self) -> c_float;

        #[method(setRate:)]
        unsafe fn setRate(&self, rate: c_float);

        #[method(reverbBlend)]
        unsafe fn reverbBlend(&self) -> c_float;

        #[method(setReverbBlend:)]
        unsafe fn setReverbBlend(&self, reverb_blend: c_float);

        #[method(obstruction)]
        unsafe fn obstruction(&self) -> c_float;

        #[method(setObstruction:)]
        unsafe fn setObstruction(&self, obstruction: c_float);

        #[method(occlusion)]
        unsafe fn occlusion(&self) -> c_float;

        #[method(setOcclusion:)]
        unsafe fn setOcclusion(&self, occlusion: c_float);

        #[cfg(feature = "AVAudioTypes")]
        #[method(position)]
        unsafe fn position(&self) -> AVAudio3DPoint;

        #[cfg(feature = "AVAudioTypes")]
        #[method(setPosition:)]
        unsafe fn setPosition(&self, position: AVAudio3DPoint);
    }

    unsafe impl ProtocolType for dyn AVAudio3DMixing {}
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiomixingdestination?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVAudioMixingDestination;
);

unsafe impl AVAudio3DMixing for AVAudioMixingDestination {}

unsafe impl AVAudioMixing for AVAudioMixingDestination {}

unsafe impl AVAudioStereoMixing for AVAudioMixingDestination {}

unsafe impl NSObjectProtocol for AVAudioMixingDestination {}

extern_methods!(
    unsafe impl AVAudioMixingDestination {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "AVAudioConnectionPoint")]
        #[method_id(@__retain_semantics Other connectionPoint)]
        pub unsafe fn connectionPoint(&self) -> Retained<AVAudioConnectionPoint>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl AVAudioMixingDestination {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
