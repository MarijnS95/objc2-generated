//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-audio-toolbox")]
#[cfg(not(target_os = "watchos"))]
use objc2_audio_toolbox::*;

use crate::*;

extern_class!(
    /// an AVAudioUnitTimeEffect that can be used to control the playback rate
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfaudio/avaudiounitvarispeed?language=objc)
    #[unsafe(super(AVAudioUnitTimeEffect, AVAudioUnit, AVAudioNode, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "AVAudioNode",
        feature = "AVAudioUnit",
        feature = "AVAudioUnitTimeEffect"
    ))]
    pub struct AVAudioUnitVarispeed;
);

#[cfg(all(
    feature = "AVAudioNode",
    feature = "AVAudioUnit",
    feature = "AVAudioUnitTimeEffect"
))]
unsafe impl NSObjectProtocol for AVAudioUnitVarispeed {}

extern_methods!(
    #[cfg(all(
        feature = "AVAudioNode",
        feature = "AVAudioUnit",
        feature = "AVAudioUnitTimeEffect"
    ))]
    unsafe impl AVAudioUnitVarispeed {
        /// controls the playback rate of the audio signal
        ///
        /// Since this unit resamples the input signal, changing the playback rate also changes the pitch.
        ///
        /// i.e. changing the rate to 2.0 results in the output audio playing one octave higher.
        /// Similarly changing the rate to 0.5, results in the output audio playing one octave lower.
        ///
        /// The playback rate and pitch can be calculated as
        /// rate  = pow(2, cents/1200.0)
        /// pitch in cents  = 1200.0 * log2(rate)
        ///
        /// Where,    1 octave  = 1200 cents
        /// 1 musical semitone  = 100 cents
        ///
        /// Range:      0.25 -> 4.0
        /// Default:    1.0
        /// Unit:       Generic
        #[unsafe(method(rate))]
        #[unsafe(method_family = none)]
        pub unsafe fn rate(&self) -> c_float;

        /// Setter for [`rate`][Self::rate].
        #[unsafe(method(setRate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRate(&self, rate: c_float);
    }
);

extern_methods!(
    /// Methods declared on superclass `AVAudioUnitTimeEffect`
    #[cfg(all(
        feature = "AVAudioNode",
        feature = "AVAudioUnit",
        feature = "AVAudioUnitTimeEffect"
    ))]
    unsafe impl AVAudioUnitVarispeed {
        #[cfg(feature = "objc2-audio-toolbox")]
        #[cfg(not(target_os = "watchos"))]
        /// create an AVAudioUnitTimeEffect object
        ///
        ///
        /// Parameter `audioComponentDescription`: AudioComponentDescription of the audio unit to be initialized
        ///
        /// The componentType must be kAudioUnitType_FormatConverter
        #[unsafe(method(initWithAudioComponentDescription:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithAudioComponentDescription(
            this: Allocated<Self>,
            audio_component_description: AudioComponentDescription,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(
        feature = "AVAudioNode",
        feature = "AVAudioUnit",
        feature = "AVAudioUnitTimeEffect"
    ))]
    unsafe impl AVAudioUnitVarispeed {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
