//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A class that enables a file system module to pass log messages and completion notifications to clients.
    ///
    /// FSKit creates an instance of this class for each long-running operations.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/fskit/fstask?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct FSTask;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for FSTask {}
);

impl FSTask {
    extern_methods!(
        /// Logs the given string to the initiating client.
        ///
        /// - Parameter str: The string to log.
        #[unsafe(method(logMessage:))]
        #[unsafe(method_family = none)]
        pub unsafe fn logMessage(&self, str: &NSString);

        /// Informs the client that the task completed.
        ///
        /// - Parameter error: `nil` if the task completed successfully; otherwise, an error that caused the task to fail.
        #[unsafe(method(didCompleteWithError:))]
        #[unsafe(method_family = none)]
        pub unsafe fn didCompleteWithError(&self, error: Option<&NSError>);
    );
}

/// Methods declared on superclass `NSObject`.
impl FSTask {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
