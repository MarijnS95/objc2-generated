//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mediaplayer/mpmusicplayercontrollerqueue?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPMusicPlayerControllerQueue;
);

unsafe impl NSObjectProtocol for MPMusicPlayerControllerQueue {}

extern_methods!(
    unsafe impl MPMusicPlayerControllerQueue {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(all(feature = "MPMediaEntity", feature = "MPMediaItem"))]
        #[method_id(@__retain_semantics Other items)]
        pub unsafe fn items(&self) -> Retained<NSArray<MPMediaItem>>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mediaplayer/mpmusicplayercontrollermutablequeue?language=objc)
    #[unsafe(super(MPMusicPlayerControllerQueue, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPMusicPlayerControllerMutableQueue;
);

unsafe impl NSObjectProtocol for MPMusicPlayerControllerMutableQueue {}

extern_methods!(
    unsafe impl MPMusicPlayerControllerMutableQueue {
        #[cfg(all(
            feature = "MPMediaEntity",
            feature = "MPMediaItem",
            feature = "MPMusicPlayerQueueDescriptor"
        ))]
        #[method(insertQueueDescriptor:afterItem:)]
        pub unsafe fn insertQueueDescriptor_afterItem(
            &self,
            queue_descriptor: &MPMusicPlayerQueueDescriptor,
            after_item: Option<&MPMediaItem>,
        );

        #[cfg(all(feature = "MPMediaEntity", feature = "MPMediaItem"))]
        #[method(removeItem:)]
        pub unsafe fn removeItem(&self, item: &MPMediaItem);
    }
);

extern_methods!(
    /// Methods declared on superclass `MPMusicPlayerControllerQueue`
    unsafe impl MPMusicPlayerControllerMutableQueue {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mediaplayer/mpmusicplayerapplicationcontroller?language=objc)
    #[unsafe(super(MPMusicPlayerController, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPMusicPlayerController")]
    pub struct MPMusicPlayerApplicationController;
);

#[cfg(all(feature = "MPMediaPlayback", feature = "MPMusicPlayerController"))]
unsafe impl MPMediaPlayback for MPMusicPlayerApplicationController {}

#[cfg(feature = "MPMusicPlayerController")]
unsafe impl NSObjectProtocol for MPMusicPlayerApplicationController {}

extern_methods!(
    #[cfg(feature = "MPMusicPlayerController")]
    unsafe impl MPMusicPlayerApplicationController {
        #[cfg(feature = "block2")]
        #[method(performQueueTransaction:completionHandler:)]
        pub unsafe fn performQueueTransaction_completionHandler(
            &self,
            queue_transaction: &block2::Block<dyn Fn(NonNull<MPMusicPlayerControllerMutableQueue>)>,
            completion_handler: &block2::Block<
                dyn Fn(NonNull<MPMusicPlayerControllerQueue>, *mut NSError),
            >,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `MPMusicPlayerController`
    #[cfg(feature = "MPMusicPlayerController")]
    unsafe impl MPMusicPlayerApplicationController {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/mediaplayer/mpmusicplayercontrollerqueuedidchangenotification?language=objc)
    pub static MPMusicPlayerControllerQueueDidChangeNotification: &'static NSString;
}
