//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/insearchcallhistoryintent?language=objc)
    #[unsafe(super(INIntent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "INIntent")]
    #[deprecated = "INSearchCallHistoryIntent is deprecated. There is no replacement."]
    pub struct INSearchCallHistoryIntent;
);

#[cfg(feature = "INIntent")]
unsafe impl NSCoding for INSearchCallHistoryIntent {}

#[cfg(feature = "INIntent")]
unsafe impl NSCopying for INSearchCallHistoryIntent {}

#[cfg(feature = "INIntent")]
unsafe impl CopyingHelper for INSearchCallHistoryIntent {
    type Result = Self;
}

#[cfg(feature = "INIntent")]
unsafe impl NSObjectProtocol for INSearchCallHistoryIntent {}

#[cfg(feature = "INIntent")]
unsafe impl NSSecureCoding for INSearchCallHistoryIntent {}

#[cfg(feature = "INIntent")]
impl INSearchCallHistoryIntent {
    extern_methods!(
        #[cfg(all(
            feature = "INCallCapabilityOptions",
            feature = "INCallRecordTypeOptions",
            feature = "INDateComponentsRange",
            feature = "INPerson"
        ))]
        #[unsafe(method(initWithDateCreated:recipient:callCapabilities:callTypes:unseen:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithDateCreated_recipient_callCapabilities_callTypes_unseen(
            this: Allocated<Self>,
            date_created: Option<&INDateComponentsRange>,
            recipient: Option<&INPerson>,
            call_capabilities: INCallCapabilityOptions,
            call_types: INCallRecordTypeOptions,
            unseen: Option<&NSNumber>,
        ) -> Retained<Self>;

        #[cfg(feature = "INDateComponentsRange")]
        #[deprecated = "INSearchCallHistoryIntent is deprecated. There is no replacement."]
        #[unsafe(method(dateCreated))]
        #[unsafe(method_family = none)]
        pub unsafe fn dateCreated(&self) -> Option<Retained<INDateComponentsRange>>;

        #[cfg(feature = "INPerson")]
        #[deprecated = "INSearchCallHistoryIntent is deprecated. There is no replacement."]
        #[unsafe(method(recipient))]
        #[unsafe(method_family = none)]
        pub unsafe fn recipient(&self) -> Option<Retained<INPerson>>;

        #[cfg(feature = "INCallCapabilityOptions")]
        #[deprecated = "INSearchCallHistoryIntent is deprecated. There is no replacement."]
        #[unsafe(method(callCapabilities))]
        #[unsafe(method_family = none)]
        pub unsafe fn callCapabilities(&self) -> INCallCapabilityOptions;

        #[cfg(feature = "INCallRecordTypeOptions")]
        #[unsafe(method(callTypes))]
        #[unsafe(method_family = none)]
        pub unsafe fn callTypes(&self) -> INCallRecordTypeOptions;

        #[unsafe(method(unseen))]
        #[unsafe(method_family = none)]
        pub unsafe fn unseen(&self) -> Option<Retained<NSNumber>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "INIntent")]
impl INSearchCallHistoryIntent {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_protocol!(
    /// Protocol to declare support for handling an INSearchCallHistoryIntent. By implementing this protocol, a class can provide logic for resolving, confirming and handling the intent.
    ///
    /// The minimum requirement for an implementing class is that it should be able to handle the intent. The resolution and confirmation methods are optional. The handling method is always called last, after resolving and confirming the intent.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/intents/insearchcallhistoryintenthandling?language=objc)
    #[deprecated = "INSearchCallHistoryIntentHandling is deprecated. There is no replacement."]
    pub unsafe trait INSearchCallHistoryIntentHandling: NSObjectProtocol {
        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INSearchCallHistoryIntentResponse",
            feature = "block2"
        ))]
        /// Handling method - Execute the task represented by the INSearchCallHistoryIntent that's passed in
        ///
        /// Called to actually execute the intent. The app must return a response for this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response handling block takes a INSearchCallHistoryIntentResponse containing the details of the result of having executed the intent
        ///
        ///
        /// See: INSearchCallHistoryIntentResponse
        #[deprecated = "INSearchCallHistoryIntentHandling is deprecated. There is no replacement."]
        #[unsafe(method(handleSearchCallHistory:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn handleSearchCallHistory_completion(
            &self,
            intent: &INSearchCallHistoryIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INSearchCallHistoryIntentResponse>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INSearchCallHistoryIntentResponse",
            feature = "block2"
        ))]
        /// Confirmation method - Validate that this intent is ready for the next step (i.e. handling)
        ///
        /// Called prior to asking the app to handle the intent. The app should return a response object that contains additional information about the intent, which may be relevant for the system to show the user prior to handling. If unimplemented, the system will assume the intent is valid following resolution, and will assume there is no additional information relevant to this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INSearchCallHistoryIntentResponse containing additional details about the intent that may be relevant for the system to show the user prior to handling.
        ///
        ///
        /// See: INSearchCallHistoryIntentResponse
        #[deprecated = "INSearchCallHistoryIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(confirmSearchCallHistory:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn confirmSearchCallHistory_completion(
            &self,
            intent: &INSearchCallHistoryIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INSearchCallHistoryIntentResponse>)>,
        );

        #[cfg(all(
            feature = "INCallRecordTypeResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        /// Resolution methods - Determine if this intent is ready for the next step (confirmation)
        ///
        /// Called to make sure the app extension is capable of handling this intent in its current form. This method is for validating if the intent needs any further fleshing out.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INIntentResolutionResult for the parameter being resolved
        ///
        ///
        /// See: INIntentResolutionResult
        #[deprecated = "INSearchCallHistoryIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveCallTypeForSearchCallHistory:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveCallTypeForSearchCallHistory_withCompletion(
            &self,
            intent: &INSearchCallHistoryIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INCallRecordTypeResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INDateComponentsRangeResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "INSearchCallHistoryIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveDateCreatedForSearchCallHistory:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveDateCreatedForSearchCallHistory_withCompletion(
            &self,
            intent: &INSearchCallHistoryIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INDateComponentsRangeResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INPersonResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "INSearchCallHistoryIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveRecipientForSearchCallHistory:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveRecipientForSearchCallHistory_withCompletion(
            &self,
            intent: &INSearchCallHistoryIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INPersonResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INCallRecordTypeOptionsResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        #[optional]
        #[unsafe(method(resolveCallTypesForSearchCallHistory:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveCallTypesForSearchCallHistory_withCompletion(
            &self,
            intent: &INSearchCallHistoryIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INCallRecordTypeOptionsResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INBooleanResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        #[optional]
        #[unsafe(method(resolveUnseenForSearchCallHistory:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveUnseenForSearchCallHistory_withCompletion(
            &self,
            intent: &INSearchCallHistoryIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INBooleanResolutionResult>)>,
        );
    }
);
