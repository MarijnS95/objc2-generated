//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A shortcut that has been added to Siri
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/intents/invoiceshortcut?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct INVoiceShortcut;
);

unsafe impl NSCoding for INVoiceShortcut {}

unsafe impl NSCopying for INVoiceShortcut {}

unsafe impl CopyingHelper for INVoiceShortcut {
    type Result = Self;
}

unsafe impl NSObjectProtocol for INVoiceShortcut {}

unsafe impl NSSecureCoding for INVoiceShortcut {}

impl INVoiceShortcut {
    extern_methods!(
        /// The unique identifier for this voice shortcut
        #[unsafe(method(identifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn identifier(&self) -> Retained<NSUUID>;

        /// The phrase the user speaks to invoke this shortcut; set by the user when they add it to Siri.
        #[unsafe(method(invocationPhrase))]
        #[unsafe(method_family = none)]
        pub unsafe fn invocationPhrase(&self) -> Retained<NSString>;

        #[cfg(feature = "INShortcut")]
        /// The shortcut that will be performed when this voice shortcut is invoked via Siri.
        #[unsafe(method(shortcut))]
        #[unsafe(method_family = none)]
        pub unsafe fn shortcut(&self) -> Retained<INShortcut>;

        /// An
        /// `INVoiceShortcut`cannot be created directly. Instead, create an
        /// `INShortcut,`and add it using
        /// `INUIAddVoiceShortcutViewController.`
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// An
        /// `INVoiceShortcut`cannot be created directly. Instead, create an
        /// `INShortcut,`and add it using
        /// `INUIAddVoiceShortcutViewController.`
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
