//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/inintenterrordomain?language=objc)
    pub static INIntentErrorDomain: Option<&'static NSString>;
}

/// [Apple's documentation](https://developer.apple.com/documentation/intents/inintenterrorcode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct INIntentErrorCode(pub NSInteger);
impl INIntentErrorCode {
    #[doc(alias = "INIntentErrorInteractionOperationNotSupported")]
    pub const InteractionOperationNotSupported: Self = Self(1900);
    #[doc(alias = "INIntentErrorDonatingInteraction")]
    pub const DonatingInteraction: Self = Self(1901);
    #[doc(alias = "INIntentErrorDeletingAllInteractions")]
    pub const DeletingAllInteractions: Self = Self(1902);
    #[doc(alias = "INIntentErrorDeletingInteractionWithIdentifiers")]
    pub const DeletingInteractionWithIdentifiers: Self = Self(1903);
    #[doc(alias = "INIntentErrorDeletingInteractionWithGroupIdentifier")]
    pub const DeletingInteractionWithGroupIdentifier: Self = Self(1904);
    #[doc(alias = "INIntentErrorIntentSupportedByMultipleExtension")]
    pub const IntentSupportedByMultipleExtension: Self = Self(2001);
    #[doc(alias = "INIntentErrorRestrictedIntentsNotSupportedByExtension")]
    pub const RestrictedIntentsNotSupportedByExtension: Self = Self(2002);
    #[doc(alias = "INIntentErrorNoHandlerProvidedForIntent")]
    pub const NoHandlerProvidedForIntent: Self = Self(2003);
    #[doc(alias = "INIntentErrorInvalidIntentName")]
    pub const InvalidIntentName: Self = Self(2004);
    #[doc(alias = "INIntentErrorNoAppAvailable")]
    pub const NoAppAvailable: Self = Self(2005);
    #[doc(alias = "INIntentErrorRequestTimedOut")]
    pub const RequestTimedOut: Self = Self(3001);
    #[doc(alias = "INIntentErrorMissingInformation")]
    pub const MissingInformation: Self = Self(3002);
    #[doc(alias = "INIntentErrorInvalidUserVocabularyFileLocation")]
    pub const InvalidUserVocabularyFileLocation: Self = Self(4000);
    #[doc(alias = "INIntentErrorExtensionLaunchingTimeout")]
    pub const ExtensionLaunchingTimeout: Self = Self(5000);
    #[doc(alias = "INIntentErrorExtensionBringUpFailed")]
    pub const ExtensionBringUpFailed: Self = Self(5001);
    #[doc(alias = "INIntentErrorImageGeneric")]
    pub const ImageGeneric: Self = Self(6000);
    #[doc(alias = "INIntentErrorImageNoServiceAvailable")]
    pub const ImageNoServiceAvailable: Self = Self(6001);
    #[doc(alias = "INIntentErrorImageStorageFailed")]
    pub const ImageStorageFailed: Self = Self(6002);
    #[doc(alias = "INIntentErrorImageLoadingFailed")]
    pub const ImageLoadingFailed: Self = Self(6003);
    #[doc(alias = "INIntentErrorImageRetrievalFailed")]
    pub const ImageRetrievalFailed: Self = Self(6004);
    #[doc(alias = "INIntentErrorImageProxyLoop")]
    pub const ImageProxyLoop: Self = Self(6005);
    #[doc(alias = "INIntentErrorImageProxyInvalid")]
    pub const ImageProxyInvalid: Self = Self(6006);
    #[doc(alias = "INIntentErrorImageProxyTimeout")]
    pub const ImageProxyTimeout: Self = Self(6007);
    #[doc(alias = "INIntentErrorImageServiceFailure")]
    pub const ImageServiceFailure: Self = Self(6008);
    #[doc(alias = "INIntentErrorImageScalingFailed")]
    pub const ImageScalingFailed: Self = Self(6009);
    #[doc(alias = "INIntentErrorPermissionDenied")]
    pub const PermissionDenied: Self = Self(6010);
    #[doc(alias = "INIntentErrorVoiceShortcutCreationFailed")]
    pub const VoiceShortcutCreationFailed: Self = Self(7000);
    #[doc(alias = "INIntentErrorVoiceShortcutGetFailed")]
    pub const VoiceShortcutGetFailed: Self = Self(7001);
    #[doc(alias = "INIntentErrorVoiceShortcutDeleteFailed")]
    pub const VoiceShortcutDeleteFailed: Self = Self(7002);
    #[doc(alias = "INIntentErrorEncodingGeneric")]
    pub const EncodingGeneric: Self = Self(8000);
    #[doc(alias = "INIntentErrorEncodingFailed")]
    pub const EncodingFailed: Self = Self(8001);
    #[doc(alias = "INIntentErrorDecodingGeneric")]
    pub const DecodingGeneric: Self = Self(9000);
    #[doc(alias = "INIntentErrorUnableToCreateAppIntentRepresentation")]
    pub const UnableToCreateAppIntentRepresentation: Self = Self(10000);
    #[doc(alias = "INIntentErrorNoAppIntent")]
    pub const NoAppIntent: Self = Self(10001);
}

unsafe impl Encode for INIntentErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for INIntentErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
