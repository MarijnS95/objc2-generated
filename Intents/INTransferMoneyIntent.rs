//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/intransfermoneyintent?language=objc)
    #[unsafe(super(INIntent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "INIntent")]
    #[deprecated = "INTransferMoneyIntent is deprecated. There is no replacement."]
    pub struct INTransferMoneyIntent;
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSCoding for INTransferMoneyIntent {}
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSCopying for INTransferMoneyIntent {}
);

#[cfg(feature = "INIntent")]
unsafe impl CopyingHelper for INTransferMoneyIntent {
    type Result = Self;
}

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSObjectProtocol for INTransferMoneyIntent {}
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSSecureCoding for INTransferMoneyIntent {}
);

#[cfg(feature = "INIntent")]
impl INTransferMoneyIntent {
    extern_methods!(
        #[cfg(all(
            feature = "INDateComponentsRange",
            feature = "INPaymentAccount",
            feature = "INPaymentAmount"
        ))]
        #[deprecated = "INTransferMoneyIntent is deprecated. There is no replacement."]
        #[unsafe(method(initWithFromAccount:toAccount:transactionAmount:transactionScheduledDate:transactionNote:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFromAccount_toAccount_transactionAmount_transactionScheduledDate_transactionNote(
            this: Allocated<Self>,
            from_account: Option<&INPaymentAccount>,
            to_account: Option<&INPaymentAccount>,
            transaction_amount: Option<&INPaymentAmount>,
            transaction_scheduled_date: Option<&INDateComponentsRange>,
            transaction_note: Option<&NSString>,
        ) -> Retained<Self>;

        #[cfg(feature = "INPaymentAccount")]
        #[deprecated = "INTransferMoneyIntent is deprecated. There is no replacement."]
        #[unsafe(method(fromAccount))]
        #[unsafe(method_family = none)]
        pub unsafe fn fromAccount(&self) -> Option<Retained<INPaymentAccount>>;

        #[cfg(feature = "INPaymentAccount")]
        #[deprecated = "INTransferMoneyIntent is deprecated. There is no replacement."]
        #[unsafe(method(toAccount))]
        #[unsafe(method_family = none)]
        pub unsafe fn toAccount(&self) -> Option<Retained<INPaymentAccount>>;

        #[cfg(feature = "INPaymentAmount")]
        #[deprecated = "INTransferMoneyIntent is deprecated. There is no replacement."]
        #[unsafe(method(transactionAmount))]
        #[unsafe(method_family = none)]
        pub unsafe fn transactionAmount(&self) -> Option<Retained<INPaymentAmount>>;

        #[cfg(feature = "INDateComponentsRange")]
        #[deprecated = "INTransferMoneyIntent is deprecated. There is no replacement."]
        #[unsafe(method(transactionScheduledDate))]
        #[unsafe(method_family = none)]
        pub unsafe fn transactionScheduledDate(&self) -> Option<Retained<INDateComponentsRange>>;

        #[deprecated = "INTransferMoneyIntent is deprecated. There is no replacement."]
        #[unsafe(method(transactionNote))]
        #[unsafe(method_family = none)]
        pub unsafe fn transactionNote(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "INIntent")]
impl INTransferMoneyIntent {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_protocol!(
    /// Protocol to declare support for handling an INTransferMoneyIntent. By implementing this protocol, a class can provide logic for resolving, confirming and handling the intent.
    ///
    /// The minimum requirement for an implementing class is that it should be able to handle the intent. The resolution and confirmation methods are optional. The handling method is always called last, after resolving and confirming the intent.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/intents/intransfermoneyintenthandling?language=objc)
    #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
    pub unsafe trait INTransferMoneyIntentHandling: NSObjectProtocol {
        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INTransferMoneyIntentResponse",
            feature = "block2"
        ))]
        /// Handling method - Execute the task represented by the INTransferMoneyIntent that's passed in
        ///
        /// Called to actually execute the intent. The app must return a response for this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response handling block takes a INTransferMoneyIntentResponse containing the details of the result of having executed the intent
        ///
        ///
        /// See: INTransferMoneyIntentResponse
        #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
        #[unsafe(method(handleTransferMoney:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn handleTransferMoney_completion(
            &self,
            intent: &INTransferMoneyIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INTransferMoneyIntentResponse>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INTransferMoneyIntentResponse",
            feature = "block2"
        ))]
        /// Confirmation method - Validate that this intent is ready for the next step (i.e. handling)
        ///
        /// Called prior to asking the app to handle the intent. The app should return a response object that contains additional information about the intent, which may be relevant for the system to show the user prior to handling. If unimplemented, the system will assume the intent is valid following resolution, and will assume there is no additional information relevant to this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INTransferMoneyIntentResponse containing additional details about the intent that may be relevant for the system to show the user prior to handling.
        ///
        ///
        /// See: INTransferMoneyIntentResponse
        #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(confirmTransferMoney:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn confirmTransferMoney_completion(
            &self,
            intent: &INTransferMoneyIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INTransferMoneyIntentResponse>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INPaymentAccountResolutionResult",
            feature = "block2"
        ))]
        /// Resolution methods - Determine if this intent is ready for the next step (confirmation)
        ///
        /// Called to make sure the app extension is capable of handling this intent in its current form. This method is for validating if the intent needs any further fleshing out.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INIntentResolutionResult for the parameter being resolved
        ///
        ///
        /// See: INIntentResolutionResult
        #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveFromAccountForTransferMoney:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveFromAccountForTransferMoney_withCompletion(
            &self,
            intent: &INTransferMoneyIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INPaymentAccountResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INPaymentAccountResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveToAccountForTransferMoney:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveToAccountForTransferMoney_withCompletion(
            &self,
            intent: &INTransferMoneyIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INPaymentAccountResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INPaymentAmountResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveTransactionAmountForTransferMoney:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveTransactionAmountForTransferMoney_withCompletion(
            &self,
            intent: &INTransferMoneyIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INPaymentAmountResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INDateComponentsRangeResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveTransactionScheduledDateForTransferMoney:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveTransactionScheduledDateForTransferMoney_withCompletion(
            &self,
            intent: &INTransferMoneyIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INDateComponentsRangeResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INStringResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "INTransferMoneyIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveTransactionNoteForTransferMoney:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveTransactionNoteForTransferMoney_withCompletion(
            &self,
            intent: &INTransferMoneyIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INStringResolutionResult>)>,
        );
    }
);
