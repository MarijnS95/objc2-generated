//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/inrequestpaymentintent?language=objc)
    #[unsafe(super(INIntent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "INIntent")]
    pub struct INRequestPaymentIntent;
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSCoding for INRequestPaymentIntent {}
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSCopying for INRequestPaymentIntent {}
);

#[cfg(feature = "INIntent")]
unsafe impl CopyingHelper for INRequestPaymentIntent {
    type Result = Self;
}

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSObjectProtocol for INRequestPaymentIntent {}
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSSecureCoding for INRequestPaymentIntent {}
);

#[cfg(feature = "INIntent")]
impl INRequestPaymentIntent {
    extern_methods!(
        #[cfg(all(feature = "INCurrencyAmount", feature = "INPerson"))]
        #[unsafe(method(initWithPayer:currencyAmount:note:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithPayer_currencyAmount_note(
            this: Allocated<Self>,
            payer: Option<&INPerson>,
            currency_amount: Option<&INCurrencyAmount>,
            note: Option<&NSString>,
        ) -> Retained<Self>;

        #[cfg(feature = "INPerson")]
        #[unsafe(method(payer))]
        #[unsafe(method_family = none)]
        pub unsafe fn payer(&self) -> Option<Retained<INPerson>>;

        #[cfg(feature = "INCurrencyAmount")]
        #[unsafe(method(currencyAmount))]
        #[unsafe(method_family = none)]
        pub unsafe fn currencyAmount(&self) -> Option<Retained<INCurrencyAmount>>;

        #[unsafe(method(note))]
        #[unsafe(method_family = none)]
        pub unsafe fn note(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "INIntent")]
impl INRequestPaymentIntent {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_protocol!(
    /// Protocol to declare support for handling an INRequestPaymentIntent. By implementing this protocol, a class can provide logic for resolving, confirming and handling the intent.
    ///
    /// The minimum requirement for an implementing class is that it should be able to handle the intent. The resolution and confirmation methods are optional. The handling method is always called last, after resolving and confirming the intent.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/intents/inrequestpaymentintenthandling?language=objc)
    pub unsafe trait INRequestPaymentIntentHandling: NSObjectProtocol {
        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INRequestPaymentIntentResponse",
            feature = "block2"
        ))]
        /// Handling method - Execute the task represented by the INRequestPaymentIntent that's passed in
        ///
        /// Called to actually execute the intent. The app must return a response for this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response handling block takes a INRequestPaymentIntentResponse containing the details of the result of having executed the intent
        ///
        ///
        /// See: INRequestPaymentIntentResponse
        #[unsafe(method(handleRequestPayment:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn handleRequestPayment_completion(
            &self,
            intent: &INRequestPaymentIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INRequestPaymentIntentResponse>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INRequestPaymentIntentResponse",
            feature = "block2"
        ))]
        /// Confirmation method - Validate that this intent is ready for the next step (i.e. handling)
        ///
        /// Called prior to asking the app to handle the intent. The app should return a response object that contains additional information about the intent, which may be relevant for the system to show the user prior to handling. If unimplemented, the system will assume the intent is valid following resolution, and will assume there is no additional information relevant to this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INRequestPaymentIntentResponse containing additional details about the intent that may be relevant for the system to show the user prior to handling.
        ///
        ///
        /// See: INRequestPaymentIntentResponse
        #[optional]
        #[unsafe(method(confirmRequestPayment:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn confirmRequestPayment_completion(
            &self,
            intent: &INRequestPaymentIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INRequestPaymentIntentResponse>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INPersonResolutionResult",
            feature = "block2"
        ))]
        /// Resolution methods - Determine if this intent is ready for the next step (confirmation)
        ///
        /// Called to make sure the app extension is capable of handling this intent in its current form. This method is for validating if the intent needs any further fleshing out.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INIntentResolutionResult for the parameter being resolved
        ///
        ///
        /// See: INIntentResolutionResult
        #[deprecated = "resolvePayerForRequestPayment:withCompletion: is deprecated. Use resolvePayerForRequestPayment:completion: instead"]
        #[optional]
        #[unsafe(method(resolvePayerForRequestPayment:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolvePayerForRequestPayment_withCompletion(
            &self,
            intent: &INRequestPaymentIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INPersonResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INPersonResolutionResult",
            feature = "INRequestPaymentPayerResolutionResult",
            feature = "block2"
        ))]
        #[optional]
        #[unsafe(method(resolvePayerForRequestPayment:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolvePayerForRequestPayment_completion(
            &self,
            intent: &INRequestPaymentIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INRequestPaymentPayerResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INCurrencyAmountResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "resolveCurrencyAmountForRequestPayment:withCompletion: is deprecated. Use resolveCurrencyAmountForRequestPayment:completion: instead"]
        #[optional]
        #[unsafe(method(resolveCurrencyAmountForRequestPayment:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveCurrencyAmountForRequestPayment_withCompletion(
            &self,
            intent: &INRequestPaymentIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INCurrencyAmountResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INCurrencyAmountResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INRequestPaymentCurrencyAmountResolutionResult",
            feature = "block2"
        ))]
        #[optional]
        #[unsafe(method(resolveCurrencyAmountForRequestPayment:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveCurrencyAmountForRequestPayment_completion(
            &self,
            intent: &INRequestPaymentIntent,
            completion: &block2::DynBlock<
                dyn Fn(NonNull<INRequestPaymentCurrencyAmountResolutionResult>),
            >,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INStringResolutionResult",
            feature = "block2"
        ))]
        #[optional]
        #[unsafe(method(resolveNoteForRequestPayment:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveNoteForRequestPayment_withCompletion(
            &self,
            intent: &INRequestPaymentIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INStringResolutionResult>)>,
        );
    }
);
