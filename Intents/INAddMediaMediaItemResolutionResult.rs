//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/intents/inaddmediamediaitemunsupportedreason?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct INAddMediaMediaItemUnsupportedReason(pub NSInteger);
impl INAddMediaMediaItemUnsupportedReason {
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonLoginRequired")]
    pub const LoginRequired: Self = Self(1);
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonSubscriptionRequired")]
    pub const SubscriptionRequired: Self = Self(2);
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonUnsupportedMediaType")]
    pub const UnsupportedMediaType: Self = Self(3);
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonExplicitContentSettings")]
    pub const ExplicitContentSettings: Self = Self(4);
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonCellularDataSettings")]
    pub const CellularDataSettings: Self = Self(5);
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonRestrictedContent")]
    pub const RestrictedContent: Self = Self(6);
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonServiceUnavailable")]
    pub const ServiceUnavailable: Self = Self(7);
    #[doc(alias = "INAddMediaMediaItemUnsupportedReasonRegionRestriction")]
    pub const RegionRestriction: Self = Self(8);
}

unsafe impl Encode for INAddMediaMediaItemUnsupportedReason {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for INAddMediaMediaItemUnsupportedReason {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/inaddmediamediaitemresolutionresult?language=objc)
    #[unsafe(super(INMediaItemResolutionResult, INIntentResolutionResult, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "INIntentResolutionResult",
        feature = "INMediaItemResolutionResult"
    ))]
    pub struct INAddMediaMediaItemResolutionResult;
);

#[cfg(all(
    feature = "INIntentResolutionResult",
    feature = "INMediaItemResolutionResult"
))]
extern_conformance!(
    unsafe impl NSObjectProtocol for INAddMediaMediaItemResolutionResult {}
);

#[cfg(all(
    feature = "INIntentResolutionResult",
    feature = "INMediaItemResolutionResult"
))]
impl INAddMediaMediaItemResolutionResult {
    extern_methods!(
        #[cfg(feature = "INMediaItem")]
        #[unsafe(method(successesWithResolvedMediaItems:))]
        #[unsafe(method_family = none)]
        pub unsafe fn successesWithResolvedMediaItems(
            resolved_media_items: &NSArray<INMediaItem>,
        ) -> Retained<NSArray<INAddMediaMediaItemResolutionResult>>;

        #[unsafe(method(unsupportedForReason:))]
        #[unsafe(method_family = none)]
        pub unsafe fn unsupportedForReason(
            reason: INAddMediaMediaItemUnsupportedReason,
        ) -> Retained<Self>;

        #[unsafe(method(initWithMediaItemResolutionResult:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithMediaItemResolutionResult(
            this: Allocated<Self>,
            media_item_resolution_result: &INMediaItemResolutionResult,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `INMediaItemResolutionResult`.
#[cfg(all(
    feature = "INIntentResolutionResult",
    feature = "INMediaItemResolutionResult"
))]
impl INAddMediaMediaItemResolutionResult {
    extern_methods!(
        #[cfg(feature = "INMediaItem")]
        #[unsafe(method(successWithResolvedMediaItem:))]
        #[unsafe(method_family = none)]
        pub unsafe fn successWithResolvedMediaItem(
            resolved_media_item: &INMediaItem,
        ) -> Retained<Self>;

        #[cfg(feature = "INMediaItem")]
        #[unsafe(method(disambiguationWithMediaItemsToDisambiguate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn disambiguationWithMediaItemsToDisambiguate(
            media_items_to_disambiguate: &NSArray<INMediaItem>,
        ) -> Retained<Self>;

        #[cfg(feature = "INMediaItem")]
        #[unsafe(method(confirmationRequiredWithMediaItemToConfirm:))]
        #[unsafe(method_family = none)]
        pub unsafe fn confirmationRequiredWithMediaItemToConfirm(
            media_item_to_confirm: Option<&INMediaItem>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `INIntentResolutionResult`.
#[cfg(all(
    feature = "INIntentResolutionResult",
    feature = "INMediaItemResolutionResult"
))]
impl INAddMediaMediaItemResolutionResult {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(needsValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn needsValue() -> Retained<Self>;

        #[unsafe(method(notRequired))]
        #[unsafe(method_family = none)]
        pub unsafe fn notRequired() -> Retained<Self>;

        #[unsafe(method(unsupported))]
        #[unsafe(method_family = none)]
        pub unsafe fn unsupported() -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(
    feature = "INIntentResolutionResult",
    feature = "INMediaItemResolutionResult"
))]
impl INAddMediaMediaItemResolutionResult {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
