//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/inticketedeventreservation?language=objc)
    #[unsafe(super(INReservation, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "INReservation")]
    pub struct INTicketedEventReservation;
);

#[cfg(feature = "INReservation")]
extern_conformance!(
    unsafe impl NSCoding for INTicketedEventReservation {}
);

#[cfg(feature = "INReservation")]
extern_conformance!(
    unsafe impl NSCopying for INTicketedEventReservation {}
);

#[cfg(feature = "INReservation")]
unsafe impl CopyingHelper for INTicketedEventReservation {
    type Result = Self;
}

#[cfg(feature = "INReservation")]
extern_conformance!(
    unsafe impl NSObjectProtocol for INTicketedEventReservation {}
);

#[cfg(feature = "INReservation")]
extern_conformance!(
    unsafe impl NSSecureCoding for INTicketedEventReservation {}
);

#[cfg(feature = "INReservation")]
impl INTicketedEventReservation {
    extern_methods!(
        #[cfg(all(
            feature = "INReservationAction",
            feature = "INReservationStatus",
            feature = "INSeat",
            feature = "INSpeakableString",
            feature = "INTicketedEvent"
        ))]
        #[unsafe(method(initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:event:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithItemReference_reservationNumber_bookingTime_reservationStatus_reservationHolderName_actions_URL_reservedSeat_event(
            this: Allocated<Self>,
            item_reference: &INSpeakableString,
            reservation_number: Option<&NSString>,
            booking_time: Option<&NSDate>,
            reservation_status: INReservationStatus,
            reservation_holder_name: Option<&NSString>,
            actions: Option<&NSArray<INReservationAction>>,
            url: Option<&NSURL>,
            reserved_seat: Option<&INSeat>,
            event: &INTicketedEvent,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "INReservationAction",
            feature = "INReservationStatus",
            feature = "INSeat",
            feature = "INSpeakableString",
            feature = "INTicketedEvent"
        ))]
        #[unsafe(method(initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:reservedSeat:event:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithItemReference_reservationNumber_bookingTime_reservationStatus_reservationHolderName_actions_reservedSeat_event(
            this: Allocated<Self>,
            item_reference: &INSpeakableString,
            reservation_number: Option<&NSString>,
            booking_time: Option<&NSDate>,
            reservation_status: INReservationStatus,
            reservation_holder_name: Option<&NSString>,
            actions: Option<&NSArray<INReservationAction>>,
            reserved_seat: Option<&INSeat>,
            event: &INTicketedEvent,
        ) -> Retained<Self>;

        #[cfg(feature = "INTicketedEvent")]
        #[unsafe(method(event))]
        #[unsafe(method_family = none)]
        pub unsafe fn event(&self) -> Retained<INTicketedEvent>;

        #[cfg(feature = "INSeat")]
        #[unsafe(method(reservedSeat))]
        #[unsafe(method_family = none)]
        pub unsafe fn reservedSeat(&self) -> Option<Retained<INSeat>>;
    );
}

/// Methods declared on superclass `INReservation`.
#[cfg(feature = "INReservation")]
impl INTicketedEventReservation {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "INReservation")]
impl INTicketedEventReservation {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
