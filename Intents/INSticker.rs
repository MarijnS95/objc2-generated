//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An object that describes a sticker someone sends in a message.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/intents/insticker?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct INSticker;
);

extern_conformance!(
    unsafe impl NSCoding for INSticker {}
);

extern_conformance!(
    unsafe impl NSCopying for INSticker {}
);

unsafe impl CopyingHelper for INSticker {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for INSticker {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for INSticker {}
);

impl INSticker {
    extern_methods!(
        #[cfg(feature = "INStickerType")]
        /// Creates an object that represents a sticker a person sends in a message.
        ///
        /// - Parameters:
        /// - type: The type of the sticker.
        /// - emoji: The single emoji character that the sticker represents.
        #[unsafe(method(initWithType:emoji:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithType_emoji(
            this: Allocated<Self>,
            r#type: INStickerType,
            emoji: Option<&NSString>,
        ) -> Retained<Self>;

        #[cfg(feature = "INStickerType")]
        #[unsafe(method(type))]
        #[unsafe(method_family = none)]
        pub unsafe fn r#type(&self) -> INStickerType;

        #[unsafe(method(emoji))]
        #[unsafe(method_family = none)]
        pub unsafe fn emoji(&self) -> Option<Retained<NSString>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl INSticker {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
