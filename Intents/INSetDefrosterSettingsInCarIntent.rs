//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/insetdefrostersettingsincarintent?language=objc)
    #[unsafe(super(INIntent, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "INIntent")]
    #[deprecated = "INSetDefrosterSettingsInCarIntent is deprecated. There is no replacement."]
    pub struct INSetDefrosterSettingsInCarIntent;
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSCoding for INSetDefrosterSettingsInCarIntent {}
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSCopying for INSetDefrosterSettingsInCarIntent {}
);

#[cfg(feature = "INIntent")]
unsafe impl CopyingHelper for INSetDefrosterSettingsInCarIntent {
    type Result = Self;
}

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSObjectProtocol for INSetDefrosterSettingsInCarIntent {}
);

#[cfg(feature = "INIntent")]
extern_conformance!(
    unsafe impl NSSecureCoding for INSetDefrosterSettingsInCarIntent {}
);

#[cfg(feature = "INIntent")]
impl INSetDefrosterSettingsInCarIntent {
    extern_methods!(
        #[cfg(all(feature = "INCarDefroster", feature = "INSpeakableString"))]
        #[unsafe(method(initWithEnable:defroster:carName:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithEnable_defroster_carName(
            this: Allocated<Self>,
            enable: Option<&NSNumber>,
            defroster: INCarDefroster,
            car_name: Option<&INSpeakableString>,
        ) -> Retained<Self>;

        #[deprecated = "INSetDefrosterSettingsInCarIntent is deprecated. There is no replacement."]
        #[unsafe(method(enable))]
        #[unsafe(method_family = none)]
        pub unsafe fn enable(&self) -> Option<Retained<NSNumber>>;

        #[cfg(feature = "INCarDefroster")]
        #[deprecated = "INSetDefrosterSettingsInCarIntent is deprecated. There is no replacement."]
        #[unsafe(method(defroster))]
        #[unsafe(method_family = none)]
        pub unsafe fn defroster(&self) -> INCarDefroster;

        #[cfg(feature = "INSpeakableString")]
        #[unsafe(method(carName))]
        #[unsafe(method_family = none)]
        pub unsafe fn carName(&self) -> Option<Retained<INSpeakableString>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "INIntent")]
impl INSetDefrosterSettingsInCarIntent {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_protocol!(
    /// Protocol to declare support for handling an INSetDefrosterSettingsInCarIntent. By implementing this protocol, a class can provide logic for resolving, confirming and handling the intent.
    ///
    /// The minimum requirement for an implementing class is that it should be able to handle the intent. The resolution and confirmation methods are optional. The handling method is always called last, after resolving and confirming the intent.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/intents/insetdefrostersettingsincarintenthandling?language=objc)
    #[deprecated = "INSetDefrosterSettingsInCarIntentHandling is deprecated. There is no replacement."]
    pub unsafe trait INSetDefrosterSettingsInCarIntentHandling: NSObjectProtocol {
        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INSetDefrosterSettingsInCarIntentResponse",
            feature = "block2"
        ))]
        /// Handling method - Execute the task represented by the INSetDefrosterSettingsInCarIntent that's passed in
        ///
        /// Called to actually execute the intent. The app must return a response for this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response handling block takes a INSetDefrosterSettingsInCarIntentResponse containing the details of the result of having executed the intent
        ///
        ///
        /// See: INSetDefrosterSettingsInCarIntentResponse
        #[deprecated = "INSetDefrosterSettingsInCarIntentHandling is deprecated. There is no replacement."]
        #[unsafe(method(handleSetDefrosterSettingsInCar:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn handleSetDefrosterSettingsInCar_completion(
            &self,
            intent: &INSetDefrosterSettingsInCarIntent,
            completion: &block2::DynBlock<
                dyn Fn(NonNull<INSetDefrosterSettingsInCarIntentResponse>),
            >,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResponse",
            feature = "INSetDefrosterSettingsInCarIntentResponse",
            feature = "block2"
        ))]
        /// Confirmation method - Validate that this intent is ready for the next step (i.e. handling)
        ///
        /// Called prior to asking the app to handle the intent. The app should return a response object that contains additional information about the intent, which may be relevant for the system to show the user prior to handling. If unimplemented, the system will assume the intent is valid following resolution, and will assume there is no additional information relevant to this intent.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INSetDefrosterSettingsInCarIntentResponse containing additional details about the intent that may be relevant for the system to show the user prior to handling.
        ///
        ///
        /// See: INSetDefrosterSettingsInCarIntentResponse
        #[deprecated = "INSetDefrosterSettingsInCarIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(confirmSetDefrosterSettingsInCar:completion:))]
        #[unsafe(method_family = none)]
        unsafe fn confirmSetDefrosterSettingsInCar_completion(
            &self,
            intent: &INSetDefrosterSettingsInCarIntent,
            completion: &block2::DynBlock<
                dyn Fn(NonNull<INSetDefrosterSettingsInCarIntentResponse>),
            >,
        );

        #[cfg(all(
            feature = "INBooleanResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        /// Resolution methods - Determine if this intent is ready for the next step (confirmation)
        ///
        /// Called to make sure the app extension is capable of handling this intent in its current form. This method is for validating if the intent needs any further fleshing out.
        ///
        ///
        /// Parameter `intent`: The input intent
        ///
        /// Parameter `completion`: The response block contains an INIntentResolutionResult for the parameter being resolved
        ///
        ///
        /// See: INIntentResolutionResult
        #[deprecated = "INSetDefrosterSettingsInCarIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveEnableForSetDefrosterSettingsInCar:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveEnableForSetDefrosterSettingsInCar_withCompletion(
            &self,
            intent: &INSetDefrosterSettingsInCarIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INBooleanResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INCarDefrosterResolutionResult",
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "block2"
        ))]
        #[deprecated = "INSetDefrosterSettingsInCarIntentHandling is deprecated. There is no replacement."]
        #[optional]
        #[unsafe(method(resolveDefrosterForSetDefrosterSettingsInCar:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveDefrosterForSetDefrosterSettingsInCar_withCompletion(
            &self,
            intent: &INSetDefrosterSettingsInCarIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INCarDefrosterResolutionResult>)>,
        );

        #[cfg(all(
            feature = "INIntent",
            feature = "INIntentResolutionResult",
            feature = "INSpeakableStringResolutionResult",
            feature = "block2"
        ))]
        #[optional]
        #[unsafe(method(resolveCarNameForSetDefrosterSettingsInCar:withCompletion:))]
        #[unsafe(method_family = none)]
        unsafe fn resolveCarNameForSetDefrosterSettingsInCar_withCompletion(
            &self,
            intent: &INSetDefrosterSettingsInCarIntent,
            completion: &block2::DynBlock<dyn Fn(NonNull<INSpeakableStringResolutionResult>)>,
        );
    }
);
