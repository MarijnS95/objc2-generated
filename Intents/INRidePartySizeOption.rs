//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/inridepartysizeoption?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct INRidePartySizeOption;
);

extern_conformance!(
    unsafe impl NSCoding for INRidePartySizeOption {}
);

extern_conformance!(
    unsafe impl NSCopying for INRidePartySizeOption {}
);

unsafe impl CopyingHelper for INRidePartySizeOption {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for INRidePartySizeOption {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for INRidePartySizeOption {}
);

impl INRidePartySizeOption {
    extern_methods!(
        #[cfg(feature = "INPriceRange")]
        #[unsafe(method(initWithPartySizeRange:sizeDescription:priceRange:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithPartySizeRange_sizeDescription_priceRange(
            this: Allocated<Self>,
            party_size_range: NSRange,
            size_description: &NSString,
            price_range: Option<&INPriceRange>,
        ) -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(partySizeRange))]
        #[unsafe(method_family = none)]
        pub unsafe fn partySizeRange(&self) -> NSRange;

        #[unsafe(method(sizeDescription))]
        #[unsafe(method_family = none)]
        pub unsafe fn sizeDescription(&self) -> Retained<NSString>;

        #[cfg(feature = "INPriceRange")]
        #[unsafe(method(priceRange))]
        #[unsafe(method_family = none)]
        pub unsafe fn priceRange(&self) -> Option<Retained<INPriceRange>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl INRidePartySizeOption {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
