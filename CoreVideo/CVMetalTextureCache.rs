//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-metal")]
#[cfg(not(target_os = "watchos"))]
use objc2_metal::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvmetaltexturecachemaximumtextureagekey?language=objc)
    #[cfg(feature = "objc2-core-foundation")]
    pub static kCVMetalTextureCacheMaximumTextureAgeKey: CFStringRef;
}

/// [Apple's documentation](https://developer.apple.com/documentation/corevideo/cvmetaltexturecacheref?language=objc)
pub type CVMetalTextureCacheRef = *mut c_void;

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn CVMetalTextureCacheGetTypeID() -> CFTypeID;
}

extern "C-unwind" {
    #[cfg(all(
        feature = "CVReturn",
        feature = "objc2-core-foundation",
        feature = "objc2-metal"
    ))]
    #[cfg(not(target_os = "watchos"))]
    pub fn CVMetalTextureCacheCreate(
        allocator: CFAllocatorRef,
        cache_attributes: CFDictionaryRef,
        metal_device: &ProtocolObject<dyn MTLDevice>,
        texture_attributes: CFDictionaryRef,
        cache_out: NonNull<CVMetalTextureCacheRef>,
    ) -> CVReturn;
}

extern "C-unwind" {
    #[cfg(all(
        feature = "CVBuffer",
        feature = "CVImageBuffer",
        feature = "CVMetalTexture",
        feature = "CVReturn",
        feature = "objc2-core-foundation",
        feature = "objc2-metal"
    ))]
    #[cfg(not(target_os = "watchos"))]
    pub fn CVMetalTextureCacheCreateTextureFromImage(
        allocator: CFAllocatorRef,
        texture_cache: CVMetalTextureCacheRef,
        source_image: CVImageBufferRef,
        texture_attributes: CFDictionaryRef,
        pixel_format: MTLPixelFormat,
        width: usize,
        height: usize,
        plane_index: usize,
        texture_out: NonNull<CVMetalTextureRef>,
    ) -> CVReturn;
}

extern "C-unwind" {
    #[cfg(feature = "CVBase")]
    pub fn CVMetalTextureCacheFlush(texture_cache: CVMetalTextureCacheRef, options: CVOptionFlags);
}
