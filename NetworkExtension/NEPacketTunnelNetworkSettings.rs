//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "NETunnelNetworkSettings")]
    pub struct NEPacketTunnelNetworkSettings;

    #[cfg(feature = "NETunnelNetworkSettings")]
    unsafe impl ClassType for NEPacketTunnelNetworkSettings {
        #[inherits(NSObject)]
        type Super = NETunnelNetworkSettings;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "NETunnelNetworkSettings")]
unsafe impl NSCoding for NEPacketTunnelNetworkSettings {}

#[cfg(feature = "NETunnelNetworkSettings")]
unsafe impl NSCopying for NEPacketTunnelNetworkSettings {}

#[cfg(feature = "NETunnelNetworkSettings")]
unsafe impl NSObjectProtocol for NEPacketTunnelNetworkSettings {}

#[cfg(feature = "NETunnelNetworkSettings")]
unsafe impl NSSecureCoding for NEPacketTunnelNetworkSettings {}

extern_methods!(
    #[cfg(feature = "NETunnelNetworkSettings")]
    unsafe impl NEPacketTunnelNetworkSettings {
        #[cfg(feature = "NEIPv4Settings")]
        #[method_id(@__retain_semantics Other IPv4Settings)]
        pub unsafe fn IPv4Settings(&self) -> Option<Retained<NEIPv4Settings>>;

        #[cfg(feature = "NEIPv4Settings")]
        #[method(setIPv4Settings:)]
        pub unsafe fn setIPv4Settings(&self, i_pv4_settings: Option<&NEIPv4Settings>);

        #[cfg(feature = "NEIPv6Settings")]
        #[method_id(@__retain_semantics Other IPv6Settings)]
        pub unsafe fn IPv6Settings(&self) -> Option<Retained<NEIPv6Settings>>;

        #[cfg(feature = "NEIPv6Settings")]
        #[method(setIPv6Settings:)]
        pub unsafe fn setIPv6Settings(&self, i_pv6_settings: Option<&NEIPv6Settings>);

        #[method_id(@__retain_semantics Other tunnelOverheadBytes)]
        pub unsafe fn tunnelOverheadBytes(&self) -> Option<Retained<NSNumber>>;

        #[method(setTunnelOverheadBytes:)]
        pub unsafe fn setTunnelOverheadBytes(&self, tunnel_overhead_bytes: Option<&NSNumber>);

        #[method_id(@__retain_semantics Other MTU)]
        pub unsafe fn MTU(&self) -> Option<Retained<NSNumber>>;

        #[method(setMTU:)]
        pub unsafe fn setMTU(&self, mtu: Option<&NSNumber>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NETunnelNetworkSettings`
    #[cfg(feature = "NETunnelNetworkSettings")]
    unsafe impl NEPacketTunnelNetworkSettings {
        #[method_id(@__retain_semantics Init initWithTunnelRemoteAddress:)]
        pub unsafe fn initWithTunnelRemoteAddress(
            this: Allocated<Self>,
            address: &NSString,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "NETunnelNetworkSettings")]
    unsafe impl NEPacketTunnelNetworkSettings {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
