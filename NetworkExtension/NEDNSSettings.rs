//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NEDNSProtocol(pub NSInteger);
impl NEDNSProtocol {
    #[doc(alias = "NEDNSProtocolCleartext")]
    pub const Cleartext: Self = Self(1);
    #[doc(alias = "NEDNSProtocolTLS")]
    pub const TLS: Self = Self(2);
    #[doc(alias = "NEDNSProtocolHTTPS")]
    pub const HTTPS: Self = Self(3);
}

unsafe impl Encode for NEDNSProtocol {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for NEDNSProtocol {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NEDNSSettings;

    unsafe impl ClassType for NEDNSSettings {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for NEDNSSettings {}

unsafe impl NSCopying for NEDNSSettings {}

unsafe impl CopyingHelper for NEDNSSettings {
    type Result = Self;
}

unsafe impl NSObjectProtocol for NEDNSSettings {}

unsafe impl NSSecureCoding for NEDNSSettings {}

extern_methods!(
    unsafe impl NEDNSSettings {
        #[method(dnsProtocol)]
        pub unsafe fn dnsProtocol(&self) -> NEDNSProtocol;

        #[method_id(@__retain_semantics Init initWithServers:)]
        pub unsafe fn initWithServers(
            this: Allocated<Self>,
            servers: &NSArray<NSString>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other servers)]
        pub unsafe fn servers(&self) -> Retained<NSArray<NSString>>;

        #[method_id(@__retain_semantics Other searchDomains)]
        pub unsafe fn searchDomains(&self) -> Option<Retained<NSArray<NSString>>>;

        #[method(setSearchDomains:)]
        pub unsafe fn setSearchDomains(&self, search_domains: Option<&NSArray<NSString>>);

        #[method_id(@__retain_semantics Other domainName)]
        pub unsafe fn domainName(&self) -> Option<Retained<NSString>>;

        #[method(setDomainName:)]
        pub unsafe fn setDomainName(&self, domain_name: Option<&NSString>);

        #[method_id(@__retain_semantics Other matchDomains)]
        pub unsafe fn matchDomains(&self) -> Option<Retained<NSArray<NSString>>>;

        #[method(setMatchDomains:)]
        pub unsafe fn setMatchDomains(&self, match_domains: Option<&NSArray<NSString>>);

        #[method(matchDomainsNoSearch)]
        pub unsafe fn matchDomainsNoSearch(&self) -> bool;

        #[method(setMatchDomainsNoSearch:)]
        pub unsafe fn setMatchDomainsNoSearch(&self, match_domains_no_search: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NEDNSSettings {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NEDNSOverTLSSettings;

    unsafe impl ClassType for NEDNSOverTLSSettings {
        #[inherits(NSObject)]
        type Super = NEDNSSettings;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for NEDNSOverTLSSettings {}

unsafe impl NSCopying for NEDNSOverTLSSettings {}

unsafe impl CopyingHelper for NEDNSOverTLSSettings {
    type Result = Self;
}

unsafe impl NSObjectProtocol for NEDNSOverTLSSettings {}

unsafe impl NSSecureCoding for NEDNSOverTLSSettings {}

extern_methods!(
    unsafe impl NEDNSOverTLSSettings {
        #[method_id(@__retain_semantics Other serverName)]
        pub unsafe fn serverName(&self) -> Option<Retained<NSString>>;

        #[method(setServerName:)]
        pub unsafe fn setServerName(&self, server_name: Option<&NSString>);

        #[method_id(@__retain_semantics Other identityReference)]
        pub unsafe fn identityReference(&self) -> Option<Retained<NSData>>;

        #[method(setIdentityReference:)]
        pub unsafe fn setIdentityReference(&self, identity_reference: Option<&NSData>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NEDNSSettings`
    unsafe impl NEDNSOverTLSSettings {
        #[method_id(@__retain_semantics Init initWithServers:)]
        pub unsafe fn initWithServers(
            this: Allocated<Self>,
            servers: &NSArray<NSString>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NEDNSOverTLSSettings {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NEDNSOverHTTPSSettings;

    unsafe impl ClassType for NEDNSOverHTTPSSettings {
        #[inherits(NSObject)]
        type Super = NEDNSSettings;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for NEDNSOverHTTPSSettings {}

unsafe impl NSCopying for NEDNSOverHTTPSSettings {}

unsafe impl CopyingHelper for NEDNSOverHTTPSSettings {
    type Result = Self;
}

unsafe impl NSObjectProtocol for NEDNSOverHTTPSSettings {}

unsafe impl NSSecureCoding for NEDNSOverHTTPSSettings {}

extern_methods!(
    unsafe impl NEDNSOverHTTPSSettings {
        #[method_id(@__retain_semantics Other serverURL)]
        pub unsafe fn serverURL(&self) -> Option<Retained<NSURL>>;

        #[method(setServerURL:)]
        pub unsafe fn setServerURL(&self, server_url: Option<&NSURL>);

        #[method_id(@__retain_semantics Other identityReference)]
        pub unsafe fn identityReference(&self) -> Option<Retained<NSData>>;

        #[method(setIdentityReference:)]
        pub unsafe fn setIdentityReference(&self, identity_reference: Option<&NSData>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NEDNSSettings`
    unsafe impl NEDNSOverHTTPSSettings {
        #[method_id(@__retain_semantics Init initWithServers:)]
        pub unsafe fn initWithServers(
            this: Allocated<Self>,
            servers: &NSArray<NSString>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NEDNSOverHTTPSSettings {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
