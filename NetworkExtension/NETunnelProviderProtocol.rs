//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "NEVPNProtocol")]
    pub struct NETunnelProviderProtocol;

    #[cfg(feature = "NEVPNProtocol")]
    unsafe impl ClassType for NETunnelProviderProtocol {
        #[inherits(NSObject)]
        type Super = NEVPNProtocol;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "NEVPNProtocol")]
unsafe impl NSCoding for NETunnelProviderProtocol {}

#[cfg(feature = "NEVPNProtocol")]
unsafe impl NSCopying for NETunnelProviderProtocol {}

#[cfg(feature = "NEVPNProtocol")]
unsafe impl NSObjectProtocol for NETunnelProviderProtocol {}

#[cfg(feature = "NEVPNProtocol")]
unsafe impl NSSecureCoding for NETunnelProviderProtocol {}

extern_methods!(
    #[cfg(feature = "NEVPNProtocol")]
    unsafe impl NETunnelProviderProtocol {
        #[method_id(@__retain_semantics Other providerConfiguration)]
        pub unsafe fn providerConfiguration(&self)
            -> Option<Id<NSDictionary<NSString, AnyObject>>>;

        #[method(setProviderConfiguration:)]
        pub unsafe fn setProviderConfiguration(
            &self,
            provider_configuration: Option<&NSDictionary<NSString, AnyObject>>,
        );

        #[method_id(@__retain_semantics Other providerBundleIdentifier)]
        pub unsafe fn providerBundleIdentifier(&self) -> Option<Id<NSString>>;

        #[method(setProviderBundleIdentifier:)]
        pub unsafe fn setProviderBundleIdentifier(
            &self,
            provider_bundle_identifier: Option<&NSString>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "NEVPNProtocol")]
    unsafe impl NETunnelProviderProtocol {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
