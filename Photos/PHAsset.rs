//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phasset?language=objc)
    #[unsafe(super(PHObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PHObject")]
    pub struct PHAsset;
);

#[cfg(feature = "PHObject")]
unsafe impl Send for PHAsset {}

#[cfg(feature = "PHObject")]
unsafe impl Sync for PHAsset {}

#[cfg(feature = "PHObject")]
unsafe impl NSCopying for PHAsset {}

#[cfg(feature = "PHObject")]
unsafe impl CopyingHelper for PHAsset {
    type Result = Self;
}

#[cfg(feature = "PHObject")]
unsafe impl NSObjectProtocol for PHAsset {}

extern_methods!(
    #[cfg(feature = "PHObject")]
    unsafe impl PHAsset {
        #[cfg(feature = "PhotosTypes")]
        #[method(playbackStyle)]
        pub unsafe fn playbackStyle(&self) -> PHAssetPlaybackStyle;

        #[cfg(feature = "PhotosTypes")]
        #[method(mediaType)]
        pub unsafe fn mediaType(&self) -> PHAssetMediaType;

        #[cfg(feature = "PhotosTypes")]
        #[method(mediaSubtypes)]
        pub unsafe fn mediaSubtypes(&self) -> PHAssetMediaSubtype;

        #[method(pixelWidth)]
        pub unsafe fn pixelWidth(&self) -> NSUInteger;

        #[method(pixelHeight)]
        pub unsafe fn pixelHeight(&self) -> NSUInteger;

        #[method_id(creationDate)]
        #[unsafe(method_family = none)]
        pub unsafe fn creationDate(&self) -> Option<Retained<NSDate>>;

        #[method_id(modificationDate)]
        #[unsafe(method_family = none)]
        pub unsafe fn modificationDate(&self) -> Option<Retained<NSDate>>;

        #[cfg(feature = "objc2-core-location")]
        #[method_id(location)]
        #[unsafe(method_family = none)]
        pub unsafe fn location(&self) -> Option<Retained<CLLocation>>;

        #[method(duration)]
        pub unsafe fn duration(&self) -> NSTimeInterval;

        #[method(isHidden)]
        pub unsafe fn isHidden(&self) -> bool;

        #[method(isFavorite)]
        pub unsafe fn isFavorite(&self) -> bool;

        #[deprecated = "No longer supported"]
        #[method(isSyncFailureHidden)]
        pub unsafe fn isSyncFailureHidden(&self) -> bool;

        #[method_id(burstIdentifier)]
        #[unsafe(method_family = none)]
        pub unsafe fn burstIdentifier(&self) -> Option<Retained<NSString>>;

        #[cfg(feature = "PhotosTypes")]
        #[method(burstSelectionTypes)]
        pub unsafe fn burstSelectionTypes(&self) -> PHAssetBurstSelectionType;

        #[method(representsBurst)]
        pub unsafe fn representsBurst(&self) -> bool;

        #[cfg(feature = "PhotosTypes")]
        #[method(sourceType)]
        pub unsafe fn sourceType(&self) -> PHAssetSourceType;

        #[method(hasAdjustments)]
        pub unsafe fn hasAdjustments(&self) -> bool;

        #[method_id(adjustmentFormatIdentifier)]
        #[unsafe(method_family = none)]
        pub unsafe fn adjustmentFormatIdentifier(&self) -> Option<Retained<NSString>>;

        #[cfg(feature = "PhotosTypes")]
        #[method(canPerformEditOperation:)]
        pub unsafe fn canPerformEditOperation(&self, edit_operation: PHAssetEditOperation) -> bool;

        #[cfg(all(
            feature = "PHCollection",
            feature = "PHFetchOptions",
            feature = "PHFetchResult"
        ))]
        #[method_id(fetchAssetsInAssetCollection:options:)]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchAssetsInAssetCollection_options(
            asset_collection: &PHAssetCollection,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAsset>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(fetchAssetsWithLocalIdentifiers:options:)]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchAssetsWithLocalIdentifiers_options(
            identifiers: &NSArray<NSString>,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAsset>>;

        #[cfg(all(
            feature = "PHCollection",
            feature = "PHFetchOptions",
            feature = "PHFetchResult"
        ))]
        #[method_id(fetchKeyAssetsInAssetCollection:options:)]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchKeyAssetsInAssetCollection_options(
            asset_collection: &PHAssetCollection,
            options: Option<&PHFetchOptions>,
        ) -> Option<Retained<PHFetchResult<PHAsset>>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(fetchAssetsWithBurstIdentifier:options:)]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchAssetsWithBurstIdentifier_options(
            burst_identifier: &NSString,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAsset>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(fetchAssetsWithOptions:)]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchAssetsWithOptions(
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAsset>>;

        #[cfg(all(
            feature = "PHFetchOptions",
            feature = "PHFetchResult",
            feature = "PhotosTypes"
        ))]
        #[method_id(fetchAssetsWithMediaType:options:)]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchAssetsWithMediaType_options(
            media_type: PHAssetMediaType,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAsset>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[deprecated = "Will be removed in a future release"]
        #[method_id(fetchAssetsWithALAssetURLs:options:)]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchAssetsWithALAssetURLs_options(
            asset_ur_ls: &NSArray<NSURL>,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAsset>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "PHObject")]
    unsafe impl PHAsset {
        #[method_id(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
