//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phcollection?language=objc)
    #[unsafe(super(PHObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PHObject")]
    pub struct PHCollection;
);

#[cfg(feature = "PHObject")]
unsafe impl Send for PHCollection {}

#[cfg(feature = "PHObject")]
unsafe impl Sync for PHCollection {}

#[cfg(feature = "PHObject")]
unsafe impl NSCopying for PHCollection {}

#[cfg(feature = "PHObject")]
unsafe impl CopyingHelper for PHCollection {
    type Result = Self;
}

#[cfg(feature = "PHObject")]
unsafe impl NSObjectProtocol for PHCollection {}

extern_methods!(
    #[cfg(feature = "PHObject")]
    unsafe impl PHCollection {
        #[method(canContainAssets)]
        pub unsafe fn canContainAssets(&self) -> bool;

        #[method(canContainCollections)]
        pub unsafe fn canContainCollections(&self) -> bool;

        #[method_id(@__method_family Other localizedTitle)]
        pub unsafe fn localizedTitle(&self) -> Option<Retained<NSString>>;

        #[cfg(feature = "PhotosTypes")]
        #[method(canPerformEditOperation:)]
        pub unsafe fn canPerformEditOperation(
            &self,
            an_operation: PHCollectionEditOperation,
        ) -> bool;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(@__method_family Other fetchCollectionsInCollectionList:options:)]
        pub unsafe fn fetchCollectionsInCollectionList_options(
            collection_list: &PHCollectionList,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHCollection>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(@__method_family Other fetchTopLevelUserCollectionsWithOptions:)]
        pub unsafe fn fetchTopLevelUserCollectionsWithOptions(
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHCollection>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "PHObject")]
    unsafe impl PHCollection {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phassetcollection?language=objc)
    #[unsafe(super(PHCollection, PHObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PHObject")]
    pub struct PHAssetCollection;
);

#[cfg(feature = "PHObject")]
unsafe impl Send for PHAssetCollection {}

#[cfg(feature = "PHObject")]
unsafe impl Sync for PHAssetCollection {}

#[cfg(feature = "PHObject")]
unsafe impl NSCopying for PHAssetCollection {}

#[cfg(feature = "PHObject")]
unsafe impl CopyingHelper for PHAssetCollection {
    type Result = Self;
}

#[cfg(feature = "PHObject")]
unsafe impl NSObjectProtocol for PHAssetCollection {}

extern_methods!(
    #[cfg(feature = "PHObject")]
    unsafe impl PHAssetCollection {
        #[cfg(feature = "PhotosTypes")]
        #[method(assetCollectionType)]
        pub unsafe fn assetCollectionType(&self) -> PHAssetCollectionType;

        #[cfg(feature = "PhotosTypes")]
        #[method(assetCollectionSubtype)]
        pub unsafe fn assetCollectionSubtype(&self) -> PHAssetCollectionSubtype;

        #[method(estimatedAssetCount)]
        pub unsafe fn estimatedAssetCount(&self) -> NSUInteger;

        #[method_id(@__method_family Other startDate)]
        pub unsafe fn startDate(&self) -> Option<Retained<NSDate>>;

        #[method_id(@__method_family Other endDate)]
        pub unsafe fn endDate(&self) -> Option<Retained<NSDate>>;

        #[cfg(feature = "objc2-core-location")]
        #[method_id(@__method_family Other approximateLocation)]
        pub unsafe fn approximateLocation(&self) -> Option<Retained<CLLocation>>;

        #[method_id(@__method_family Other localizedLocationNames)]
        pub unsafe fn localizedLocationNames(&self) -> Retained<NSArray<NSString>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(@__method_family Other fetchAssetCollectionsWithLocalIdentifiers:options:)]
        pub unsafe fn fetchAssetCollectionsWithLocalIdentifiers_options(
            identifiers: &NSArray<NSString>,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAssetCollection>>;

        #[cfg(all(
            feature = "PHFetchOptions",
            feature = "PHFetchResult",
            feature = "PhotosTypes"
        ))]
        #[method_id(@__method_family Other fetchAssetCollectionsWithType:subtype:options:)]
        pub unsafe fn fetchAssetCollectionsWithType_subtype_options(
            r#type: PHAssetCollectionType,
            subtype: PHAssetCollectionSubtype,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAssetCollection>>;

        #[cfg(all(
            feature = "PHAsset",
            feature = "PHFetchOptions",
            feature = "PHFetchResult",
            feature = "PhotosTypes"
        ))]
        #[method_id(@__method_family Other fetchAssetCollectionsContainingAsset:withType:options:)]
        pub unsafe fn fetchAssetCollectionsContainingAsset_withType_options(
            asset: &PHAsset,
            r#type: PHAssetCollectionType,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAssetCollection>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[deprecated = "Will be removed in a future release"]
        #[method_id(@__method_family Other fetchAssetCollectionsWithALAssetGroupURLs:options:)]
        pub unsafe fn fetchAssetCollectionsWithALAssetGroupURLs_options(
            asset_group_ur_ls: &NSArray<NSURL>,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAssetCollection>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[deprecated = "Will be removed in a future release"]
        #[method_id(@__method_family Other fetchMomentsInMomentList:options:)]
        pub unsafe fn fetchMomentsInMomentList_options(
            moment_list: &PHCollectionList,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAssetCollection>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[deprecated = "Will be removed in a future release"]
        #[method_id(@__method_family Other fetchMomentsWithOptions:)]
        pub unsafe fn fetchMomentsWithOptions(
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHAssetCollection>>;

        #[cfg(feature = "PHAsset")]
        #[method_id(@__method_family Other transientAssetCollectionWithAssets:title:)]
        pub unsafe fn transientAssetCollectionWithAssets_title(
            assets: &NSArray<PHAsset>,
            title: Option<&NSString>,
        ) -> Retained<PHAssetCollection>;

        #[cfg(all(feature = "PHAsset", feature = "PHFetchResult"))]
        #[method_id(@__method_family Other transientAssetCollectionWithAssetFetchResult:title:)]
        pub unsafe fn transientAssetCollectionWithAssetFetchResult_title(
            fetch_result: &PHFetchResult<PHAsset>,
            title: Option<&NSString>,
        ) -> Retained<PHAssetCollection>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "PHObject")]
    unsafe impl PHAssetCollection {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phcollectionlist?language=objc)
    #[unsafe(super(PHCollection, PHObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PHObject")]
    pub struct PHCollectionList;
);

#[cfg(feature = "PHObject")]
unsafe impl Send for PHCollectionList {}

#[cfg(feature = "PHObject")]
unsafe impl Sync for PHCollectionList {}

#[cfg(feature = "PHObject")]
unsafe impl NSCopying for PHCollectionList {}

#[cfg(feature = "PHObject")]
unsafe impl CopyingHelper for PHCollectionList {
    type Result = Self;
}

#[cfg(feature = "PHObject")]
unsafe impl NSObjectProtocol for PHCollectionList {}

extern_methods!(
    #[cfg(feature = "PHObject")]
    unsafe impl PHCollectionList {
        #[cfg(feature = "PhotosTypes")]
        #[method(collectionListType)]
        pub unsafe fn collectionListType(&self) -> PHCollectionListType;

        #[cfg(feature = "PhotosTypes")]
        #[method(collectionListSubtype)]
        pub unsafe fn collectionListSubtype(&self) -> PHCollectionListSubtype;

        #[method_id(@__method_family Other startDate)]
        pub unsafe fn startDate(&self) -> Option<Retained<NSDate>>;

        #[method_id(@__method_family Other endDate)]
        pub unsafe fn endDate(&self) -> Option<Retained<NSDate>>;

        #[method_id(@__method_family Other localizedLocationNames)]
        pub unsafe fn localizedLocationNames(&self) -> Retained<NSArray<NSString>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(@__method_family Other fetchCollectionListsContainingCollection:options:)]
        pub unsafe fn fetchCollectionListsContainingCollection_options(
            collection: &PHCollection,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHCollectionList>>;

        #[cfg(all(feature = "PHFetchOptions", feature = "PHFetchResult"))]
        #[method_id(@__method_family Other fetchCollectionListsWithLocalIdentifiers:options:)]
        pub unsafe fn fetchCollectionListsWithLocalIdentifiers_options(
            identifiers: &NSArray<NSString>,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHCollectionList>>;

        #[cfg(all(
            feature = "PHFetchOptions",
            feature = "PHFetchResult",
            feature = "PhotosTypes"
        ))]
        #[method_id(@__method_family Other fetchCollectionListsWithType:subtype:options:)]
        pub unsafe fn fetchCollectionListsWithType_subtype_options(
            collection_list_type: PHCollectionListType,
            subtype: PHCollectionListSubtype,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHCollectionList>>;

        #[cfg(all(
            feature = "PHFetchOptions",
            feature = "PHFetchResult",
            feature = "PhotosTypes"
        ))]
        #[deprecated = "Will be removed in a future release"]
        #[method_id(@__method_family Other fetchMomentListsWithSubtype:containingMoment:options:)]
        pub unsafe fn fetchMomentListsWithSubtype_containingMoment_options(
            moment_list_subtype: PHCollectionListSubtype,
            moment: &PHAssetCollection,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHCollectionList>>;

        #[cfg(all(
            feature = "PHFetchOptions",
            feature = "PHFetchResult",
            feature = "PhotosTypes"
        ))]
        #[deprecated = "Will be removed in a future release"]
        #[method_id(@__method_family Other fetchMomentListsWithSubtype:options:)]
        pub unsafe fn fetchMomentListsWithSubtype_options(
            moment_list_subtype: PHCollectionListSubtype,
            options: Option<&PHFetchOptions>,
        ) -> Retained<PHFetchResult<PHCollectionList>>;

        #[method_id(@__method_family Other transientCollectionListWithCollections:title:)]
        pub unsafe fn transientCollectionListWithCollections_title(
            collections: &NSArray<PHCollection>,
            title: Option<&NSString>,
        ) -> Retained<PHCollectionList>;

        #[cfg(feature = "PHFetchResult")]
        #[method_id(@__method_family Other transientCollectionListWithCollectionsFetchResult:title:)]
        pub unsafe fn transientCollectionListWithCollectionsFetchResult_title(
            fetch_result: &PHFetchResult<PHCollection>,
            title: Option<&NSString>,
        ) -> Retained<PHCollectionList>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "PHObject")]
    unsafe impl PHCollectionList {
        #[method_id(@__method_family Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__method_family New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
