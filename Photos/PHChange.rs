//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phchange?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHChange;
);

unsafe impl Send for PHChange {}

unsafe impl Sync for PHChange {}

unsafe impl NSObjectProtocol for PHChange {}

extern_methods!(
    unsafe impl PHChange {
        #[cfg(feature = "PHObject")]
        #[unsafe(method(changeDetailsForObject:))]
        #[unsafe(method_family = none)]
        pub unsafe fn changeDetailsForObject(
            &self,
            object: &PHObject,
        ) -> Option<Retained<PHObjectChangeDetails>>;

        #[cfg(feature = "PHFetchResult")]
        #[unsafe(method(changeDetailsForFetchResult:))]
        #[unsafe(method_family = none)]
        pub unsafe fn changeDetailsForFetchResult(
            &self,
            object: &PHFetchResult,
        ) -> Option<Retained<PHFetchResultChangeDetails>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl PHChange {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phobjectchangedetails?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHObjectChangeDetails<ObjectType: ?Sized = AnyObject>;
);

unsafe impl<ObjectType: ?Sized> NSObjectProtocol for PHObjectChangeDetails<ObjectType> {}

extern_methods!(
    unsafe impl<ObjectType: Message> PHObjectChangeDetails<ObjectType> {
        #[unsafe(method(objectBeforeChanges))]
        #[unsafe(method_family = none)]
        pub unsafe fn objectBeforeChanges(&self) -> Retained<ObjectType>;

        #[unsafe(method(objectAfterChanges))]
        #[unsafe(method_family = none)]
        pub unsafe fn objectAfterChanges(&self) -> Option<Retained<ObjectType>>;

        #[unsafe(method(assetContentChanged))]
        #[unsafe(method_family = none)]
        pub unsafe fn assetContentChanged(&self) -> bool;

        #[unsafe(method(objectWasDeleted))]
        #[unsafe(method_family = none)]
        pub unsafe fn objectWasDeleted(&self) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl<ObjectType: Message> PHObjectChangeDetails<ObjectType> {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phfetchresultchangedetails?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHFetchResultChangeDetails<ObjectType: ?Sized = AnyObject>;
);

unsafe impl<ObjectType: ?Sized> NSObjectProtocol for PHFetchResultChangeDetails<ObjectType> {}

extern_methods!(
    unsafe impl<ObjectType: Message> PHFetchResultChangeDetails<ObjectType> {
        #[cfg(feature = "PHFetchResult")]
        #[unsafe(method(fetchResultBeforeChanges))]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchResultBeforeChanges(&self) -> Retained<PHFetchResult<ObjectType>>;

        #[cfg(feature = "PHFetchResult")]
        #[unsafe(method(fetchResultAfterChanges))]
        #[unsafe(method_family = none)]
        pub unsafe fn fetchResultAfterChanges(&self) -> Retained<PHFetchResult<ObjectType>>;

        #[unsafe(method(hasIncrementalChanges))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasIncrementalChanges(&self) -> bool;

        #[unsafe(method(removedIndexes))]
        #[unsafe(method_family = none)]
        pub unsafe fn removedIndexes(&self) -> Option<Retained<NSIndexSet>>;

        #[unsafe(method(removedObjects))]
        #[unsafe(method_family = none)]
        pub unsafe fn removedObjects(&self) -> Retained<NSArray<ObjectType>>;

        #[unsafe(method(insertedIndexes))]
        #[unsafe(method_family = none)]
        pub unsafe fn insertedIndexes(&self) -> Option<Retained<NSIndexSet>>;

        #[unsafe(method(insertedObjects))]
        #[unsafe(method_family = none)]
        pub unsafe fn insertedObjects(&self) -> Retained<NSArray<ObjectType>>;

        #[unsafe(method(changedIndexes))]
        #[unsafe(method_family = none)]
        pub unsafe fn changedIndexes(&self) -> Option<Retained<NSIndexSet>>;

        #[unsafe(method(changedObjects))]
        #[unsafe(method_family = none)]
        pub unsafe fn changedObjects(&self) -> Retained<NSArray<ObjectType>>;

        #[cfg(feature = "block2")]
        #[unsafe(method(enumerateMovesWithBlock:))]
        #[unsafe(method_family = none)]
        pub unsafe fn enumerateMovesWithBlock(
            &self,
            handler: &block2::Block<dyn Fn(NSUInteger, NSUInteger)>,
        );

        #[unsafe(method(hasMoves))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasMoves(&self) -> bool;

        #[cfg(feature = "PHFetchResult")]
        #[unsafe(method(changeDetailsFromFetchResult:toFetchResult:changedObjects:))]
        #[unsafe(method_family = none)]
        pub unsafe fn changeDetailsFromFetchResult_toFetchResult_changedObjects(
            from_result: &PHFetchResult<ObjectType>,
            to_result: &PHFetchResult<ObjectType>,
            changed_objects: &NSArray<ObjectType>,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl<ObjectType: Message> PHFetchResultChangeDetails<ObjectType> {
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
