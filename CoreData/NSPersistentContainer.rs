//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coredata/nspersistentcontainer?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSPersistentContainer;
);

unsafe impl Send for NSPersistentContainer {}

unsafe impl Sync for NSPersistentContainer {}

unsafe impl NSObjectProtocol for NSPersistentContainer {}

extern_methods!(
    unsafe impl NSPersistentContainer {
        #[method(persistentContainerWithName:)]
        #[unsafe(method_family = none)]
        pub unsafe fn persistentContainerWithName(name: &NSString) -> Retained<Self>;

        #[cfg(feature = "NSManagedObjectModel")]
        #[method(persistentContainerWithName:managedObjectModel:)]
        #[unsafe(method_family = none)]
        pub unsafe fn persistentContainerWithName_managedObjectModel(
            name: &NSString,
            model: &NSManagedObjectModel,
        ) -> Retained<Self>;

        #[method(defaultDirectoryURL)]
        #[unsafe(method_family = none)]
        pub unsafe fn defaultDirectoryURL() -> Retained<NSURL>;

        #[method(name)]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "NSManagedObjectContext")]
        #[method(viewContext)]
        #[unsafe(method_family = none)]
        pub unsafe fn viewContext(&self) -> Retained<NSManagedObjectContext>;

        #[cfg(feature = "NSManagedObjectModel")]
        #[method(managedObjectModel)]
        #[unsafe(method_family = none)]
        pub unsafe fn managedObjectModel(&self) -> Retained<NSManagedObjectModel>;

        #[cfg(feature = "NSPersistentStoreCoordinator")]
        #[method(persistentStoreCoordinator)]
        #[unsafe(method_family = none)]
        pub unsafe fn persistentStoreCoordinator(&self) -> Retained<NSPersistentStoreCoordinator>;

        #[cfg(feature = "NSPersistentStoreDescription")]
        #[method(persistentStoreDescriptions)]
        #[unsafe(method_family = none)]
        pub unsafe fn persistentStoreDescriptions(
            &self,
        ) -> Retained<NSArray<NSPersistentStoreDescription>>;

        #[cfg(feature = "NSPersistentStoreDescription")]
        /// Setter for [`persistentStoreDescriptions`][Self::persistentStoreDescriptions].
        #[method(setPersistentStoreDescriptions:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setPersistentStoreDescriptions(
            &self,
            persistent_store_descriptions: &NSArray<NSPersistentStoreDescription>,
        );

        #[method(initWithName:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithName(this: Allocated<Self>, name: &NSString) -> Retained<Self>;

        #[cfg(feature = "NSManagedObjectModel")]
        #[method(initWithName:managedObjectModel:)]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithName_managedObjectModel(
            this: Allocated<Self>,
            name: &NSString,
            model: &NSManagedObjectModel,
        ) -> Retained<Self>;

        #[cfg(all(feature = "NSPersistentStoreDescription", feature = "block2"))]
        #[method(loadPersistentStoresWithCompletionHandler:)]
        #[unsafe(method_family = none)]
        pub unsafe fn loadPersistentStoresWithCompletionHandler(
            &self,
            block: &block2::Block<dyn Fn(NonNull<NSPersistentStoreDescription>, *mut NSError)>,
        );

        #[cfg(feature = "NSManagedObjectContext")]
        #[method(newBackgroundContext)]
        #[unsafe(method_family = new)]
        pub unsafe fn newBackgroundContext(&self) -> Retained<NSManagedObjectContext>;

        #[cfg(all(feature = "NSManagedObjectContext", feature = "block2"))]
        #[method(performBackgroundTask:)]
        #[unsafe(method_family = none)]
        pub unsafe fn performBackgroundTask(
            &self,
            block: &block2::Block<dyn Fn(NonNull<NSManagedObjectContext>)>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSPersistentContainer {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
