//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coredata/nsderivedattributedescription?language=objc)
    #[unsafe(super(NSAttributeDescription, NSPropertyDescription, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "NSAttributeDescription", feature = "NSPropertyDescription"))]
    pub struct NSDerivedAttributeDescription;
);

#[cfg(all(feature = "NSAttributeDescription", feature = "NSPropertyDescription"))]
unsafe impl NSCoding for NSDerivedAttributeDescription {}

#[cfg(all(feature = "NSAttributeDescription", feature = "NSPropertyDescription"))]
unsafe impl NSCopying for NSDerivedAttributeDescription {}

#[cfg(all(feature = "NSAttributeDescription", feature = "NSPropertyDescription"))]
unsafe impl CopyingHelper for NSDerivedAttributeDescription {
    type Result = Self;
}

#[cfg(all(feature = "NSAttributeDescription", feature = "NSPropertyDescription"))]
unsafe impl NSObjectProtocol for NSDerivedAttributeDescription {}

extern_methods!(
    #[cfg(all(feature = "NSAttributeDescription", feature = "NSPropertyDescription"))]
    unsafe impl NSDerivedAttributeDescription {
        #[method(derivationExpression)]
        #[unsafe(method_family = none)]
        pub unsafe fn derivationExpression(&self) -> Option<Retained<NSExpression>>;

        /// Setter for [`derivationExpression`][Self::derivationExpression].
        #[method(setDerivationExpression:)]
        #[unsafe(method_family = none)]
        pub unsafe fn setDerivationExpression(&self, derivation_expression: Option<&NSExpression>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "NSAttributeDescription", feature = "NSPropertyDescription"))]
    unsafe impl NSDerivedAttributeDescription {
        #[method(init)]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method(new)]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
