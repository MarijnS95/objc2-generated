//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coredata/nsincrementalstorenode?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSIncrementalStoreNode;
);

unsafe impl NSObjectProtocol for NSIncrementalStoreNode {}

extern_methods!(
    unsafe impl NSIncrementalStoreNode {
        #[cfg(feature = "NSManagedObjectID")]
        #[unsafe(method_family(init))]
        #[method_id(initWithObjectID:withValues:version:)]
        pub unsafe fn initWithObjectID_withValues_version(
            this: Allocated<Self>,
            object_id: &NSManagedObjectID,
            values: &NSDictionary<NSString, AnyObject>,
            version: u64,
        ) -> Retained<Self>;

        #[method(updateWithValues:version:)]
        pub unsafe fn updateWithValues_version(
            &self,
            values: &NSDictionary<NSString, AnyObject>,
            version: u64,
        );

        #[cfg(feature = "NSManagedObjectID")]
        #[unsafe(method_family(none))]
        #[method_id(objectID)]
        pub unsafe fn objectID(&self) -> Retained<NSManagedObjectID>;

        #[method(version)]
        pub unsafe fn version(&self) -> u64;

        #[cfg(feature = "NSPropertyDescription")]
        #[unsafe(method_family(none))]
        #[method_id(valueForPropertyDescription:)]
        pub unsafe fn valueForPropertyDescription(
            &self,
            prop: &NSPropertyDescription,
        ) -> Option<Retained<AnyObject>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSIncrementalStoreNode {
        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
