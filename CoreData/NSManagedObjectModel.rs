//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coredata/nsmanagedobjectmodel?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSManagedObjectModel;
);

unsafe impl NSCoding for NSManagedObjectModel {}

unsafe impl NSCopying for NSManagedObjectModel {}

unsafe impl CopyingHelper for NSManagedObjectModel {
    type Result = Self;
}

unsafe impl NSFastEnumeration for NSManagedObjectModel {}

unsafe impl NSObjectProtocol for NSManagedObjectModel {}

extern_methods!(
    unsafe impl NSManagedObjectModel {
        #[unsafe(method_family(none))]
        #[method_id(mergedModelFromBundles:)]
        pub unsafe fn mergedModelFromBundles(
            bundles: Option<&NSArray<NSBundle>>,
        ) -> Option<Retained<NSManagedObjectModel>>;

        #[unsafe(method_family(none))]
        #[method_id(modelByMergingModels:)]
        pub unsafe fn modelByMergingModels(
            models: Option<&NSArray<NSManagedObjectModel>>,
        ) -> Option<Retained<NSManagedObjectModel>>;

        #[unsafe(method_family(init))]
        #[method_id(init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method_family(init))]
        #[method_id(initWithContentsOfURL:)]
        pub unsafe fn initWithContentsOfURL(
            this: Allocated<Self>,
            url: &NSURL,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "NSEntityDescription")]
        #[unsafe(method_family(none))]
        #[method_id(entitiesByName)]
        pub unsafe fn entitiesByName(
            &self,
        ) -> Retained<NSDictionary<NSString, NSEntityDescription>>;

        #[cfg(feature = "NSEntityDescription")]
        #[unsafe(method_family(none))]
        #[method_id(entities)]
        pub unsafe fn entities(&self) -> Retained<NSArray<NSEntityDescription>>;

        #[cfg(feature = "NSEntityDescription")]
        /// Setter for [`entities`][Self::entities].
        #[method(setEntities:)]
        pub unsafe fn setEntities(&self, entities: &NSArray<NSEntityDescription>);

        #[unsafe(method_family(none))]
        #[method_id(configurations)]
        pub unsafe fn configurations(&self) -> Retained<NSArray<NSString>>;

        #[cfg(feature = "NSEntityDescription")]
        #[unsafe(method_family(none))]
        #[method_id(entitiesForConfiguration:)]
        pub unsafe fn entitiesForConfiguration(
            &self,
            configuration: Option<&NSString>,
        ) -> Option<Retained<NSArray<NSEntityDescription>>>;

        #[cfg(feature = "NSEntityDescription")]
        #[method(setEntities:forConfiguration:)]
        pub unsafe fn setEntities_forConfiguration(
            &self,
            entities: &NSArray<NSEntityDescription>,
            configuration: &NSString,
        );

        #[cfg(all(feature = "NSFetchRequest", feature = "NSPersistentStoreRequest"))]
        #[method(setFetchRequestTemplate:forName:)]
        pub unsafe fn setFetchRequestTemplate_forName(
            &self,
            fetch_request_template: Option<&NSFetchRequest>,
            name: &NSString,
        );

        #[cfg(all(feature = "NSFetchRequest", feature = "NSPersistentStoreRequest"))]
        #[unsafe(method_family(none))]
        #[method_id(fetchRequestTemplateForName:)]
        pub unsafe fn fetchRequestTemplateForName(
            &self,
            name: &NSString,
        ) -> Option<Retained<NSFetchRequest>>;

        #[cfg(all(feature = "NSFetchRequest", feature = "NSPersistentStoreRequest"))]
        #[unsafe(method_family(none))]
        #[method_id(fetchRequestFromTemplateWithName:substitutionVariables:)]
        pub unsafe fn fetchRequestFromTemplateWithName_substitutionVariables(
            &self,
            name: &NSString,
            variables: &NSDictionary<NSString, AnyObject>,
        ) -> Option<Retained<NSFetchRequest>>;

        #[unsafe(method_family(none))]
        #[method_id(localizationDictionary)]
        pub unsafe fn localizationDictionary(
            &self,
        ) -> Option<Retained<NSDictionary<NSString, NSString>>>;

        /// Setter for [`localizationDictionary`][Self::localizationDictionary].
        #[method(setLocalizationDictionary:)]
        pub unsafe fn setLocalizationDictionary(
            &self,
            localization_dictionary: Option<&NSDictionary<NSString, NSString>>,
        );

        #[unsafe(method_family(none))]
        #[method_id(mergedModelFromBundles:forStoreMetadata:)]
        pub unsafe fn mergedModelFromBundles_forStoreMetadata(
            bundles: Option<&NSArray<NSBundle>>,
            metadata: &NSDictionary<NSString, AnyObject>,
        ) -> Option<Retained<NSManagedObjectModel>>;

        #[unsafe(method_family(none))]
        #[method_id(modelByMergingModels:forStoreMetadata:)]
        pub unsafe fn modelByMergingModels_forStoreMetadata(
            models: &NSArray<NSManagedObjectModel>,
            metadata: &NSDictionary<NSString, AnyObject>,
        ) -> Option<Retained<NSManagedObjectModel>>;

        #[cfg(all(feature = "NSFetchRequest", feature = "NSPersistentStoreRequest"))]
        #[unsafe(method_family(none))]
        #[method_id(fetchRequestTemplatesByName)]
        pub unsafe fn fetchRequestTemplatesByName(
            &self,
        ) -> Retained<NSDictionary<NSString, NSFetchRequest>>;

        #[unsafe(method_family(none))]
        #[method_id(versionIdentifiers)]
        pub unsafe fn versionIdentifiers(&self) -> Retained<NSSet>;

        /// Setter for [`versionIdentifiers`][Self::versionIdentifiers].
        #[method(setVersionIdentifiers:)]
        pub unsafe fn setVersionIdentifiers(&self, version_identifiers: &NSSet);

        #[method(isConfiguration:compatibleWithStoreMetadata:)]
        pub unsafe fn isConfiguration_compatibleWithStoreMetadata(
            &self,
            configuration: Option<&NSString>,
            metadata: &NSDictionary<NSString, AnyObject>,
        ) -> bool;

        #[unsafe(method_family(none))]
        #[method_id(entityVersionHashesByName)]
        pub unsafe fn entityVersionHashesByName(&self) -> Retained<NSDictionary<NSString, NSData>>;

        #[unsafe(method_family(none))]
        #[method_id(versionChecksum)]
        pub unsafe fn versionChecksum(&self) -> Retained<NSString>;

        #[unsafe(method_family(none))]
        #[method_id(checksumsForVersionedModelAtURL:error:_)]
        pub unsafe fn checksumsForVersionedModelAtURL_error(
            model_url: &NSURL,
        ) -> Result<Retained<NSDictionary<NSString, NSString>>, Retained<NSError>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSManagedObjectModel {
        #[unsafe(method_family(new))]
        #[method_id(new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
